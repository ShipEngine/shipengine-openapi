{
  "openapi": "3.0.0",
  "info": {
    "title": "ShipEngine API",
    "version": "1.0.0",
    "termsOfService": "https://www.shipengine.com/terms-of-service",
    "contact": {
      "name": "ShipEngine Sales & Support",
      "email": "sales@shipengine.com",
      "url": "https://www.shipengine.com/contact-us"
    },
    "description": "ShipEngine is the world's best multi-carrier shipping API, with more than 20 supported shipping carriers.  You can easily get and compare shipping rates, print labels, track your shipments, and validate addresses anywhere in the world.\n\n### Worldwide Major Carrier Support\nAccess the top global carriers in minutes—instead of weeks. Simply [connect your existing carrier accounts](https://docs.shipengine.com/docs/setup-a-carrier) in the API dashboard, and then [begin creating labels](https://docs.shipengine.com/docs/use-a-specific-service).\n\n### Real-Time Tracking\n[Track packages](https://docs.shipengine.com/docs/track-a-package) across any of our 20+ supported carrier accounts and create tracking events to keep your customers up-to-date. Easily integrate real-time tracking information for shipments into your app, email, or SMS.\n\n### Get Rates Across Carriers\nMake sure you ship as cost-effectively as possible by [quickly comparing rates](https://docs.shipengine.com/docs/get-shipping-rates) using the ShipEngine Rates API. As long as you have the carrier connected to your account, you'll be able to see and compare different rates and services.\n\n### Global Address Validation\nNo matter your shipping volume, failed deliveries and address change surcharges cut into your bottom line and damage perception with customers. Our address validation services ensure your packages make it to the right place the first time. [Learn how to leverage our address validation services here.](https://docs.shipengine.com/docs/address-validation)\n\nShipEngine supports address validation for over 180 countries, including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and more.\n"
  },
  "tags": [
    {
      "name": "addresses",
      "description": "No matter your shipping volume, failed deliveries and address change surcharges cut into your bottom line and damage perception with customers. Our address validation services ensure your packages make it to the right place the first time. [Learn how to leverage our address validation services here.](https://docs.shipengine.com/docs/address-validation)\n\nShipEngine supports address validation for virtually every country on Earth, including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others.\n",
      "externalDocs": {
        "url": "https://docs.shipengine.com/docs/address-validation",
        "description": "Address validation ensures accurate addresses and can lead to reduced shipping costs by preventing address correction surcharges. ShipEngine cross references multiple databases to validate addresses and identify potential deliverability issues.\n"
      }
    },
    {
      "name": "batches",
      "description": "batches\n"
    },
    {
      "name": "carrier_accounts",
      "description": "carrier accounts\n"
    },
    {
      "name": "carriers",
      "description": "carriers\n"
    },
    {
      "name": "insurance",
      "description": "insurance\n"
    },
    {
      "name": "labels",
      "description": "Print shipping labels for any of the top global carriers in minutes—instead of weeks. Simply [connect your existing carrier accounts](https://docs.shipengine.com/docs/setup-a-carrier) in the API dashboard, and then [begin creating labels](https://docs.shipengine.com/docs/use-a-specific-service).\n",
      "externalDocs": {
        "url": "https://docs.shipengine.com/docs/quickstart-create-a-label",
        "description": "Follow this quick start guide to create your first shipping label with ShipEngine"
      }
    },
    {
      "name": "manifests",
      "description": "manifests\n"
    },
    {
      "name": "natural_language_processing",
      "description": "ShipEngine's NLP (Natural Language Processing) APIs make it easy for you to extract structured shipping data — such as addresses, names, package weight and dimensions, insurance options, and more — from unstructured text like emails, PDFs, and chat messages.\n",
      "externalDocs": {
        "url": "https://docs.shipengine.com/docs/natural-language-processing-nlp",
        "description": "Find out how our Natural Language Processing APIs can help you extract useful and meaningful data from emails, documents, chat messages, or any other text source."
      }
    },
    {
      "name": "order_sources",
      "description": "order source accounts\n"
    },
    {
      "name": "packages",
      "description": "packages\n"
    },
    {
      "name": "rates",
      "description": "Make sure you ship as cost-effectively as possible by [quickly comparing rates](https://docs.shipengine.com/docs/get-shipping-rates) using the ShipEngine Rates API. As long as you have the carrier connected to your account, you'll be able to see and compare different rates and services.\n",
      "externalDocs": {
        "url": "https://docs.shipengine.com/docs/get-shipping-rates",
        "description": "This quick start guide shows you how to get shipping rates for multiple carriers so you can choose the fastest, cheapest, or most reliable option.\n"
      }
    },
    {
      "name": "shipments",
      "description": "Shipments are at the center of the ShipEngine API.  A shipment is the first step in [creating a shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label), or [creating a manifest](https://docs.shipengine.com/docs/understand-and-create-manifests).  It's also essential for [getting shipping rates](https://docs.shipengine.com/docs/get-shipping-rates).\n",
      "externalDocs": {
        "url": "https://docs.shipengine.com/docs/create-a-shipment",
        "description": "Learn about the shipment object model concept, and how to persist and re-use shipment data inside ShipEngine.\n"
      }
    },
    {
      "name": "tags",
      "description": "tags\n"
    },
    {
      "name": "tracking",
      "description": "[Track packages](https://docs.shipengine.com/docs/track-a-package) across any of our 20+ supported carrier accounts and create tracking events to keep your customers up-to-date. Easily integrate real-time tracking information for shipments into your app, email, or SMS.\n",
      "externalDocs": {
        "url": "https://docs.shipengine.com/docs/track-a-package",
        "description": "Learn how to use ShipEngine to track any package with a carrier and a tracking number"
      }
    },
    {
      "name": "warehouses",
      "description": "warehouses\n"
    },
    {
      "name": "webhooks",
      "description": "[Webhooks](https://docs.shipengine.com/docs/setting-up-web-hooks) are a powerful feature of ShipEngine that can save you from sending repeated polling requests to check on the state of something.  With webhooks, ShipEngine will automatically contact your servers when the stage changes.  This can include [parcel tracking](https://docs.shipengine.com/docs/track-a-package) events, notification of the completion of a [batch operation](https://docs.shipengine.com/docs/using-batches),  or new [salses orders](https://docs.shipengine.com/docs/sales-orders-getting-started).\n",
      "externalDocs": {
        "url": "https://docs.shipengine.com/docs/setting-up-web-hooks",
        "description": "Learn how to setup webhooks and start listening to ShipEngine events."
      }
    }
  ],
  "externalDocs": {
    "url": "https://docs.shipengine.com",
    "description": "ShipEngine's documentation is designed to help you start shipping as quickly as possible. With easy-to-follow quick start guides, detailed reference docs, and ready-made recipes for common use cases, you'll see real results in no time at all.\n"
  },
  "servers": [
    {
      "url": "https://api.shipengine.com"
    }
  ],
  "security": [
    {
      "api_key": []
    }
  ],
  "paths": {
    "/v1/addresses/recognize": {
      "summary": "Parse an address",
      "description": "Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's address-recognition API helps you extract meaningful address data (e.g. recipient name, address line 1, line 2, city, postal code) from this unstructured text.\n",
      "put": {
        "summary": "Parse an address",
        "description": "The address-recognition API makes it easy for you to extract address data from unstructured text, including the recipient name, line 1, line 2, city, postal code, and more.\n\nData often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's address-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed address data is returned in the same structure that's used for other ShipEngine APIs, such as address validation, rate quotes, and shipping labels.\n\n> **Note:** Address recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.\n",
        "tags": [
          "addresses",
          "natural_language_processing"
        ],
        "operationId": "address.parse",
        "requestBody": {
          "required": true,
          "description": "The only required field is `text`, which is the text to be parsed. You can optionally also provide an `address` containing already-known values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.\n",
          "content": {
            "application/json": {
              "schema": {
                "title": "recognize_address_request_body",
                "type": "object",
                "description": "The only required field is `text`, which is the text to be parsed. You can optionally also provide an `address` containing already-known values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.\n",
                "required": [
                  "text"
                ],
                "additionalProperties": false,
                "properties": {
                  "text": {
                    "type": "string",
                    "minLength": 1,
                    "example": "Margie McMiller at 3800 North Lamar suite 200 in austin, tx.  The zip code there is 78652.",
                    "description": "The unstructured text that contains address-related entities"
                  },
                  "address": {
                    "description": "You can optionally provide any already-known address values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.\n",
                    "title": "partial_address",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "John Doe",
                        "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                      },
                      "phone": {
                        "type": "string",
                        "minLength": 1,
                        "example": "+1 204-253-9411 ext. 123",
                        "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                      },
                      "company_name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "The Home Depot",
                        "description": "If this is a business address, then the company name should be specified here.\n"
                      },
                      "address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "example": "1999 Bishop Grandin Blvd.",
                        "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                      },
                      "address_line2": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Unit 408",
                        "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "address_line3": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Building #7",
                        "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "city_locality": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Winnipeg",
                        "description": "The name of the city or locality"
                      },
                      "state_province": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Manitoba",
                        "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "example": "MB R2M 3E8",
                        "description": "postal code"
                      },
                      "country_code": {
                        "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                        "title": "country_code",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "CA"
                      },
                      "address_residential_indicator": {
                        "default": "unknown",
                        "example": "no",
                        "description": "Indicates whether this is a residential address.",
                        "title": "address_residential_indicator",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "yes",
                          "no"
                        ]
                      }
                    }
                  }
                }
              },
              "examples": {
                "text_only": {
                  "summary": "Text only",
                  "description": "This is the simplest way to call the address-recognition API. Just pass the text to be parsed and nothing else.\n",
                  "value": {
                    "text": "Margie McMiller at 3800 North Lamar suite 200 in austin, tx.  The zip code there is 78652."
                  }
                },
                "some_known_fields": {
                  "summary": "Some known fields",
                  "description": "You can optionally provide an `address` object containing any already-known values. For example, you may already know the recipient's name, city, and country, and only want to parse the street address into separate lines.\n",
                  "value": {
                    "text": "Margie McMiller at 3800 North Lamar suite 200 in austin, tx.  The zip code there is 78652.",
                    "address": {
                      "country_code": "US",
                      "address_residential_indicator": "yes"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "recognize_address_response_body",
                  "type": "object",
                  "description": "The parsed address, as well as a confidence score and a list of all the entities that were recognized in the text.\n",
                  "required": [
                    "score",
                    "address",
                    "entities"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "score": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "A confidence score between zero and one that indicates how certain the API is that it understood the text.\n"
                    },
                    "address": {
                      "description": "The parsed address.  This address may not be complete, depending on how much information was included in the text and how confident the API is about each recognized entity.\n\n> **Note:** The address-recognition API does not currently perform any validation of the parsed address, so we recommend that you use the [address-validation API](https://docs.shipengine.com/docs/address-validation) to ensure that the address is correct.\n",
                      "title": "partial_address",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "entities": {
                      "type": "array",
                      "minItems": 0,
                      "items": {
                        "title": "recognized_entity",
                        "type": "object",
                        "description": "An entity is a single piece of data that was recognized in unstructured text.  For example, a city, a postal code, package dimensions, insured value, etc.  Each entity includes the original text and the parsed value.\n",
                        "required": [
                          "type",
                          "score",
                          "text",
                          "start_index",
                          "end_index"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": "string",
                            "minLength": 1,
                            "description": "The Entity type (e.g. \"weight\", \"person\", \"address_line1\", etc.)"
                          },
                          "score": {
                            "format": "double",
                            "minimum": 0,
                            "maximum": 1,
                            "type": "number",
                            "description": "A confidence score between zero and one that indicates how certain the API is that it correctly recognized this entity\n"
                          },
                          "text": {
                            "type": "string",
                            "minLength": 1,
                            "description": "The substring from the original text that was recognized as this entity"
                          },
                          "start_index": {
                            "type": "number",
                            "format": "integer",
                            "minimum": 0,
                            "description": "The index of the first character of this entity within the original text"
                          },
                          "end_index": {
                            "type": "number",
                            "format": "integer",
                            "minimum": 0,
                            "description": "The index of the last character of this entity within the original text"
                          },
                          "result": {
                            "type": "object",
                            "description": "The result object is different for each entity type.\n\nMost entity results have a `value` field, which is the normalized value of the entity.  For example, if the substring \"john doe\" was recognized as a \"person\" entity, then the value might be normalized to have proper capitalization (e.g. \"John Doe\").  Or if the substring \"ft worth\" was recognized as a \"city\" entity, then the value might be normalized to \"Fort Worth\".\n\nSome entities have other information in addition to, or instead of a `value`.  For example, a \"dimensions\" entity will have separate fields for `length`, `width`, `height`, and `unit`.\n"
                          }
                        }
                      },
                      "description": "All of the entities that were recognized in the text. An \"entity\" is a single piece of data, such as a city, a postal code, or an address line.  Each entity includes the original text and the parsed value.\n"
                    }
                  }
                },
                "examples": {
                  "text_only": {
                    "description": "This response shows that the address-recognition API was able to recognize all the address entities in the text.  Notice that the `country_code` is not populated and the `address_residential_indicator` is \"unknown\", since neither of these fields was included in the text.\n",
                    "value": {
                      "score": 0.9122137426845613,
                      "address": {
                        "name": "Margie McMiller",
                        "address_line1": "3800 North Lamar",
                        "address_line2": "Suite 200",
                        "city_locality": "Austin",
                        "state_province": "TX",
                        "postal_code": 78652,
                        "address_residential_indicator": "unknown"
                      },
                      "entities": [
                        {
                          "type": "person",
                          "score": 0.9519646137063122,
                          "text": "Margie McMiller",
                          "start_index": 0,
                          "end_index": 14,
                          "result": {
                            "value": "Margie McMiller"
                          }
                        },
                        {
                          "type": "address_line",
                          "score": 0.9805313966503588,
                          "text": "3800 North Lamar",
                          "start_index": 19,
                          "end_index": 34,
                          "result": {
                            "line": 1,
                            "value": "3800 North Lamar"
                          }
                        },
                        {
                          "type": "number",
                          "score": 0.9805313966503588,
                          "text": 3800,
                          "start_index": 19,
                          "end_index": 22,
                          "result": {
                            "type": "cardinal",
                            "value": 3800
                          }
                        },
                        {
                          "type": "address_line",
                          "score": 1,
                          "text": "suite 200",
                          "start_index": 36,
                          "end_index": 44,
                          "result": {
                            "line": 2,
                            "value": "Suite 200"
                          }
                        },
                        {
                          "type": "number",
                          "score": 0.9805313966503588,
                          "text": 200,
                          "start_index": 42,
                          "end_index": 44,
                          "result": {
                            "type": "cardinal",
                            "value": 200
                          }
                        },
                        {
                          "type": "city_locality",
                          "score": 0.9805313966503588,
                          "text": "austin",
                          "start_index": 49,
                          "end_index": 54,
                          "result": {
                            "value": "Austin"
                          }
                        },
                        {
                          "type": "state_province",
                          "score": 0.6082904353940255,
                          "text": "tx",
                          "start_index": 57,
                          "end_index": 58,
                          "result": {
                            "name": "Texas",
                            "value": "TX"
                          }
                        },
                        {
                          "type": "postal_code",
                          "score": 0.9519646137063122,
                          "text": 78652,
                          "start_index": 84,
                          "end_index": 88,
                          "result": {
                            "value": 78652
                          }
                        }
                      ]
                    }
                  },
                  "some_known_fields": {
                    "description": "This response is shows that the address-recognition API was able to recognize all the address entities in the text.  Notice that the `country_code` and `address_residential_indicator` fields are populated with the values that were provided in the request.\n",
                    "value": {
                      "score": 0.9122137426845613,
                      "address": {
                        "name": "Margie McMiller",
                        "address_line1": "3800 North Lamar",
                        "address_line2": "Suite 200",
                        "city_locality": "Austin",
                        "state_province": "TX",
                        "postal_code": 78652,
                        "country_code": "US",
                        "address_residential_indicator": "yes"
                      },
                      "entities": [
                        {
                          "type": "person",
                          "score": 0.9519646137063122,
                          "text": "Margie McMiller",
                          "start_index": 0,
                          "end_index": 14,
                          "result": {
                            "value": "Margie McMiller"
                          }
                        },
                        {
                          "type": "address_line",
                          "score": 0.9805313966503588,
                          "text": "3800 North Lamar",
                          "start_index": 19,
                          "end_index": 34,
                          "result": {
                            "line": 1,
                            "value": "3800 North Lamar"
                          }
                        },
                        {
                          "type": "number",
                          "score": 0.9805313966503588,
                          "text": 3800,
                          "start_index": 19,
                          "end_index": 22,
                          "result": {
                            "type": "cardinal",
                            "value": 3800
                          }
                        },
                        {
                          "type": "address_line",
                          "score": 1,
                          "text": "suite 200",
                          "start_index": 36,
                          "end_index": 44,
                          "result": {
                            "line": 2,
                            "value": "Suite 200"
                          }
                        },
                        {
                          "type": "number",
                          "score": 0.9805313966503588,
                          "text": 200,
                          "start_index": 42,
                          "end_index": 44,
                          "result": {
                            "type": "cardinal",
                            "value": 200
                          }
                        },
                        {
                          "type": "city_locality",
                          "score": 0.9805313966503588,
                          "text": "austin",
                          "start_index": 49,
                          "end_index": 54,
                          "result": {
                            "value": "Austin"
                          }
                        },
                        {
                          "type": "state_province",
                          "score": 0.6082904353940255,
                          "text": "tx",
                          "start_index": 57,
                          "end_index": 58,
                          "result": {
                            "name": "Texas",
                            "value": "TX"
                          }
                        },
                        {
                          "type": "postal_code",
                          "score": 0.9519646137063122,
                          "text": 78652,
                          "start_index": 84,
                          "end_index": 88,
                          "result": {
                            "value": 78652
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/addresses/validate": {
      "post": {
        "tags": [
          "addresses"
        ],
        "operationId": "addresses.validate_addresses",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "address_validation_request_body",
                "type": "array",
                "items": {
                  "title": "address",
                  "type": "object",
                  "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                  "required": [
                    "address_line1",
                    "city_locality",
                    "state_province",
                    "postal_code",
                    "country_code",
                    "address_residential_indicator"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "example": "John Doe",
                      "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                    },
                    "phone": {
                      "type": "string",
                      "minLength": 1,
                      "example": "+1 204-253-9411 ext. 123",
                      "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                    },
                    "company_name": {
                      "type": "string",
                      "minLength": 1,
                      "example": "The Home Depot",
                      "description": "If this is a business address, then the company name should be specified here.\n"
                    },
                    "address_line1": {
                      "type": "string",
                      "minLength": 1,
                      "example": "1999 Bishop Grandin Blvd.",
                      "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                    },
                    "address_line2": {
                      "type": "string",
                      "minLength": 1,
                      "example": "Unit 408",
                      "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                    },
                    "address_line3": {
                      "type": "string",
                      "minLength": 1,
                      "example": "Building #7",
                      "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                    },
                    "city_locality": {
                      "type": "string",
                      "minLength": 1,
                      "example": "Winnipeg",
                      "description": "The name of the city or locality"
                    },
                    "state_province": {
                      "type": "string",
                      "minLength": 1,
                      "example": "Manitoba",
                      "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                    },
                    "postal_code": {
                      "type": "string",
                      "minLength": 1,
                      "example": "MB R2M 3E8",
                      "description": "postal code"
                    },
                    "country_code": {
                      "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                      "title": "country_code",
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 2,
                      "example": "CA"
                    },
                    "address_residential_indicator": {
                      "default": "unknown",
                      "example": "no",
                      "description": "Indicates whether this is a residential address.",
                      "title": "address_residential_indicator",
                      "type": "string",
                      "enum": [
                        "unknown",
                        "yes",
                        "no"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "address_validation_response_body",
                  "type": "array",
                  "items": {
                    "title": "address_validation_result",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "status": {
                        "title": "address_validation_status",
                        "type": "string",
                        "enum": [
                          "unverified",
                          "verified",
                          "warning",
                          "error"
                        ],
                        "description": "The possible address validation status values"
                      },
                      "original_address": {
                        "title": "address",
                        "type": "object",
                        "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "matched_address": {
                        "title": "address",
                        "type": "object",
                        "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "messages": {
                        "type": "array",
                        "items": {
                          "title": "response_message",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "code": {
                              "title": "address_validation_code",
                              "type": "string",
                              "enum": [
                                "a1000",
                                "a1001",
                                "a1002",
                                "a1003",
                                "a1004",
                                "a1005",
                                "a1006",
                                "a1007",
                                "a1008",
                                "r1000",
                                "r1001",
                                "r1002",
                                "r1003"
                              ],
                              "description": "The error codes that can be returned by the address validation API"
                            },
                            "message": {
                              "type": "string"
                            },
                            "type": {
                              "title": "address_validation_message_type",
                              "type": "string",
                              "enum": [
                                "error",
                                "warning",
                                "info"
                              ],
                              "description": "The different types of messages that can be returned by the address validation API"
                            },
                            "detail_code": {
                              "title": "address_validation_detail_code",
                              "type": "string",
                              "enum": [
                                "unsupported_country",
                                "non_supported_country",
                                "minimum_postal_code_verification_failed",
                                "street_does_not_match_unique_street_name",
                                "multiple_directionals",
                                "multiple_matches",
                                "suite_not_valid",
                                "suite_missing",
                                "invalid_house_number",
                                "missing_house_number",
                                "invalid_box_number",
                                "missing_box_number",
                                "missing_cmra_or_private_mail_box_number",
                                "suite_has_no_secondaries",
                                "postal_code_changed_or_added",
                                "state_province_changed_or_added",
                                "city_locality_changed_or_added",
                                "urbanization_changed",
                                "street_name_spelling_changed_or_added",
                                "street_name_type_changed_or_added",
                                "street_direction_changed_or_added",
                                "suite_type_changed_or_added",
                                "suite_unit_number_changed_or_added",
                                "double_dependent_locality_changed_or_added",
                                "subadministrative_area_changed_or_added",
                                "subnational_area_changed_or_added",
                                "p_o_box_changed_or_added",
                                "premise_type_changed_or_added",
                                "house_number_changed",
                                "organization_changed_or_added",
                                "partially_verified_to_state_level",
                                "partially_verified_to_city_level",
                                "partially_verified_to_street_level",
                                "partially_verified_to_premise_level",
                                "verified_to_state_level",
                                "verified_to_city_level",
                                "verified_to_street_level",
                                "verified_to_premise_level",
                                "verified_to_suite_level",
                                "coded_to_street_lavel",
                                "coded_to_neighborhood_level",
                                "coded_to_community_level",
                                "coded_to_state_level",
                                "coded_to_rooftop_level",
                                "coded_to_rooftop_interpolation_level",
                                "name_max_length_exceeded",
                                "phone_max_length_exceeded",
                                "company_name_max_length_exceeded",
                                "line1_min_max_length",
                                "line2_max_length_exceeded",
                                "line3_max_length_exceeded",
                                "city_locality_max_length_exceeded",
                                "state_province_max_length_exceeded",
                                "invalid_postal_code",
                                "country_invalid_length"
                              ],
                              "description": "The detailed error codes that can be returned by the address validation API"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches": {
      "get": {
        "tags": [
          "batches"
        ],
        "operationId": "batches.list",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "title": "batch_status",
              "type": "string",
              "enum": [
                "open",
                "queued",
                "processing",
                "completed",
                "completed_with_errors",
                "archived",
                "notifying",
                "invalid"
              ],
              "description": "The possible batch status values"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            },
            "example": 2,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 25
            },
            "example": 50,
            "description": "The number of results to return per response."
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "schema": {
              "default": "desc",
              "title": "sort_dir",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "Controls the sort order of queries\n\n|Value     |Description\n|:---------|:-----------------------------------------------------\n|`asc`     |Return results in ascending order\n|`desc`    |Return results in descending order\n"
            },
            "description": "Controls the sort order of the query."
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "title": "batches_sort_by",
              "type": "string",
              "enum": [
                "ship_date",
                "processed_at"
              ],
              "description": "The possible batches sort by values"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "list_batch_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "batches": {
                      "type": "array",
                      "items": {
                        "title": "batch",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "label_layout": {
                            "type": "string"
                          },
                          "label_format": {
                            "title": "label_format",
                            "type": "string",
                            "enum": [
                              "pdf",
                              "png",
                              "zpl"
                            ],
                            "description": "The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `globegistics` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n"
                          },
                          "batch_id": {
                            "description": "A string that uniquely identifies the batch",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "external_batch_id": {
                            "description": "A string that uniquely identifies the external batch",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "batch_notes": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "processed_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "errors": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "warnings": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "completed": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "forms": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "count": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "batch_shipments_url": {
                            "title": "optional_link",
                            "type": "object",
                            "description": "A link to a related resource, or an empty object if there is no resource to link to",
                            "additionalProperties": false,
                            "properties": {
                              "href": {
                                "description": "The URL of the linked resource, if any",
                                "title": "url",
                                "type": "string",
                                "format": "url",
                                "minLength": 1,
                                "example": "http://api.shipengine.com/v1/labels/se-28529731"
                              },
                              "type": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The type of resource, or the type of relationship to the parent resource"
                              }
                            }
                          },
                          "batch_labels_url": {
                            "title": "optional_link",
                            "type": "object",
                            "description": "A link to a related resource, or an empty object if there is no resource to link to",
                            "additionalProperties": false,
                            "properties": {
                              "href": {
                                "description": "The URL of the linked resource, if any",
                                "title": "url",
                                "type": "string",
                                "format": "url",
                                "minLength": 1,
                                "example": "http://api.shipengine.com/v1/labels/se-28529731"
                              },
                              "type": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The type of resource, or the type of relationship to the parent resource"
                              }
                            }
                          },
                          "batch_errors_url": {
                            "title": "optional_link",
                            "type": "object",
                            "description": "A link to a related resource, or an empty object if there is no resource to link to",
                            "additionalProperties": false,
                            "properties": {
                              "href": {
                                "description": "The URL of the linked resource, if any",
                                "title": "url",
                                "type": "string",
                                "format": "url",
                                "minLength": 1,
                                "example": "http://api.shipengine.com/v1/labels/se-28529731"
                              },
                              "type": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The type of resource, or the type of relationship to the parent resource"
                              }
                            }
                          },
                          "label_download": {
                            "title": "optional_link",
                            "type": "object",
                            "description": "A link to a related resource, or an empty object if there is no resource to link to",
                            "additionalProperties": false,
                            "properties": {
                              "href": {
                                "description": "The URL of the linked resource, if any",
                                "title": "url",
                                "type": "string",
                                "format": "url",
                                "minLength": 1,
                                "example": "http://api.shipengine.com/v1/labels/se-28529731"
                              },
                              "type": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The type of resource, or the type of relationship to the parent resource"
                              }
                            }
                          },
                          "form_download": {
                            "title": "optional_link",
                            "type": "object",
                            "description": "A link to a related resource, or an empty object if there is no resource to link to",
                            "additionalProperties": false,
                            "properties": {
                              "href": {
                                "description": "The URL of the linked resource, if any",
                                "title": "url",
                                "type": "string",
                                "format": "url",
                                "minLength": 1,
                                "example": "http://api.shipengine.com/v1/labels/se-28529731"
                              },
                              "type": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The type of resource, or the type of relationship to the parent resource"
                              }
                            }
                          },
                          "status": {
                            "title": "batch_status",
                            "type": "string",
                            "enum": [
                              "open",
                              "queued",
                              "processing",
                              "completed",
                              "completed_with_errors",
                              "archived",
                              "notifying",
                              "invalid"
                            ],
                            "description": "The possible batch status values"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pages": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "links": {
                      "title": "pagination_link",
                      "type": "object",
                      "description": "Helpful links to other pages of results",
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "first": {
                          "description": "The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "last": {
                          "description": "The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "prev": {
                          "description": "The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "next": {
                          "description": "The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "batches"
        ],
        "operationId": "batches.create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "create_batch_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "external_batch_id": {
                    "description": "A string that uniquely identifies the external batch",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "batch_notes": {
                    "type": "string"
                  },
                  "shipment_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rate_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "create_batch_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "label_layout": {
                      "type": "string"
                    },
                    "label_format": {
                      "title": "label_format",
                      "type": "string",
                      "enum": [
                        "pdf",
                        "png",
                        "zpl"
                      ],
                      "description": "The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `globegistics` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n"
                    },
                    "batch_id": {
                      "description": "A string that uniquely identifies the batch",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "external_batch_id": {
                      "description": "A string that uniquely identifies the external batch",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "batch_notes": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "processed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "warnings": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "completed": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "forms": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "batch_shipments_url": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "batch_labels_url": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "batch_errors_url": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "label_download": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "form_download": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "status": {
                      "title": "batch_status",
                      "type": "string",
                      "enum": [
                        "open",
                        "queued",
                        "processing",
                        "completed",
                        "completed_with_errors",
                        "archived",
                        "notifying",
                        "invalid"
                      ],
                      "description": "The possible batch status values"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/external_batch_id/{external_batch_id}": {
      "get": {
        "tags": [
          "batches"
        ],
        "operationId": "batches.get_by_external_id",
        "parameters": [
          {
            "name": "external_batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "batches_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "label_layout": {
                      "type": "string"
                    },
                    "label_format": {
                      "title": "label_format",
                      "type": "string",
                      "enum": [
                        "pdf",
                        "png",
                        "zpl"
                      ],
                      "description": "The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `globegistics` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n"
                    },
                    "batch_id": {
                      "description": "A string that uniquely identifies the batch",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "external_batch_id": {
                      "description": "A string that uniquely identifies the external batch",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "batch_notes": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "processed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "warnings": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "completed": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "forms": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "batch_shipments_url": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "batch_labels_url": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "batch_errors_url": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "label_download": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "form_download": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "status": {
                      "title": "batch_status",
                      "type": "string",
                      "enum": [
                        "open",
                        "queued",
                        "processing",
                        "completed",
                        "completed_with_errors",
                        "archived",
                        "notifying",
                        "invalid"
                      ],
                      "description": "The possible batch status values"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/{batch_id}": {
      "get": {
        "tags": [
          "batches"
        ],
        "operationId": "batches.get_by_id",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "batches_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "label_layout": {
                      "type": "string"
                    },
                    "label_format": {
                      "title": "label_format",
                      "type": "string",
                      "enum": [
                        "pdf",
                        "png",
                        "zpl"
                      ],
                      "description": "The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `globegistics` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n"
                    },
                    "batch_id": {
                      "description": "A string that uniquely identifies the batch",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "external_batch_id": {
                      "description": "A string that uniquely identifies the external batch",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "batch_notes": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "processed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errors": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "warnings": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "completed": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "forms": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "batch_shipments_url": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "batch_labels_url": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "batch_errors_url": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "label_download": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "form_download": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "status": {
                      "title": "batch_status",
                      "type": "string",
                      "enum": [
                        "open",
                        "queued",
                        "processing",
                        "completed",
                        "completed_with_errors",
                        "archived",
                        "notifying",
                        "invalid"
                      ],
                      "description": "The possible batch status values"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/{batch_id}/add": {
      "post": {
        "tags": [
          "batches"
        ],
        "operationId": "batches.add_to_batch",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "modify_batch_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "shipment_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rate_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/{batch_id}/errors": {
      "get": {
        "tags": [
          "batches"
        ],
        "operationId": "batches.list_errors",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            },
            "example": 2,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 25
            },
            "example": 50,
            "description": "The number of results to return per response."
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "batch_errors_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "batch_response_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error": {
                            "type": "string"
                          },
                          "shipment_id": {
                            "description": "A string that uniquely identifies the shipment",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          }
                        }
                      }
                    },
                    "links": {
                      "title": "pagination_link",
                      "type": "object",
                      "description": "Helpful links to other pages of results",
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "first": {
                          "description": "The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "last": {
                          "description": "The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "prev": {
                          "description": "The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "next": {
                          "description": "The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/{batch_id}/process/labels": {
      "post": {
        "tags": [
          "batches"
        ],
        "operationId": "batches.process",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "process_batch_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ship_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "label_layout": {
                    "type": "string"
                  },
                  "label_format": {
                    "title": "label_format",
                    "type": "string",
                    "enum": [
                      "pdf",
                      "png",
                      "zpl"
                    ],
                    "description": "The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `globegistics` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/batches/{batch_id}/remove": {
      "post": {
        "tags": [
          "batches"
        ],
        "operationId": "batches.remove_from_batch",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "modify_batch_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "shipment_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rate_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/carriers": {
      "get": {
        "tags": [
          "carriers"
        ],
        "operationId": "carriers.list",
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "carrier_list_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "carriers": {
                      "type": "array",
                      "items": {
                        "title": "carrier",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "carrier_code": {
                            "type": "string"
                          },
                          "account_number": {
                            "type": "string"
                          },
                          "requires_funded_amount": {
                            "type": "boolean"
                          },
                          "balance": {
                            "type": "number",
                            "format": "double"
                          },
                          "nickname": {
                            "type": "string"
                          },
                          "friendly_name": {
                            "type": "string"
                          },
                          "primary": {
                            "type": "boolean"
                          },
                          "has_multi_package_supporting_services": {
                            "type": "boolean"
                          },
                          "supports_label_messages": {
                            "type": "boolean"
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "title": "service",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "carrier_id": {
                                  "description": "A string that uniquely identifies the carrier",
                                  "title": "se_id",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 25,
                                  "pattern": "^se(-[a-z0-9]+)+$",
                                  "example": "se-28529731"
                                },
                                "carrier_code": {
                                  "type": "string"
                                },
                                "service_code": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "domestic": {
                                  "type": "boolean"
                                },
                                "international": {
                                  "type": "boolean"
                                },
                                "is_multi_package_supported": {
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "packages": {
                            "type": "array",
                            "items": {
                              "title": "package_type",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "package_id": {
                                  "description": "A string that uniquely identifies the package",
                                  "title": "se_id",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 25,
                                  "pattern": "^se(-[a-z0-9]+)+$",
                                  "example": "se-28529731"
                                },
                                "package_code": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "dimensions": {
                                  "title": "dimensions",
                                  "type": "object",
                                  "description": "The dimensions of a package",
                                  "required": [
                                    "unit",
                                    "length",
                                    "width",
                                    "height"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "unit": {
                                      "default": "inch",
                                      "title": "dimension_unit",
                                      "type": "string",
                                      "enum": [
                                        "inch",
                                        "centimeter"
                                      ],
                                      "description": "The dimension units that are supported by ShipEngine."
                                    },
                                    "length": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The length of the package, in the specified unit"
                                    },
                                    "width": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The width of the package, in the specified unit"
                                    },
                                    "height": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The length of the package, in the specified unit"
                                    }
                                  }
                                },
                                "description": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "title": "carrier_advanced_option",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "default_value": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/carriers/{carrier_id}": {
      "get": {
        "tags": [
          "carriers"
        ],
        "operationId": "carriers.get_by_id",
        "parameters": [
          {
            "name": "carrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "carrier_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "carrier_id": {
                      "description": "A string that uniquely identifies the carrier",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_code": {
                      "type": "string"
                    },
                    "account_number": {
                      "type": "string"
                    },
                    "requires_funded_amount": {
                      "type": "boolean"
                    },
                    "balance": {
                      "type": "number",
                      "format": "double"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "friendly_name": {
                      "type": "string"
                    },
                    "primary": {
                      "type": "boolean"
                    },
                    "has_multi_package_supporting_services": {
                      "type": "boolean"
                    },
                    "supports_label_messages": {
                      "type": "boolean"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "title": "service",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "carrier_code": {
                            "type": "string"
                          },
                          "service_code": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "domestic": {
                            "type": "boolean"
                          },
                          "international": {
                            "type": "boolean"
                          },
                          "is_multi_package_supported": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "packages": {
                      "type": "array",
                      "items": {
                        "title": "package_type",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_id": {
                            "description": "A string that uniquely identifies the package",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "package_code": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "dimensions": {
                            "title": "dimensions",
                            "type": "object",
                            "description": "The dimensions of a package",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "title": "carrier_advanced_option",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "default_value": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/carriers/{carrier_id}/add_funds": {
      "put": {
        "tags": [
          "carriers"
        ],
        "operationId": "carriers.add_funds",
        "parameters": [
          {
            "name": "carrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "money_request_body",
                "type": "object",
                "additionalProperties": false,
                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                "required": [
                  "currency",
                  "amount"
                ],
                "properties": {
                  "currency": {
                    "title": "currency",
                    "type": "string",
                    "enum": [
                      "usd",
                      "cad",
                      "aud",
                      "gbp",
                      "eur"
                    ],
                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "description": "The monetary amount, in the specified currency."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "carrier_balance_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "balance": {
                      "title": "monetary_value",
                      "type": "object",
                      "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "title": "currency",
                          "type": "string",
                          "enum": [
                            "usd",
                            "cad",
                            "aud",
                            "gbp",
                            "eur"
                          ],
                          "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "description": "The monetary amount, in the specified currency."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/carriers/{carrier_id}/options": {
      "get": {
        "tags": [
          "carriers"
        ],
        "operationId": "carriers.get_options",
        "parameters": [
          {
            "name": "carrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "carrier_list_options_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "options": {
                      "type": "array",
                      "items": {
                        "title": "carrier_advanced_option",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "default_value": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/carriers/{carrier_id}/packages": {
      "get": {
        "tags": [
          "carriers"
        ],
        "operationId": "carriers.list_packages",
        "parameters": [
          {
            "name": "carrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "package_list_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "packages": {
                      "type": "array",
                      "items": {
                        "title": "package_type",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_id": {
                            "description": "A string that uniquely identifies the package",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "package_code": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "dimensions": {
                            "title": "dimensions",
                            "type": "object",
                            "description": "The dimensions of a package",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/carriers/{carrier_id}/services": {
      "get": {
        "tags": [
          "carriers"
        ],
        "operationId": "carriers.list_services",
        "parameters": [
          {
            "name": "carrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "carrier_list_services_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "title": "service",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "carrier_code": {
                            "type": "string"
                          },
                          "service_code": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "domestic": {
                            "type": "boolean"
                          },
                          "international": {
                            "type": "boolean"
                          },
                          "is_multi_package_supported": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/connections/carriers/{carrier_name}": {
      "summary": "Carrier connections",
      "parameters": [
        {
          "name": "carrier_name",
          "in": "path",
          "required": true,
          "schema": {
            "title": "carrier_name",
            "type": "string",
            "enum": [
              "access_worldwide",
              "apc",
              "asendia",
              "australia_post",
              "dhl_ecommerce",
              "dhl_express",
              "dhl_express_au",
              "dhl_express_ca",
              "dhl_express_uk",
              "dpd",
              "endicia",
              "fedex",
              "fedex_uk",
              "firstmile",
              "globegistics",
              "imex",
              "newgistics",
              "ontrac",
              "purolator_canada",
              "royal_mail",
              "rr_donnelley",
              "sendle",
              "stamps_com",
              "ups"
            ],
            "description": "The shipping carriers that are supported by ShipEngine"
          },
          "example": "dhl_express",
          "description": "The carrier name, such as `stamps_com`, `ups`, `fedex`, or `dhl_express`."
        }
      ],
      "post": {
        "summary": "Connect a carrier account",
        "tags": [
          "carrier_accounts"
        ],
        "operationId": "connect_carrier",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "connect_carrier_request_body",
                "oneOf": [
                  {
                    "title": "connect_access_worldwide_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_apc_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_asendia_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "account_number": {
                        "type": "string"
                      },
                      "ftp_username": {
                        "type": "string"
                      },
                      "ftp_password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_australia_post_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "account_number": {
                        "type": "string"
                      },
                      "api_key": {
                        "type": "string"
                      },
                      "api_secret": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_dhl_ecommerce_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "account_number": {
                        "type": "string"
                      },
                      "pickup_number": {
                        "type": "string"
                      },
                      "ftp_username": {
                        "type": "string"
                      },
                      "ftp_password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_dhl_express_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "account_number": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_dhl_express_au_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "account_number": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_dhl_express_ca_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "account_number": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_dhl_express_uk_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "account_number": {
                        "type": "string"
                      },
                      "site_id": {
                        "description": "A string that uniquely identifies the site",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "password": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_dpd_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "account_number": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_endicia_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "account": {
                        "type": "string"
                      },
                      "passphrase": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_fedex_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "account_number": {
                        "type": "string"
                      },
                      "address1": {
                        "type": "string"
                      },
                      "address2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "company": {
                        "type": "string"
                      },
                      "country_code": {
                        "type": "string"
                      },
                      "email": {
                        "description": "The email address",
                        "title": "email",
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "example": "john.doe@example.com"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      },
                      "agree_to_eula": {
                        "type": "boolean"
                      },
                      "meter_number": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_fedex_uk_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "account_number": {
                        "type": "string"
                      },
                      "address1": {
                        "type": "string"
                      },
                      "address2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "company": {
                        "type": "string"
                      },
                      "country_code": {
                        "type": "string"
                      },
                      "email": {
                        "description": "The email address",
                        "title": "email",
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "example": "john.doe@example.com"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "state_province": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      },
                      "agree_to_eula": {
                        "type": "boolean"
                      },
                      "meter_number": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_firstmile_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mailer_id": {
                        "description": "A string that uniquely identifies the mailer",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "profile_name": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_globegistics_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_imex_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_newgistics_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "merchant_id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "mailer_id": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "induction_site": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_ontrac_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "account_number": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_purolator_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "account_number": {
                        "type": "string"
                      },
                      "activation_key": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_royal_mail_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "account_number": {
                        "type": "string"
                      },
                      "oba_email": {
                        "description": "The oba email address",
                        "title": "email",
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "example": "john.doe@example.com"
                      },
                      "contact_name": {
                        "type": "string"
                      },
                      "email": {
                        "description": "The email address",
                        "title": "email",
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "example": "john.doe@example.com"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "street_line1": {
                        "type": "string"
                      },
                      "street_line2": {
                        "type": "string"
                      },
                      "street_line3": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "nickname": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_rr_donnelley_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_sendle_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "sendle_id": {
                        "description": "A string that uniquely identifies the sendle",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "api_key": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_stamps_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "connect_ups_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "account_number": {
                        "type": "string"
                      },
                      "account_country_code": {
                        "type": "string"
                      },
                      "account_postal_code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "company": {
                        "type": "string"
                      },
                      "address1": {
                        "type": "string"
                      },
                      "address2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      },
                      "country_code": {
                        "type": "string"
                      },
                      "email": {
                        "description": "The email address",
                        "title": "email",
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "example": "john.doe@example.com"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "invoice": {
                        "title": "ups_invoice",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "invoice_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "invoice_number": {
                            "type": "string"
                          },
                          "control_id": {
                            "description": "A string that uniquely identifies the control",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "invoice_amount": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "agree_to_technology_agreement": {
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "connect_account_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "carrier_id": {
                      "description": "A string that uniquely identifies the carrier",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/connections/carriers/{carrier_name}/{carrier_id}": {
      "summary": "Disconnect a carrier",
      "parameters": [
        {
          "name": "carrier_name",
          "in": "path",
          "required": true,
          "schema": {
            "title": "carrier_name",
            "type": "string",
            "enum": [
              "access_worldwide",
              "apc",
              "asendia",
              "australia_post",
              "dhl_ecommerce",
              "dhl_express",
              "dhl_express_au",
              "dhl_express_ca",
              "dhl_express_uk",
              "dpd",
              "endicia",
              "fedex",
              "fedex_uk",
              "firstmile",
              "globegistics",
              "imex",
              "newgistics",
              "ontrac",
              "purolator_canada",
              "royal_mail",
              "rr_donnelley",
              "sendle",
              "stamps_com",
              "ups"
            ],
            "description": "The shipping carriers that are supported by ShipEngine"
          },
          "example": "dhl_express",
          "description": "The carrier name, such as `stamps_com`, `ups`, `fedex`, or `dhl_express`."
        },
        {
          "name": "carrier_id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "se_id",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "pattern": "^se(-[a-z0-9]+)+$",
            "example": "se-28529731",
            "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
          }
        }
      ],
      "delete": {
        "summary": "Disconnect a carrier",
        "tags": [
          "carrier_accounts"
        ],
        "operationId": "disconnect_carrier",
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/connections/carriers/{carrier_name}/{carrier_id}/settings": {
      "summary": "Carrier settings",
      "parameters": [
        {
          "name": "carrier_name",
          "in": "path",
          "required": true,
          "schema": {
            "title": "carrier_name_with_settings",
            "type": "string",
            "enum": [
              "dhl_express",
              "fedex",
              "newgistics",
              "ups"
            ],
            "description": "The shipping carriers for which ShipEngine supports carrier settings"
          },
          "example": "dhl_express",
          "description": "The carrier name, such as `stamps_com`, `ups`, `fedex`, or `dhl_express`."
        },
        {
          "name": "carrier_id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "se_id",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "pattern": "^se(-[a-z0-9]+)+$",
            "example": "se-28529731",
            "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
          }
        }
      ],
      "get": {
        "summary": "Get carrier settings",
        "tags": [
          "carrier_accounts"
        ],
        "operationId": "get_carrier_settings",
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "get_carrier_settings_response_body",
                  "oneOf": [
                    {
                      "title": "dhl_express_settings_response_body",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "nickname": {
                          "type": "string"
                        },
                        "should_hide_account_number_on_archive_doc": {
                          "type": "boolean"
                        },
                        "is_primary_account": {
                          "type": "boolean"
                        }
                      }
                    },
                    {
                      "title": "fedex_settings_response_body",
                      "type": "object",
                      "additionalProperties": false,
                      "allOf": [
                        {
                          "title": "fedex_account_settings",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "nickname": {
                              "type": "string"
                            },
                            "pickup_type": {
                              "title": "fedex_pickup_type",
                              "type": "string",
                              "enum": [
                                "none",
                                "regular_pickup",
                                "request_courier",
                                "drop_box",
                                "business_service_center",
                                "station"
                              ],
                              "description": "The possible fedex pickup type values"
                            },
                            "smart_post_hub": {
                              "title": "smart_post_hub",
                              "type": "string",
                              "enum": [
                                "none",
                                "allentown_pa",
                                "atlanta_ga",
                                "baltimore_md",
                                "charlotte_nc",
                                "chino_ca",
                                "dallas_tx",
                                "denver_co",
                                "detroit_mi",
                                "edison_nj",
                                "grove_city_oh",
                                "groveport_oh",
                                "houston_tx",
                                "indianapolis_in",
                                "kansas_city_ks",
                                "los_angeles_ca",
                                "martinsburg_wv",
                                "memphis_tn",
                                "minneapolis_mn",
                                "new_berlin_wi",
                                "northborough_ma",
                                "orlando_fl",
                                "phoneix_az",
                                "pittsburgh_pa",
                                "reno_nv",
                                "sacramento_ca",
                                "salt_lake_city_ut",
                                "seattle_wa",
                                "st_louis_mo",
                                "windsor_ct",
                                "newark_ny",
                                "south_brunswick_nj",
                                "scranton_pa",
                                "wheeling_il"
                              ],
                              "description": "The possible smart post hub values"
                            },
                            "smart_post_endorsement": {
                              "title": "smart_post_endorsement",
                              "type": "string",
                              "enum": [
                                "none",
                                "return_service_requested",
                                "forwarding_service_requested",
                                "address_service_requested",
                                "change_service_requested",
                                "leave_if_no_response"
                              ],
                              "description": "The possible smart post endorsement values"
                            },
                            "is_primary_account": {
                              "type": "boolean"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "title": "ups_settings_response_body",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "nickname": {
                          "type": "string"
                        },
                        "is_primary_account": {
                          "type": "boolean"
                        },
                        "pickup_type": {
                          "title": "ups_pickup_type",
                          "type": "string",
                          "enum": [
                            "daily_pickup",
                            "occasional_pickup",
                            "customer_counter"
                          ],
                          "description": "The possible ups pickup type values"
                        },
                        "use_carbon_neutral_shipping_program": {
                          "type": "boolean"
                        },
                        "use_ground_freight_pricing": {
                          "type": "boolean"
                        },
                        "use_consolidation_services": {
                          "type": "boolean"
                        },
                        "use_order_number_on_mail_innovations_labels": {
                          "type": "boolean"
                        },
                        "mail_innovations_endorsement": {
                          "title": "mail_innovations_endorsement",
                          "type": "string",
                          "enum": [
                            "none",
                            "return_service_requested",
                            "forwarding_service_requested",
                            "address_service_requested",
                            "change_service_requested",
                            "leave_if_no_response"
                          ],
                          "description": "The possible mail innovations endorsement values"
                        },
                        "mail_innovations_cost_center": {
                          "type": "string"
                        },
                        "use_negotiated_rates": {
                          "type": "boolean"
                        },
                        "account_postal_code": {
                          "type": "string"
                        },
                        "invoice": {
                          "title": "ups_invoice",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "invoice_date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "invoice_number": {
                              "type": "string"
                            },
                            "control_id": {
                              "description": "A string that uniquely identifies the control",
                              "title": "se_id",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 25,
                              "pattern": "^se(-[a-z0-9]+)+$",
                              "example": "se-28529731"
                            },
                            "invoice_amount": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Edit carrier settings",
        "tags": [
          "carrier_accounts"
        ],
        "operationId": "update_carrier_settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "update_carrier_settings_request_body",
                "oneOf": [
                  {
                    "title": "update_dhl_express_settings_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "should_hide_account_number_on_archive_doc": {
                        "type": "boolean"
                      },
                      "is_primary_account": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "title": "update_fedex_settings_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "pickup_type": {
                        "title": "fedex_pickup_type",
                        "type": "string",
                        "enum": [
                          "none",
                          "regular_pickup",
                          "request_courier",
                          "drop_box",
                          "business_service_center",
                          "station"
                        ],
                        "description": "The possible fedex pickup type values"
                      },
                      "smart_post_hub": {
                        "title": "smart_post_hub",
                        "type": "string",
                        "enum": [
                          "none",
                          "allentown_pa",
                          "atlanta_ga",
                          "baltimore_md",
                          "charlotte_nc",
                          "chino_ca",
                          "dallas_tx",
                          "denver_co",
                          "detroit_mi",
                          "edison_nj",
                          "grove_city_oh",
                          "groveport_oh",
                          "houston_tx",
                          "indianapolis_in",
                          "kansas_city_ks",
                          "los_angeles_ca",
                          "martinsburg_wv",
                          "memphis_tn",
                          "minneapolis_mn",
                          "new_berlin_wi",
                          "northborough_ma",
                          "orlando_fl",
                          "phoneix_az",
                          "pittsburgh_pa",
                          "reno_nv",
                          "sacramento_ca",
                          "salt_lake_city_ut",
                          "seattle_wa",
                          "st_louis_mo",
                          "windsor_ct",
                          "newark_ny",
                          "south_brunswick_nj",
                          "scranton_pa",
                          "wheeling_il"
                        ],
                        "description": "The possible smart post hub values"
                      },
                      "smart_post_endorsement": {
                        "title": "smart_post_endorsement",
                        "type": "string",
                        "enum": [
                          "none",
                          "return_service_requested",
                          "forwarding_service_requested",
                          "address_service_requested",
                          "change_service_requested",
                          "leave_if_no_response"
                        ],
                        "description": "The possible smart post endorsement values"
                      },
                      "is_primary_account": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "title": "update_newgistics_settings_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "include_barcode_with_order_number": {
                        "type": "boolean"
                      },
                      "receive_email_on_manifest_processing": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "title": "update_ups_settings_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "is_primary_account": {
                        "type": "boolean"
                      },
                      "pickup_type": {
                        "title": "ups_pickup_type",
                        "type": "string",
                        "enum": [
                          "daily_pickup",
                          "occasional_pickup",
                          "customer_counter"
                        ],
                        "description": "The possible ups pickup type values"
                      },
                      "use_carbon_neutral_shipping_program": {
                        "type": "boolean"
                      },
                      "use_ground_freight_pricing": {
                        "type": "boolean"
                      },
                      "use_consolidation_services": {
                        "type": "boolean"
                      },
                      "use_order_number_on_mail_innovations_labels": {
                        "type": "boolean"
                      },
                      "mail_innovations_endorsement": {
                        "title": "mail_innovations_endorsement",
                        "type": "string",
                        "enum": [
                          "none",
                          "return_service_requested",
                          "forwarding_service_requested",
                          "address_service_requested",
                          "change_service_requested",
                          "leave_if_no_response"
                        ],
                        "description": "The possible mail innovations endorsement values"
                      },
                      "mail_innovations_cost_center": {
                        "type": "string"
                      },
                      "use_negotiated_rates": {
                        "type": "boolean"
                      },
                      "account_postal_code": {
                        "type": "string"
                      },
                      "invoice": {
                        "title": "ups_invoice",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "invoice_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "invoice_number": {
                            "type": "string"
                          },
                          "control_id": {
                            "description": "A string that uniquely identifies the control",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "invoice_amount": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/connections/carriers/stamps_com/{carrier_id}/request_account_url": {
      "parameters": [
        {
          "name": "carrier_id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "se_id",
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "pattern": "^se(-[a-z0-9]+)+$",
            "example": "se-28529731",
            "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
          }
        }
      ],
      "put": {
        "summary": "Get carrier account URL",
        "tags": [
          "carrier_accounts"
        ],
        "operationId": "get_stamps_account_url",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "stamps_account_urls_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "url_types": {
                    "type": "array",
                    "items": {
                      "title": "url_type",
                      "type": "string",
                      "enum": [
                        "account_settings",
                        "report_balances",
                        "manifest_form",
                        "payment_methods"
                      ],
                      "description": "The possible url type values"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "stamps_account_url_list_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "urls": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "url_type": {
                            "title": "url_type",
                            "type": "string",
                            "enum": [
                              "account_settings",
                              "report_balances",
                              "manifest_form",
                              "payment_methods"
                            ],
                            "description": "The possible url type values"
                          },
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/environment/webhooks": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "operationId": "environment.webhooks",
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "webhook_list_response_body",
                  "type": "array",
                  "items": {
                    "title": "webhook_response_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "webhook_id": {
                        "description": "A string that uniquely identifies the webhook",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "url": {
                        "type": "string"
                      },
                      "event": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "operationId": "environment.create_webhook",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "create_webhook_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "event": {
                    "title": "event",
                    "type": "string",
                    "enum": [
                      "rate",
                      "track",
                      "batch",
                      "order_source_refresh_complete",
                      "sales_orders_imported",
                      "carrier_connected"
                    ],
                    "description": "The possible event values"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "webhook_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "webhook_id": {
                      "description": "A string that uniquely identifies the webhook",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "url": {
                      "type": "string"
                    },
                    "event": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The request conflicts with an existing resource.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/environment/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "operationId": "environment.get_webhook_by_id",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "webhook_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "webhook_id": {
                      "description": "A string that uniquely identifies the webhook",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "url": {
                      "type": "string"
                    },
                    "event": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "webhooks"
        ],
        "operationId": "environment.update_webhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "update_webhook_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "webhooks"
        ],
        "operationId": "environment.delete_webhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/insurance/shipsurance/add_funds": {
      "patch": {
        "tags": [
          "insurance"
        ],
        "operationId": "insurance.add_funds",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "money_request_body",
                "type": "object",
                "additionalProperties": false,
                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                "required": [
                  "currency",
                  "amount"
                ],
                "properties": {
                  "currency": {
                    "title": "currency",
                    "type": "string",
                    "enum": [
                      "usd",
                      "cad",
                      "aud",
                      "gbp",
                      "eur"
                    ],
                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "description": "The monetary amount, in the specified currency."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "insurance_balance_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                  "required": [
                    "currency",
                    "amount"
                  ],
                  "properties": {
                    "currency": {
                      "title": "currency",
                      "type": "string",
                      "enum": [
                        "usd",
                        "cad",
                        "aud",
                        "gbp",
                        "eur"
                      ],
                      "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                    },
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "description": "The monetary amount, in the specified currency."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/insurance/shipsurance/balance": {
      "get": {
        "tags": [
          "insurance"
        ],
        "operationId": "insurance.get_balance",
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "insurance_balance_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                  "required": [
                    "currency",
                    "amount"
                  ],
                  "properties": {
                    "currency": {
                      "title": "currency",
                      "type": "string",
                      "enum": [
                        "usd",
                        "cad",
                        "aud",
                        "gbp",
                        "eur"
                      ],
                      "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                    },
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "description": "The monetary amount, in the specified currency."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/labels": {
      "summary": "Print shipping labels",
      "description": "Print shipping labels for any of the top global carriers in minutes—instead of weeks. Simply [connect your existing carrier accounts](https://docs.shipengine.com/docs/setup-a-carrier) in the API dashboard, and then [begin creating labels](https://docs.shipengine.com/docs/use-a-specific-service).\n",
      "get": {
        "summary": "List labels",
        "description": "This endpoint returns a list of labels that you've [created](https://docs.shipengine.com/docs/quickstart-create-a-label). You can optionally filter the results as well as control their sort order and the number of results returned at a time.\n\nBy default, all labels are returned, 25 at a time, starting with the most recently created ones.  You can combine multiple filter options to narrow-down the results.  For example, if you only want to get your UPS labels for your east coast warehouse you could query by both `warehouse_id` and `carrier_id`\n\n> **Warning:** Test labels (those created with `test_label: true`) are not included in the results.  If you've only ever created test labels, then the results will be empty.\n",
        "tags": [
          "labels"
        ],
        "operationId": "list_labels",
        "parameters": [
          {
            "name": "label_status",
            "in": "query",
            "required": false,
            "schema": {
              "title": "label_status",
              "type": "string",
              "enum": [
                "processing",
                "completed",
                "error",
                "voided"
              ],
              "description": "The possible statuses that a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label) can be in.\n\n|Status       |Description\n|:------------|:-----------------------------------------------------\n|`processing` |When labels are created in a [batch](https://docs.shipengine.com/docs/using-batches), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status.\n|`completed`  |The label was successfully created\n|`error`      |The label could not be created due to an error, such as an invalid delivery address\n|`voided`     |The label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
            },
            "description": "Only return labels that are currently in the specified status"
          },
          {
            "name": "service_code",
            "in": "query",
            "required": false,
            "schema": {
              "title": "service_code",
              "type": "string",
              "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
              "example": "usps_first_class_mail",
              "description": "A [carrier service](https://docs.shipengine.com/docs/use-a-specific-service), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n"
            },
            "example": "usps_first_class_mail",
            "description": "Only return labels for a specific [carrier service](https://docs.shipengine.com/docs/use-a-specific-service)"
          },
          {
            "description": "Only return labels for a specific [carrier account](https://docs.shipengine.com/docs/setup-a-carrier)",
            "name": "carrier_id",
            "in": "query",
            "required": false,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "description": "Only return labels with a specific tracking number",
            "name": "tracking_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only return labels that were created in a specific [batch](https://docs.shipengine.com/docs/using-batches)",
            "name": "batch_id",
            "in": "query",
            "required": false,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "description": "Only return labels that originate from a specific [warehouse](https://docs.shipengine.com/docs/ship-from-a-warehouse)",
            "name": "warehouse_id",
            "in": "query",
            "required": false,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "description": "Only return labels that were created on or after a specific date/time",
            "name": "created_at_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Only return labels that were created on or before a specific date/time",
            "name": "created_at_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            },
            "example": 2,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 25
            },
            "example": 50,
            "description": "The number of results to return per response."
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "schema": {
              "default": "desc",
              "title": "sort_dir",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "Controls the sort order of queries\n\n|Value     |Description\n|:---------|:-----------------------------------------------------\n|`asc`     |Return results in ascending order\n|`desc`    |Return results in descending order\n"
            },
            "description": "Controls the sort order of the query."
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "modified_at",
                "created_at"
              ],
              "default": "created_at"
            },
            "description": "Controls which field the query is sorted by."
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a `labels` array containing a page of results (as determined by the `page_size` query parameter).  It also includes other useful information, such as the total number of labels that match the query criteria, the number of pages of results, and the URLs of the first, last, next, and previous pages of results.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "list_label_response_body",
                  "type": "object",
                  "required": [
                    "labels",
                    "total",
                    "page",
                    "pages",
                    "links"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "labels": {
                      "type": "array",
                      "minItems": 0,
                      "description": "The labels that matched the query criteria.  If no matching labels were found, then this array is empty; otherwise, it contains one page of results.  The last page of results may have fewer labels than the `page_size`.\n",
                      "items": {
                        "title": "label",
                        "type": "object",
                        "description": "A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://docs.shipengine.com/docs/quickstart-create-a-label) and then download them in PDF, PNG, or ZPL format so you can print them.\n",
                        "required": [
                          "label_id",
                          "status",
                          "shipment_id",
                          "ship_date",
                          "created_at",
                          "shipment_cost",
                          "insurance_cost",
                          "tracking_number",
                          "is_return_label",
                          "rma_number",
                          "is_international",
                          "batch_id",
                          "carrier_id",
                          "service_code",
                          "package_code",
                          "voided",
                          "voided_at",
                          "label_format",
                          "label_layout",
                          "trackable",
                          "carrier_code",
                          "tracking_status",
                          "label_download",
                          "form_download",
                          "insurance_claim",
                          "packages"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "label_id": {
                            "readOnly": true,
                            "description": "A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.\n",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "status": {
                            "readOnly": true,
                            "title": "label_status",
                            "type": "string",
                            "enum": [
                              "processing",
                              "completed",
                              "error",
                              "voided"
                            ],
                            "description": "The possible statuses that a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label) can be in.\n\n|Status       |Description\n|:------------|:-----------------------------------------------------\n|`processing` |When labels are created in a [batch](https://docs.shipengine.com/docs/using-batches), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status.\n|`completed`  |The label was successfully created\n|`error`      |The label could not be created due to an error, such as an invalid delivery address\n|`voided`     |The label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                          },
                          "shipment_id": {
                            "readOnly": true,
                            "description": "The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://docs.shipengine.com/docs/quickstart-create-a-label), or you can [create your own shipment](https://docs.shipengine.com/docs/create-a-shipment) and then [use it to print a label](https://docs.shipengine.com/docs/use-a-shipment-to-print-a-label)\n",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "ship_date": {
                            "description": "The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                            "title": "date",
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                            "example": "2018-09-23T00:00:00.000Z"
                          },
                          "created_at": {
                            "readOnly": true,
                            "description": "The date and time that the label was created in ShipEngine.",
                            "title": "date_time",
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                            "example": "2018-09-23T15:00:00.000Z"
                          },
                          "shipment_cost": {
                            "readOnly": true,
                            "description": "The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "insurance_cost": {
                            "readOnly": true,
                            "description": "The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "tracking_number": {
                            "type": "string",
                            "minLength": 1,
                            "readOnly": true,
                            "example": "782758401696",
                            "description": "The tracking number for the package. Tracking number formats vary across carriers."
                          },
                          "is_return_label": {
                            "type": "boolean",
                            "description": "Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.\n"
                          },
                          "rma_number": {
                            "type": "string",
                            "description": "An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.\n"
                          },
                          "is_international": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Indicates whether this is an international shipment.  That is, the originating country and destination country are different.\n"
                          },
                          "batch_id": {
                            "readOnly": true,
                            "description": "If this label was created as part of a [batch](https://docs.shipengine.com/docs/using-batches), then this is the unique ID of that batch.\n",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "carrier_id": {
                            "readOnly": true,
                            "description": "The unique ID of the [carrier account](https://docs.shipengine.com/docs/setup-a-carrier) that was used to create this label\n",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "service_code": {
                            "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                            "title": "service_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                            "example": "usps_first_class_mail"
                          },
                          "package_code": {
                            "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                            "title": "package_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "small_flat_rate_box"
                          },
                          "voided": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Indicates whether the label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                          },
                          "voided_at": {
                            "nullable": true,
                            "readOnly": true,
                            "description": "The date and time that the label was [voided](https://docs.shipengine.com/docs/void-a-label), or `null` if the label has not been voided\n",
                            "title": "date_time",
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                            "example": "2018-09-23T15:00:00.000Z"
                          },
                          "label_format": {
                            "default": "pdf",
                            "description": "The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n",
                            "title": "label_format",
                            "type": "string",
                            "enum": [
                              "pdf",
                              "png",
                              "zpl"
                            ]
                          },
                          "label_layout": {
                            "default": "4x6",
                            "description": "The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n",
                            "title": "label_layout",
                            "type": "string",
                            "enum": [
                              "4x6",
                              "letter"
                            ]
                          },
                          "trackable": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.\n"
                          },
                          "carrier_code": {
                            "readOnly": true,
                            "description": "The [shipping carrier](https://docs.shipengine.com/docs/setup-a-carrier) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.\n",
                            "title": "carrier_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "dhl_express"
                          },
                          "tracking_status": {
                            "readOnly": true,
                            "description": "The current status of the package, such as `in_transit` or `delivered`",
                            "title": "tracking_status",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "in_transit",
                              "error",
                              "delivered"
                            ]
                          },
                          "label_download": {
                            "readOnly": true,
                            "description": "The URL to download the label.  The file format depends on the `label_format` and `label_layout` fields.\n\nThere are two different ways to download a label, depending on the `label_download_type` that you specified when creating or querying the label.  The `label_download_type` field defaults to `url`, which will return a URL that you can use to download the label.  If you set `label_download_type` to `inline`, then a [Data URI](https://en.wikipedia.org/wiki/Data_URI_scheme) will be returned. Data URIs include the data inline, so no additmional HTTP request is needed.  See [Download a Label](https://docs.shipengine.com/docs/download-a-label) for more details.\n",
                            "title": "link",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "href"
                            ],
                            "properties": {
                              "href": {
                                "description": "The URL of the linked resource, if any",
                                "title": "url",
                                "type": "string",
                                "format": "url",
                                "minLength": 1,
                                "example": "http://api.shipengine.com/v1/labels/se-28529731"
                              },
                              "type": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The type of resource, or the type of relationship to the parent resource"
                              }
                            }
                          },
                          "form_download": {
                            "readOnly": true,
                            "nullable": true,
                            "description": "The link to downlaod the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.\n",
                            "title": "link",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "href"
                            ],
                            "properties": {
                              "href": {
                                "description": "The URL of the linked resource, if any",
                                "title": "url",
                                "type": "string",
                                "format": "url",
                                "minLength": 1,
                                "example": "http://api.shipengine.com/v1/labels/se-28529731"
                              },
                              "type": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The type of resource, or the type of relationship to the parent resource"
                              }
                            }
                          },
                          "insurance_claim": {
                            "readOnly": true,
                            "nullable": true,
                            "description": "The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.\n",
                            "title": "link",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "href"
                            ],
                            "properties": {
                              "href": {
                                "description": "The URL of the linked resource, if any",
                                "title": "url",
                                "type": "string",
                                "format": "url",
                                "minLength": 1,
                                "example": "http://api.shipengine.com/v1/labels/se-28529731"
                              },
                              "type": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The type of resource, or the type of relationship to the parent resource"
                              }
                            }
                          },
                          "packages": {
                            "type": "array",
                            "description": "The label's package(s).\n\n> **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.\n",
                            "items": {
                              "title": "package",
                              "type": "object",
                              "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                              "required": [
                                "weight"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "package_code": {
                                  "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                                  "title": "package_code",
                                  "type": "string",
                                  "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                                  "example": "small_flat_rate_box"
                                },
                                "weight": {
                                  "description": "The package weight",
                                  "title": "weight",
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "unit"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "exclusiveMinimum": true,
                                      "description": "The weight, in the specified unit"
                                    },
                                    "unit": {
                                      "title": "weight_unit",
                                      "type": "string",
                                      "enum": [
                                        "pound",
                                        "ounce",
                                        "gram",
                                        "kilogram"
                                      ],
                                      "description": "The possible weight unit values"
                                    }
                                  }
                                },
                                "dimensions": {
                                  "description": "The package dimensions",
                                  "title": "dimensions",
                                  "type": "object",
                                  "required": [
                                    "unit",
                                    "length",
                                    "width",
                                    "height"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "unit": {
                                      "default": "inch",
                                      "title": "dimension_unit",
                                      "type": "string",
                                      "enum": [
                                        "inch",
                                        "centimeter"
                                      ],
                                      "description": "The dimension units that are supported by ShipEngine."
                                    },
                                    "length": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The length of the package, in the specified unit"
                                    },
                                    "width": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The width of the package, in the specified unit"
                                    },
                                    "height": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The length of the package, in the specified unit"
                                    }
                                  }
                                },
                                "insured_value": {
                                  "default": [
                                    {
                                      "currency": "usd",
                                      "amount": 0
                                    }
                                  ],
                                  "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                                  "title": "monetary_value",
                                  "type": "object",
                                  "required": [
                                    "currency",
                                    "amount"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "currency": {
                                      "title": "currency",
                                      "type": "string",
                                      "enum": [
                                        "usd",
                                        "cad",
                                        "aud",
                                        "gbp",
                                        "eur"
                                      ],
                                      "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                    },
                                    "amount": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "description": "The monetary amount, in the specified currency."
                                    }
                                  }
                                },
                                "tracking_number": {
                                  "readOnly": true,
                                  "description": "The tracking number for the package.  The format depends on the carrier.\n",
                                  "title": "tracking_number",
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "1Z932R800392060079"
                                },
                                "label_messages": {
                                  "type": "object",
                                  "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                                  "required": [
                                    "reference1",
                                    "reference2",
                                    "reference3"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "reference1": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                                    },
                                    "reference2": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                                    },
                                    "reference3": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 2750,
                      "description": "The total number of items across all pages of results"
                    },
                    "page": {
                      "type": "integer",
                      "minimum": 1,
                      "example": 1,
                      "description": "The current page number of results.  For example, if there are 80 results, and the page size is 25, then `page` could be 1, 2, 3, or 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items."
                    },
                    "pages": {
                      "type": "integer",
                      "minimum": 0,
                      "example": 4,
                      "description": "The total number of pages of results.  For example, if there are 80 results, and the page size is 25, then `pages` would be 4.  The first three pages would contain 25 items each, and the fourth page would contain the five remaining items.  If there are no results, then `pages` will be zero."
                    },
                    "links": {
                      "title": "pagination_link",
                      "type": "object",
                      "description": "Helpful links to other pages of results",
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "first": {
                          "description": "The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "last": {
                          "description": "The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "prev": {
                          "description": "The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "next": {
                          "description": "The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Many ShipEngine endpoints return a paged list of items.  In addition to the returned items, these responses also include information about the total number of items, the number of pages of results, and URLs of other pages of results.\n"
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "labels"
        ],
        "operationId": "labels.purchase_label",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "purchase_label_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "shipment": {
                    "title": "shipment",
                    "type": "object",
                    "description": "The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.\n\n> **Note:** Either `ship_from` or `warehouse_id` must be set.\n",
                    "required": [
                      "shipment_id",
                      "carrier_id",
                      "service_code",
                      "ship_date",
                      "created_at",
                      "modified_at",
                      "shipment_status",
                      "ship_to",
                      "ship_from",
                      "warehouse_id",
                      "return_to",
                      "confirmation",
                      "customs",
                      "advanced_options",
                      "insurance_provider",
                      "tags",
                      "packages",
                      "total_weight"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "shipment_id": {
                        "readOnly": true,
                        "description": "A string that uniquely identifies the shipment",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "carrier_id": {
                        "description": "The carrier account that is billed for the shipping charges",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "service_code": {
                        "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                        "title": "service_code",
                        "type": "string",
                        "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                        "example": "usps_first_class_mail"
                      },
                      "external_shipment_id": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true,
                        "description": "You can optionally use this field to store your own identifier for this shipment.\n\n> **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.\n"
                      },
                      "ship_date": {
                        "description": "The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                        "title": "date",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                        "example": "2018-09-23T00:00:00.000Z"
                      },
                      "created_at": {
                        "readOnly": true,
                        "description": "The date and time that the shipment was created in ShipEngine.",
                        "title": "date_time",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                        "example": "2018-09-23T15:00:00.000Z"
                      },
                      "modified_at": {
                        "readOnly": true,
                        "description": "The date and time that the shipment was created or last modified.",
                        "title": "date_time",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                        "example": "2018-09-23T15:00:00.000Z"
                      },
                      "shipment_status": {
                        "readOnly": true,
                        "default": "pending",
                        "description": "The current status of the shipment",
                        "title": "shipment_status",
                        "type": "string",
                        "enum": [
                          "pending",
                          "processing",
                          "label_purchased",
                          "cancelled"
                        ]
                      },
                      "ship_to": {
                        "description": "The recipient's mailing address",
                        "title": "address",
                        "type": "object",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "ship_from": {
                        "description": "The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://docs.shipengine.com/docs/create-a-warehouse).  Then you can simply specify the `warehouse_id` rather than the complete address each time.\n",
                        "title": "address",
                        "type": "object",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "warehouse_id": {
                        "nullable": true,
                        "default": null,
                        "description": "The [warehouse](https://docs.shipengine.com/docs/ship-from-a-warehouse) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.\n",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "return_to": {
                        "description": "The return address for this shipment.  Defaults to the `ship_from` address.\n",
                        "title": "address",
                        "type": "object",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "confirmation": {
                        "default": "none",
                        "description": "The type of delivery confirmation that is required for this shipment.",
                        "title": "confirmation",
                        "type": "string",
                        "enum": [
                          "none",
                          "delivery",
                          "signature",
                          "adult_signature",
                          "direct_signature"
                        ]
                      },
                      "customs": {
                        "nullable": true,
                        "default": null,
                        "description": "Customs information.  This is usually only needed for international shipments.\n",
                        "title": "international_shipment_options",
                        "type": "object",
                        "required": [
                          "contents",
                          "non_delivery"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "contents": {
                            "default": "merchandise",
                            "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                            "title": "contents",
                            "type": "string",
                            "enum": [
                              "merchandise",
                              "documents",
                              "gift",
                              "returned_goods",
                              "sample"
                            ]
                          },
                          "non_delivery": {
                            "default": "return_to_sender",
                            "description": "Indicates what to do if a package is unable to be delivered.",
                            "title": "non_delivery",
                            "type": "string",
                            "enum": [
                              "return_to_sender",
                              "treat_as_abandoned"
                            ]
                          },
                          "customs_items": {
                            "type": "array",
                            "default": [],
                            "minItems": 0,
                            "description": "Customs declarations for each item in the shipment.",
                            "items": {
                              "title": "customs_item",
                              "type": "object",
                              "description": "The customs declaration for a single item in the shipment.",
                              "required": [
                                "customs_item_id"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "customs_item_id": {
                                  "readOnly": true,
                                  "description": "A string that uniquely identifies the customs item",
                                  "title": "se_id",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 25,
                                  "pattern": "^se(-[a-z0-9]+)+$",
                                  "example": "se-28529731"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "maxLength": 100,
                                  "default": null,
                                  "description": "A description of the item"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "format": "int32",
                                  "default": 0,
                                  "description": "The quantity of this item in the shipment."
                                },
                                "value": {
                                  "type": "number",
                                  "format": "double",
                                  "default": 0,
                                  "description": "The monetary value of each of this item."
                                },
                                "harmonized_tariff_code": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "example": 3926.1,
                                  "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                                },
                                "country_of_origin": {
                                  "nullable": true,
                                  "default": null,
                                  "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                  "title": "country_of_origin",
                                  "type": "string",
                                  "minLength": 2,
                                  "maxLength": 2,
                                  "example": "CA"
                                }
                              }
                            }
                          }
                        }
                      },
                      "advanced_options": {
                        "description": "Advanced shipment options.  These are entirely optional.",
                        "title": "advanced_shipment_options",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "bill_to_account": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                          },
                          "bill_to_country_code": {
                            "nullable": true,
                            "default": null,
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "bill_to_party": {
                            "nullable": true,
                            "default": null,
                            "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                            "title": "bill_to_party",
                            "type": "string",
                            "enum": [
                              "recipient",
                              "third_party"
                            ]
                          },
                          "bill_to_postal_code": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                          },
                          "contains_alcohol": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that the shipment contains alcohol."
                          },
                          "delivered_duty_paid": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                          },
                          "non_machinable": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                          },
                          "saturday_delivery": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enables Saturday delivery, if supported by the carrier."
                          },
                          "use_ups_ground_freight_pricing": {
                            "type": "boolean",
                            "nullable": true,
                            "default": null,
                            "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                          },
                          "freight_class": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "example": 77.5,
                            "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                          },
                          "custom_field1": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "maxLength": 100,
                            "description": "An arbitrary field that can be used to store information about the shipment.\n"
                          },
                          "custom_field2": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "maxLength": 100,
                            "description": "An arbitrary field that can be used to store information about the shipment.\n"
                          },
                          "custom_field3": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "maxLength": 100,
                            "description": "An arbitrary field that can be used to store information about the shipment.\n"
                          }
                        }
                      },
                      "insurance_provider": {
                        "default": "none",
                        "description": "The insurance provider to use for any insured packages in the shipment.\n",
                        "title": "insurance_provider",
                        "type": "string",
                        "enum": [
                          "none",
                          "shipsurance",
                          "carrier",
                          "third_party"
                        ]
                      },
                      "tags": {
                        "type": "array",
                        "readOnly": true,
                        "default": [],
                        "minItems": 0,
                        "items": {
                          "title": "tag",
                          "type": "object",
                          "description": "Tags are arbitrary strings that you can use to categorize shipments.  For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
                          "required": [
                            "name"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Fragile",
                              "description": "The tag name."
                            }
                          }
                        },
                        "description": "Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.\n"
                      },
                      "packages": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "title": "package",
                          "type": "object",
                          "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                          "required": [
                            "weight"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "package_code": {
                              "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                              "title": "package_code",
                              "type": "string",
                              "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                              "example": "small_flat_rate_box"
                            },
                            "weight": {
                              "description": "The package weight",
                              "title": "weight",
                              "type": "object",
                              "required": [
                                "value",
                                "unit"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "exclusiveMinimum": true,
                                  "description": "The weight, in the specified unit"
                                },
                                "unit": {
                                  "title": "weight_unit",
                                  "type": "string",
                                  "enum": [
                                    "pound",
                                    "ounce",
                                    "gram",
                                    "kilogram"
                                  ],
                                  "description": "The possible weight unit values"
                                }
                              }
                            },
                            "dimensions": {
                              "description": "The package dimensions",
                              "title": "dimensions",
                              "type": "object",
                              "required": [
                                "unit",
                                "length",
                                "width",
                                "height"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "unit": {
                                  "default": "inch",
                                  "title": "dimension_unit",
                                  "type": "string",
                                  "enum": [
                                    "inch",
                                    "centimeter"
                                  ],
                                  "description": "The dimension units that are supported by ShipEngine."
                                },
                                "length": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "default": 0,
                                  "description": "The length of the package, in the specified unit"
                                },
                                "width": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "default": 0,
                                  "description": "The width of the package, in the specified unit"
                                },
                                "height": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "default": 0,
                                  "description": "The length of the package, in the specified unit"
                                }
                              }
                            },
                            "insured_value": {
                              "default": [
                                {
                                  "currency": "usd",
                                  "amount": 0
                                }
                              ],
                              "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                              "title": "monetary_value",
                              "type": "object",
                              "required": [
                                "currency",
                                "amount"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "currency": {
                                  "title": "currency",
                                  "type": "string",
                                  "enum": [
                                    "usd",
                                    "cad",
                                    "aud",
                                    "gbp",
                                    "eur"
                                  ],
                                  "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                },
                                "amount": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "description": "The monetary amount, in the specified currency."
                                }
                              }
                            },
                            "tracking_number": {
                              "readOnly": true,
                              "description": "The tracking number for the package.  The format depends on the carrier.\n",
                              "title": "tracking_number",
                              "type": "string",
                              "minLength": 1,
                              "example": "1Z932R800392060079"
                            },
                            "label_messages": {
                              "type": "object",
                              "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                              "required": [
                                "reference1",
                                "reference2",
                                "reference3"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "reference1": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                                },
                                "reference2": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                                },
                                "reference3": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                                }
                              }
                            }
                          }
                        },
                        "description": "The packages in the shipment.\n\n> **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.\n"
                      },
                      "total_weight": {
                        "readOnly": true,
                        "description": "The combined weight of all packages in the shipment",
                        "title": "weight",
                        "type": "object",
                        "required": [
                          "value",
                          "unit"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "double",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "The weight, in the specified unit"
                          },
                          "unit": {
                            "title": "weight_unit",
                            "type": "string",
                            "enum": [
                              "pound",
                              "ounce",
                              "gram",
                              "kilogram"
                            ],
                            "description": "The possible weight unit values"
                          }
                        }
                      }
                    }
                  },
                  "is_return_label": {
                    "type": "boolean"
                  },
                  "rma_number": {
                    "type": "string"
                  },
                  "test_label": {
                    "type": "boolean"
                  },
                  "validate_address": {
                    "default": "validate_and_clean",
                    "title": "validate_address",
                    "type": "string",
                    "enum": [
                      "no_validation",
                      "validate_only",
                      "validate_and_clean"
                    ],
                    "description": "The possible validate address values"
                  },
                  "label_layout": {
                    "type": "string"
                  },
                  "label_format": {
                    "default": "pdf",
                    "title": "label_format",
                    "type": "string",
                    "enum": [
                      "pdf",
                      "png",
                      "zpl"
                    ],
                    "description": "The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `globegistics` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n"
                  },
                  "label_download_type": {
                    "default": "url",
                    "title": "label_download_type",
                    "type": "string",
                    "enum": [
                      "url",
                      "inline"
                    ],
                    "description": "There are two different ways to [download a label](https://docs.shipengine.com/docs/download-a-label):\n\n|Label Download Type | Description\n|--------------------|------------------------------\n|`url`               |You will receive a URL, which you can use to download the label in a separate request. The URL will remain valid for 90 days.<br><br>This is the default if `label_download_type` is unspecified.\n|`inline`            |You will receive the Base64-encoded label as part of the response. No need for a second request to download the label.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "label_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "description": "A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://docs.shipengine.com/docs/quickstart-create-a-label) and then download them in PDF, PNG, or ZPL format so you can print them.\n",
                  "required": [
                    "label_id",
                    "status",
                    "shipment_id",
                    "ship_date",
                    "created_at",
                    "shipment_cost",
                    "insurance_cost",
                    "tracking_number",
                    "is_return_label",
                    "rma_number",
                    "is_international",
                    "batch_id",
                    "carrier_id",
                    "service_code",
                    "package_code",
                    "voided",
                    "voided_at",
                    "label_format",
                    "label_layout",
                    "trackable",
                    "carrier_code",
                    "tracking_status",
                    "label_download",
                    "form_download",
                    "insurance_claim",
                    "packages"
                  ],
                  "properties": {
                    "label_id": {
                      "readOnly": true,
                      "description": "A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "status": {
                      "readOnly": true,
                      "title": "label_status",
                      "type": "string",
                      "enum": [
                        "processing",
                        "completed",
                        "error",
                        "voided"
                      ],
                      "description": "The possible statuses that a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label) can be in.\n\n|Status       |Description\n|:------------|:-----------------------------------------------------\n|`processing` |When labels are created in a [batch](https://docs.shipengine.com/docs/using-batches), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status.\n|`completed`  |The label was successfully created\n|`error`      |The label could not be created due to an error, such as an invalid delivery address\n|`voided`     |The label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                    },
                    "shipment_id": {
                      "readOnly": true,
                      "description": "The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://docs.shipengine.com/docs/quickstart-create-a-label), or you can [create your own shipment](https://docs.shipengine.com/docs/create-a-shipment) and then [use it to print a label](https://docs.shipengine.com/docs/use-a-shipment-to-print-a-label)\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "ship_date": {
                      "description": "The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                      "title": "date",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                      "example": "2018-09-23T00:00:00.000Z"
                    },
                    "created_at": {
                      "readOnly": true,
                      "description": "The date and time that the label was created in ShipEngine.",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "shipment_cost": {
                      "readOnly": true,
                      "description": "The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.\n",
                      "title": "monetary_value",
                      "type": "object",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "title": "currency",
                          "type": "string",
                          "enum": [
                            "usd",
                            "cad",
                            "aud",
                            "gbp",
                            "eur"
                          ],
                          "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "description": "The monetary amount, in the specified currency."
                        }
                      }
                    },
                    "insurance_cost": {
                      "readOnly": true,
                      "description": "The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.\n",
                      "title": "monetary_value",
                      "type": "object",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "title": "currency",
                          "type": "string",
                          "enum": [
                            "usd",
                            "cad",
                            "aud",
                            "gbp",
                            "eur"
                          ],
                          "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "description": "The monetary amount, in the specified currency."
                        }
                      }
                    },
                    "tracking_number": {
                      "type": "string",
                      "minLength": 1,
                      "readOnly": true,
                      "example": "782758401696",
                      "description": "The tracking number for the package. Tracking number formats vary across carriers."
                    },
                    "is_return_label": {
                      "type": "boolean",
                      "description": "Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.\n"
                    },
                    "rma_number": {
                      "type": "string",
                      "description": "An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.\n"
                    },
                    "is_international": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether this is an international shipment.  That is, the originating country and destination country are different.\n"
                    },
                    "batch_id": {
                      "readOnly": true,
                      "description": "If this label was created as part of a [batch](https://docs.shipengine.com/docs/using-batches), then this is the unique ID of that batch.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "readOnly": true,
                      "description": "The unique ID of the [carrier account](https://docs.shipengine.com/docs/setup-a-carrier) that was used to create this label\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "service_code": {
                      "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                      "title": "service_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                      "example": "usps_first_class_mail"
                    },
                    "package_code": {
                      "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                      "title": "package_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                      "example": "small_flat_rate_box"
                    },
                    "voided": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether the label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                    },
                    "voided_at": {
                      "nullable": true,
                      "readOnly": true,
                      "description": "The date and time that the label was [voided](https://docs.shipengine.com/docs/void-a-label), or `null` if the label has not been voided\n",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "label_format": {
                      "default": "pdf",
                      "description": "The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n",
                      "title": "label_format",
                      "type": "string",
                      "enum": [
                        "pdf",
                        "png",
                        "zpl"
                      ]
                    },
                    "label_layout": {
                      "default": "4x6",
                      "description": "The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n",
                      "title": "label_layout",
                      "type": "string",
                      "enum": [
                        "4x6",
                        "letter"
                      ]
                    },
                    "trackable": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.\n"
                    },
                    "carrier_code": {
                      "readOnly": true,
                      "description": "The [shipping carrier](https://docs.shipengine.com/docs/setup-a-carrier) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.\n",
                      "title": "carrier_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                      "example": "dhl_express"
                    },
                    "tracking_status": {
                      "readOnly": true,
                      "description": "The current status of the package, such as `in_transit` or `delivered`",
                      "title": "tracking_status",
                      "type": "string",
                      "enum": [
                        "unknown",
                        "in_transit",
                        "error",
                        "delivered"
                      ]
                    },
                    "label_download": {
                      "readOnly": true,
                      "description": "The URL to download the label.  The file format depends on the `label_format` and `label_layout` fields.\n\nThere are two different ways to download a label, depending on the `label_download_type` that you specified when creating or querying the label.  The `label_download_type` field defaults to `url`, which will return a URL that you can use to download the label.  If you set `label_download_type` to `inline`, then a [Data URI](https://en.wikipedia.org/wiki/Data_URI_scheme) will be returned. Data URIs include the data inline, so no additmional HTTP request is needed.  See [Download a Label](https://docs.shipengine.com/docs/download-a-label) for more details.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "form_download": {
                      "readOnly": true,
                      "nullable": true,
                      "description": "The link to downlaod the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "insurance_claim": {
                      "readOnly": true,
                      "nullable": true,
                      "description": "The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "packages": {
                      "type": "array",
                      "description": "The label's package(s).\n\n> **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.\n",
                      "items": {
                        "title": "package",
                        "type": "object",
                        "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                        "required": [
                          "weight"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_code": {
                            "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                            "title": "package_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "small_flat_rate_box"
                          },
                          "weight": {
                            "description": "The package weight",
                            "title": "weight",
                            "type": "object",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          },
                          "dimensions": {
                            "description": "The package dimensions",
                            "title": "dimensions",
                            "type": "object",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "insured_value": {
                            "default": [
                              {
                                "currency": "usd",
                                "amount": 0
                              }
                            ],
                            "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "tracking_number": {
                            "readOnly": true,
                            "description": "The tracking number for the package.  The format depends on the carrier.\n",
                            "title": "tracking_number",
                            "type": "string",
                            "minLength": 1,
                            "example": "1Z932R800392060079"
                          },
                          "label_messages": {
                            "type": "object",
                            "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                            "required": [
                              "reference1",
                              "reference2",
                              "reference3"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "reference1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/labels/rates/{rate_id}": {
      "post": {
        "tags": [
          "labels"
        ],
        "operationId": "labels.purchase_label_with_rate",
        "parameters": [
          {
            "name": "rate_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "purchase_label_without_shipment_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "test_label": {
                    "type": "boolean"
                  },
                  "validate_address": {
                    "title": "validate_address",
                    "type": "string",
                    "enum": [
                      "no_validation",
                      "validate_only",
                      "validate_and_clean"
                    ],
                    "description": "The possible validate address values"
                  },
                  "label_layout": {
                    "type": "string"
                  },
                  "label_format": {
                    "title": "label_format",
                    "type": "string",
                    "enum": [
                      "pdf",
                      "png",
                      "zpl"
                    ],
                    "description": "The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `globegistics` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "label_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "description": "A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://docs.shipengine.com/docs/quickstart-create-a-label) and then download them in PDF, PNG, or ZPL format so you can print them.\n",
                  "required": [
                    "label_id",
                    "status",
                    "shipment_id",
                    "ship_date",
                    "created_at",
                    "shipment_cost",
                    "insurance_cost",
                    "tracking_number",
                    "is_return_label",
                    "rma_number",
                    "is_international",
                    "batch_id",
                    "carrier_id",
                    "service_code",
                    "package_code",
                    "voided",
                    "voided_at",
                    "label_format",
                    "label_layout",
                    "trackable",
                    "carrier_code",
                    "tracking_status",
                    "label_download",
                    "form_download",
                    "insurance_claim",
                    "packages"
                  ],
                  "properties": {
                    "label_id": {
                      "readOnly": true,
                      "description": "A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "status": {
                      "readOnly": true,
                      "title": "label_status",
                      "type": "string",
                      "enum": [
                        "processing",
                        "completed",
                        "error",
                        "voided"
                      ],
                      "description": "The possible statuses that a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label) can be in.\n\n|Status       |Description\n|:------------|:-----------------------------------------------------\n|`processing` |When labels are created in a [batch](https://docs.shipengine.com/docs/using-batches), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status.\n|`completed`  |The label was successfully created\n|`error`      |The label could not be created due to an error, such as an invalid delivery address\n|`voided`     |The label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                    },
                    "shipment_id": {
                      "readOnly": true,
                      "description": "The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://docs.shipengine.com/docs/quickstart-create-a-label), or you can [create your own shipment](https://docs.shipengine.com/docs/create-a-shipment) and then [use it to print a label](https://docs.shipengine.com/docs/use-a-shipment-to-print-a-label)\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "ship_date": {
                      "description": "The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                      "title": "date",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                      "example": "2018-09-23T00:00:00.000Z"
                    },
                    "created_at": {
                      "readOnly": true,
                      "description": "The date and time that the label was created in ShipEngine.",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "shipment_cost": {
                      "readOnly": true,
                      "description": "The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.\n",
                      "title": "monetary_value",
                      "type": "object",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "title": "currency",
                          "type": "string",
                          "enum": [
                            "usd",
                            "cad",
                            "aud",
                            "gbp",
                            "eur"
                          ],
                          "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "description": "The monetary amount, in the specified currency."
                        }
                      }
                    },
                    "insurance_cost": {
                      "readOnly": true,
                      "description": "The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.\n",
                      "title": "monetary_value",
                      "type": "object",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "title": "currency",
                          "type": "string",
                          "enum": [
                            "usd",
                            "cad",
                            "aud",
                            "gbp",
                            "eur"
                          ],
                          "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "description": "The monetary amount, in the specified currency."
                        }
                      }
                    },
                    "tracking_number": {
                      "type": "string",
                      "minLength": 1,
                      "readOnly": true,
                      "example": "782758401696",
                      "description": "The tracking number for the package. Tracking number formats vary across carriers."
                    },
                    "is_return_label": {
                      "type": "boolean",
                      "description": "Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.\n"
                    },
                    "rma_number": {
                      "type": "string",
                      "description": "An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.\n"
                    },
                    "is_international": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether this is an international shipment.  That is, the originating country and destination country are different.\n"
                    },
                    "batch_id": {
                      "readOnly": true,
                      "description": "If this label was created as part of a [batch](https://docs.shipengine.com/docs/using-batches), then this is the unique ID of that batch.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "readOnly": true,
                      "description": "The unique ID of the [carrier account](https://docs.shipengine.com/docs/setup-a-carrier) that was used to create this label\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "service_code": {
                      "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                      "title": "service_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                      "example": "usps_first_class_mail"
                    },
                    "package_code": {
                      "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                      "title": "package_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                      "example": "small_flat_rate_box"
                    },
                    "voided": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether the label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                    },
                    "voided_at": {
                      "nullable": true,
                      "readOnly": true,
                      "description": "The date and time that the label was [voided](https://docs.shipengine.com/docs/void-a-label), or `null` if the label has not been voided\n",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "label_format": {
                      "default": "pdf",
                      "description": "The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n",
                      "title": "label_format",
                      "type": "string",
                      "enum": [
                        "pdf",
                        "png",
                        "zpl"
                      ]
                    },
                    "label_layout": {
                      "default": "4x6",
                      "description": "The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n",
                      "title": "label_layout",
                      "type": "string",
                      "enum": [
                        "4x6",
                        "letter"
                      ]
                    },
                    "trackable": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.\n"
                    },
                    "carrier_code": {
                      "readOnly": true,
                      "description": "The [shipping carrier](https://docs.shipengine.com/docs/setup-a-carrier) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.\n",
                      "title": "carrier_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                      "example": "dhl_express"
                    },
                    "tracking_status": {
                      "readOnly": true,
                      "description": "The current status of the package, such as `in_transit` or `delivered`",
                      "title": "tracking_status",
                      "type": "string",
                      "enum": [
                        "unknown",
                        "in_transit",
                        "error",
                        "delivered"
                      ]
                    },
                    "label_download": {
                      "readOnly": true,
                      "description": "The URL to download the label.  The file format depends on the `label_format` and `label_layout` fields.\n\nThere are two different ways to download a label, depending on the `label_download_type` that you specified when creating or querying the label.  The `label_download_type` field defaults to `url`, which will return a URL that you can use to download the label.  If you set `label_download_type` to `inline`, then a [Data URI](https://en.wikipedia.org/wiki/Data_URI_scheme) will be returned. Data URIs include the data inline, so no additmional HTTP request is needed.  See [Download a Label](https://docs.shipengine.com/docs/download-a-label) for more details.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "form_download": {
                      "readOnly": true,
                      "nullable": true,
                      "description": "The link to downlaod the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "insurance_claim": {
                      "readOnly": true,
                      "nullable": true,
                      "description": "The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "packages": {
                      "type": "array",
                      "description": "The label's package(s).\n\n> **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.\n",
                      "items": {
                        "title": "package",
                        "type": "object",
                        "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                        "required": [
                          "weight"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_code": {
                            "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                            "title": "package_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "small_flat_rate_box"
                          },
                          "weight": {
                            "description": "The package weight",
                            "title": "weight",
                            "type": "object",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          },
                          "dimensions": {
                            "description": "The package dimensions",
                            "title": "dimensions",
                            "type": "object",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "insured_value": {
                            "default": [
                              {
                                "currency": "usd",
                                "amount": 0
                              }
                            ],
                            "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "tracking_number": {
                            "readOnly": true,
                            "description": "The tracking number for the package.  The format depends on the carrier.\n",
                            "title": "tracking_number",
                            "type": "string",
                            "minLength": 1,
                            "example": "1Z932R800392060079"
                          },
                          "label_messages": {
                            "type": "object",
                            "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                            "required": [
                              "reference1",
                              "reference2",
                              "reference3"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "reference1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/labels/shipment/{shipment_id}": {
      "post": {
        "tags": [
          "labels"
        ],
        "operationId": "labels.purchase_label_with_shipment",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "purchase_label_without_shipment_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "test_label": {
                    "type": "boolean"
                  },
                  "validate_address": {
                    "title": "validate_address",
                    "type": "string",
                    "enum": [
                      "no_validation",
                      "validate_only",
                      "validate_and_clean"
                    ],
                    "description": "The possible validate address values"
                  },
                  "label_layout": {
                    "type": "string"
                  },
                  "label_format": {
                    "title": "label_format",
                    "type": "string",
                    "enum": [
                      "pdf",
                      "png",
                      "zpl"
                    ],
                    "description": "The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `globegistics` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The requested object creation was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "label_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "description": "A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://docs.shipengine.com/docs/quickstart-create-a-label) and then download them in PDF, PNG, or ZPL format so you can print them.\n",
                  "required": [
                    "label_id",
                    "status",
                    "shipment_id",
                    "ship_date",
                    "created_at",
                    "shipment_cost",
                    "insurance_cost",
                    "tracking_number",
                    "is_return_label",
                    "rma_number",
                    "is_international",
                    "batch_id",
                    "carrier_id",
                    "service_code",
                    "package_code",
                    "voided",
                    "voided_at",
                    "label_format",
                    "label_layout",
                    "trackable",
                    "carrier_code",
                    "tracking_status",
                    "label_download",
                    "form_download",
                    "insurance_claim",
                    "packages"
                  ],
                  "properties": {
                    "label_id": {
                      "readOnly": true,
                      "description": "A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "status": {
                      "readOnly": true,
                      "title": "label_status",
                      "type": "string",
                      "enum": [
                        "processing",
                        "completed",
                        "error",
                        "voided"
                      ],
                      "description": "The possible statuses that a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label) can be in.\n\n|Status       |Description\n|:------------|:-----------------------------------------------------\n|`processing` |When labels are created in a [batch](https://docs.shipengine.com/docs/using-batches), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status.\n|`completed`  |The label was successfully created\n|`error`      |The label could not be created due to an error, such as an invalid delivery address\n|`voided`     |The label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                    },
                    "shipment_id": {
                      "readOnly": true,
                      "description": "The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://docs.shipengine.com/docs/quickstart-create-a-label), or you can [create your own shipment](https://docs.shipengine.com/docs/create-a-shipment) and then [use it to print a label](https://docs.shipengine.com/docs/use-a-shipment-to-print-a-label)\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "ship_date": {
                      "description": "The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                      "title": "date",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                      "example": "2018-09-23T00:00:00.000Z"
                    },
                    "created_at": {
                      "readOnly": true,
                      "description": "The date and time that the label was created in ShipEngine.",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "shipment_cost": {
                      "readOnly": true,
                      "description": "The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.\n",
                      "title": "monetary_value",
                      "type": "object",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "title": "currency",
                          "type": "string",
                          "enum": [
                            "usd",
                            "cad",
                            "aud",
                            "gbp",
                            "eur"
                          ],
                          "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "description": "The monetary amount, in the specified currency."
                        }
                      }
                    },
                    "insurance_cost": {
                      "readOnly": true,
                      "description": "The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.\n",
                      "title": "monetary_value",
                      "type": "object",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "title": "currency",
                          "type": "string",
                          "enum": [
                            "usd",
                            "cad",
                            "aud",
                            "gbp",
                            "eur"
                          ],
                          "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "description": "The monetary amount, in the specified currency."
                        }
                      }
                    },
                    "tracking_number": {
                      "type": "string",
                      "minLength": 1,
                      "readOnly": true,
                      "example": "782758401696",
                      "description": "The tracking number for the package. Tracking number formats vary across carriers."
                    },
                    "is_return_label": {
                      "type": "boolean",
                      "description": "Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.\n"
                    },
                    "rma_number": {
                      "type": "string",
                      "description": "An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.\n"
                    },
                    "is_international": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether this is an international shipment.  That is, the originating country and destination country are different.\n"
                    },
                    "batch_id": {
                      "readOnly": true,
                      "description": "If this label was created as part of a [batch](https://docs.shipengine.com/docs/using-batches), then this is the unique ID of that batch.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "readOnly": true,
                      "description": "The unique ID of the [carrier account](https://docs.shipengine.com/docs/setup-a-carrier) that was used to create this label\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "service_code": {
                      "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                      "title": "service_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                      "example": "usps_first_class_mail"
                    },
                    "package_code": {
                      "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                      "title": "package_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                      "example": "small_flat_rate_box"
                    },
                    "voided": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether the label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                    },
                    "voided_at": {
                      "nullable": true,
                      "readOnly": true,
                      "description": "The date and time that the label was [voided](https://docs.shipengine.com/docs/void-a-label), or `null` if the label has not been voided\n",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "label_format": {
                      "default": "pdf",
                      "description": "The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n",
                      "title": "label_format",
                      "type": "string",
                      "enum": [
                        "pdf",
                        "png",
                        "zpl"
                      ]
                    },
                    "label_layout": {
                      "default": "4x6",
                      "description": "The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n",
                      "title": "label_layout",
                      "type": "string",
                      "enum": [
                        "4x6",
                        "letter"
                      ]
                    },
                    "trackable": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.\n"
                    },
                    "carrier_code": {
                      "readOnly": true,
                      "description": "The [shipping carrier](https://docs.shipengine.com/docs/setup-a-carrier) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.\n",
                      "title": "carrier_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                      "example": "dhl_express"
                    },
                    "tracking_status": {
                      "readOnly": true,
                      "description": "The current status of the package, such as `in_transit` or `delivered`",
                      "title": "tracking_status",
                      "type": "string",
                      "enum": [
                        "unknown",
                        "in_transit",
                        "error",
                        "delivered"
                      ]
                    },
                    "label_download": {
                      "readOnly": true,
                      "description": "The URL to download the label.  The file format depends on the `label_format` and `label_layout` fields.\n\nThere are two different ways to download a label, depending on the `label_download_type` that you specified when creating or querying the label.  The `label_download_type` field defaults to `url`, which will return a URL that you can use to download the label.  If you set `label_download_type` to `inline`, then a [Data URI](https://en.wikipedia.org/wiki/Data_URI_scheme) will be returned. Data URIs include the data inline, so no additmional HTTP request is needed.  See [Download a Label](https://docs.shipengine.com/docs/download-a-label) for more details.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "form_download": {
                      "readOnly": true,
                      "nullable": true,
                      "description": "The link to downlaod the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "insurance_claim": {
                      "readOnly": true,
                      "nullable": true,
                      "description": "The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "packages": {
                      "type": "array",
                      "description": "The label's package(s).\n\n> **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.\n",
                      "items": {
                        "title": "package",
                        "type": "object",
                        "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                        "required": [
                          "weight"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_code": {
                            "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                            "title": "package_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "small_flat_rate_box"
                          },
                          "weight": {
                            "description": "The package weight",
                            "title": "weight",
                            "type": "object",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          },
                          "dimensions": {
                            "description": "The package dimensions",
                            "title": "dimensions",
                            "type": "object",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "insured_value": {
                            "default": [
                              {
                                "currency": "usd",
                                "amount": 0
                              }
                            ],
                            "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "tracking_number": {
                            "readOnly": true,
                            "description": "The tracking number for the package.  The format depends on the carrier.\n",
                            "title": "tracking_number",
                            "type": "string",
                            "minLength": 1,
                            "example": "1Z932R800392060079"
                          },
                          "label_messages": {
                            "type": "object",
                            "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                            "required": [
                              "reference1",
                              "reference2",
                              "reference3"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "reference1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/labels/{label_id}": {
      "get": {
        "tags": [
          "labels"
        ],
        "operationId": "labels.get_by_id",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "label_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "description": "A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://docs.shipengine.com/docs/quickstart-create-a-label) and then download them in PDF, PNG, or ZPL format so you can print them.\n",
                  "required": [
                    "label_id",
                    "status",
                    "shipment_id",
                    "ship_date",
                    "created_at",
                    "shipment_cost",
                    "insurance_cost",
                    "tracking_number",
                    "is_return_label",
                    "rma_number",
                    "is_international",
                    "batch_id",
                    "carrier_id",
                    "service_code",
                    "package_code",
                    "voided",
                    "voided_at",
                    "label_format",
                    "label_layout",
                    "trackable",
                    "carrier_code",
                    "tracking_status",
                    "label_download",
                    "form_download",
                    "insurance_claim",
                    "packages"
                  ],
                  "properties": {
                    "label_id": {
                      "readOnly": true,
                      "description": "A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "status": {
                      "readOnly": true,
                      "title": "label_status",
                      "type": "string",
                      "enum": [
                        "processing",
                        "completed",
                        "error",
                        "voided"
                      ],
                      "description": "The possible statuses that a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label) can be in.\n\n|Status       |Description\n|:------------|:-----------------------------------------------------\n|`processing` |When labels are created in a [batch](https://docs.shipengine.com/docs/using-batches), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status.\n|`completed`  |The label was successfully created\n|`error`      |The label could not be created due to an error, such as an invalid delivery address\n|`voided`     |The label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                    },
                    "shipment_id": {
                      "readOnly": true,
                      "description": "The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://docs.shipengine.com/docs/quickstart-create-a-label), or you can [create your own shipment](https://docs.shipengine.com/docs/create-a-shipment) and then [use it to print a label](https://docs.shipengine.com/docs/use-a-shipment-to-print-a-label)\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "ship_date": {
                      "description": "The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                      "title": "date",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                      "example": "2018-09-23T00:00:00.000Z"
                    },
                    "created_at": {
                      "readOnly": true,
                      "description": "The date and time that the label was created in ShipEngine.",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "shipment_cost": {
                      "readOnly": true,
                      "description": "The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.\n",
                      "title": "monetary_value",
                      "type": "object",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "title": "currency",
                          "type": "string",
                          "enum": [
                            "usd",
                            "cad",
                            "aud",
                            "gbp",
                            "eur"
                          ],
                          "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "description": "The monetary amount, in the specified currency."
                        }
                      }
                    },
                    "insurance_cost": {
                      "readOnly": true,
                      "description": "The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.\n",
                      "title": "monetary_value",
                      "type": "object",
                      "required": [
                        "currency",
                        "amount"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "title": "currency",
                          "type": "string",
                          "enum": [
                            "usd",
                            "cad",
                            "aud",
                            "gbp",
                            "eur"
                          ],
                          "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "description": "The monetary amount, in the specified currency."
                        }
                      }
                    },
                    "tracking_number": {
                      "type": "string",
                      "minLength": 1,
                      "readOnly": true,
                      "example": "782758401696",
                      "description": "The tracking number for the package. Tracking number formats vary across carriers."
                    },
                    "is_return_label": {
                      "type": "boolean",
                      "description": "Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.\n"
                    },
                    "rma_number": {
                      "type": "string",
                      "description": "An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.\n"
                    },
                    "is_international": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether this is an international shipment.  That is, the originating country and destination country are different.\n"
                    },
                    "batch_id": {
                      "readOnly": true,
                      "description": "If this label was created as part of a [batch](https://docs.shipengine.com/docs/using-batches), then this is the unique ID of that batch.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "readOnly": true,
                      "description": "The unique ID of the [carrier account](https://docs.shipengine.com/docs/setup-a-carrier) that was used to create this label\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "service_code": {
                      "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                      "title": "service_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                      "example": "usps_first_class_mail"
                    },
                    "package_code": {
                      "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                      "title": "package_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                      "example": "small_flat_rate_box"
                    },
                    "voided": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether the label has been [voided](https://docs.shipengine.com/docs/void-a-label)\n"
                    },
                    "voided_at": {
                      "nullable": true,
                      "readOnly": true,
                      "description": "The date and time that the label was [voided](https://docs.shipengine.com/docs/void-a-label), or `null` if the label has not been voided\n",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "label_format": {
                      "default": "pdf",
                      "description": "The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n",
                      "title": "label_format",
                      "type": "string",
                      "enum": [
                        "pdf",
                        "png",
                        "zpl"
                      ]
                    },
                    "label_layout": {
                      "default": "4x6",
                      "description": "The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n",
                      "title": "label_layout",
                      "type": "string",
                      "enum": [
                        "4x6",
                        "letter"
                      ]
                    },
                    "trackable": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.\n"
                    },
                    "carrier_code": {
                      "readOnly": true,
                      "description": "The [shipping carrier](https://docs.shipengine.com/docs/setup-a-carrier) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.\n",
                      "title": "carrier_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                      "example": "dhl_express"
                    },
                    "tracking_status": {
                      "readOnly": true,
                      "description": "The current status of the package, such as `in_transit` or `delivered`",
                      "title": "tracking_status",
                      "type": "string",
                      "enum": [
                        "unknown",
                        "in_transit",
                        "error",
                        "delivered"
                      ]
                    },
                    "label_download": {
                      "readOnly": true,
                      "description": "The URL to download the label.  The file format depends on the `label_format` and `label_layout` fields.\n\nThere are two different ways to download a label, depending on the `label_download_type` that you specified when creating or querying the label.  The `label_download_type` field defaults to `url`, which will return a URL that you can use to download the label.  If you set `label_download_type` to `inline`, then a [Data URI](https://en.wikipedia.org/wiki/Data_URI_scheme) will be returned. Data URIs include the data inline, so no additmional HTTP request is needed.  See [Download a Label](https://docs.shipengine.com/docs/download-a-label) for more details.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "form_download": {
                      "readOnly": true,
                      "nullable": true,
                      "description": "The link to downlaod the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "insurance_claim": {
                      "readOnly": true,
                      "nullable": true,
                      "description": "The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.\n",
                      "title": "link",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    },
                    "packages": {
                      "type": "array",
                      "description": "The label's package(s).\n\n> **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.\n",
                      "items": {
                        "title": "package",
                        "type": "object",
                        "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                        "required": [
                          "weight"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_code": {
                            "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                            "title": "package_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "small_flat_rate_box"
                          },
                          "weight": {
                            "description": "The package weight",
                            "title": "weight",
                            "type": "object",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          },
                          "dimensions": {
                            "description": "The package dimensions",
                            "title": "dimensions",
                            "type": "object",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "insured_value": {
                            "default": [
                              {
                                "currency": "usd",
                                "amount": 0
                              }
                            ],
                            "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "tracking_number": {
                            "readOnly": true,
                            "description": "The tracking number for the package.  The format depends on the carrier.\n",
                            "title": "tracking_number",
                            "type": "string",
                            "minLength": 1,
                            "example": "1Z932R800392060079"
                          },
                          "label_messages": {
                            "type": "object",
                            "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                            "required": [
                              "reference1",
                              "reference2",
                              "reference3"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "reference1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/labels/{label_id}/track": {
      "get": {
        "tags": [
          "labels"
        ],
        "operationId": "labels.track",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "tracking_information_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "tracking_number": {
                      "type": "string"
                    },
                    "status_code": {
                      "type": "string"
                    },
                    "status_description": {
                      "type": "string"
                    },
                    "carrier_status_code": {
                      "type": "string"
                    },
                    "carrier_status_description": {
                      "type": "string"
                    },
                    "ship_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "estimated_delivery_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "actual_delivery_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "exception_description": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "title": "track_event",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "occurred_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "description": {
                            "type": "string"
                          },
                          "city_locality": {
                            "type": "string"
                          },
                          "state_province": {
                            "type": "string"
                          },
                          "postal_code": {
                            "type": "string"
                          },
                          "country_code": {
                            "type": "string"
                          },
                          "company_name": {
                            "type": "string"
                          },
                          "signer": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/labels/{label_id}/void": {
      "put": {
        "tags": [
          "labels"
        ],
        "operationId": "labels.void_label",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "void_label_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "approved": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/manifests": {
      "get": {
        "tags": [
          "manifests"
        ],
        "operationId": "manifests.list",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "query",
            "required": false,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "name": "ship_date_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ship_date_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created_at_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created_at_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "carrier_id",
            "in": "query",
            "required": false,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            },
            "example": 2,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 25
            },
            "example": 50,
            "description": "The number of results to return per response."
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "list_manifests_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "manifests": {
                      "type": "array",
                      "items": {
                        "title": "manifest_response_body",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "manifest_id": {
                            "description": "A string that uniquely identifies the manifest",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "form_id": {
                            "description": "A string that uniquely identifies the form",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "ship_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "shipments": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "warehouse_id": {
                            "description": "A string that uniquely identifies the warehouse",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "submission_id": {
                            "description": "A string that uniquely identifies the submission",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "manifest_download": {
                            "title": "optional_link",
                            "type": "object",
                            "description": "A link to a related resource, or an empty object if there is no resource to link to",
                            "additionalProperties": false,
                            "properties": {
                              "href": {
                                "description": "The URL of the linked resource, if any",
                                "title": "url",
                                "type": "string",
                                "format": "url",
                                "minLength": 1,
                                "example": "http://api.shipengine.com/v1/labels/se-28529731"
                              },
                              "type": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The type of resource, or the type of relationship to the parent resource"
                              }
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pages": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "links": {
                      "title": "pagination_link",
                      "type": "object",
                      "description": "Helpful links to other pages of results",
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "first": {
                          "description": "The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "last": {
                          "description": "The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "prev": {
                          "description": "The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "next": {
                          "description": "The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "manifests"
        ],
        "operationId": "manifests.create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "create_manifest_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "carrier_id": {
                    "description": "A string that uniquely identifies the carrier",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "excluded_label_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "warehouse_id": {
                    "description": "A string that uniquely identifies the warehouse",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "ship_date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "manifest_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "manifest_id": {
                      "description": "A string that uniquely identifies the manifest",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "form_id": {
                      "description": "A string that uniquely identifies the form",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "ship_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "shipments": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "warehouse_id": {
                      "description": "A string that uniquely identifies the warehouse",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "submission_id": {
                      "description": "A string that uniquely identifies the submission",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "description": "A string that uniquely identifies the carrier",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "manifest_download": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/manifests/{manifest_id}": {
      "get": {
        "tags": [
          "manifests"
        ],
        "operationId": "manifests.get_by_id",
        "parameters": [
          {
            "name": "manifest_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "manifest_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "manifest_id": {
                      "description": "A string that uniquely identifies the manifest",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "form_id": {
                      "description": "A string that uniquely identifies the form",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "ship_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "shipments": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "warehouse_id": {
                      "description": "A string that uniquely identifies the warehouse",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "submission_id": {
                      "description": "A string that uniquely identifies the submission",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "description": "A string that uniquely identifies the carrier",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "manifest_download": {
                      "title": "optional_link",
                      "type": "object",
                      "description": "A link to a related resource, or an empty object if there is no resource to link to",
                      "additionalProperties": false,
                      "properties": {
                        "href": {
                          "description": "The URL of the linked resource, if any",
                          "title": "url",
                          "type": "string",
                          "format": "url",
                          "minLength": 1,
                          "example": "http://api.shipengine.com/v1/labels/se-28529731"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "description": "The type of resource, or the type of relationship to the parent resource"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/packages": {
      "get": {
        "tags": [
          "packages"
        ],
        "operationId": "packages.list",
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "package_list_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "packages": {
                      "type": "array",
                      "items": {
                        "title": "package_type",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_id": {
                            "description": "A string that uniquely identifies the package",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "package_code": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "dimensions": {
                            "title": "dimensions",
                            "type": "object",
                            "description": "The dimensions of a package",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "packages"
        ],
        "operationId": "packages.create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "package_request_body",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name"
                ],
                "properties": {
                  "package_id": {
                    "description": "A string that uniquely identifies the package",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "package_code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "dimensions": {
                    "title": "dimensions",
                    "type": "object",
                    "description": "The dimensions of a package",
                    "required": [
                      "unit",
                      "length",
                      "width",
                      "height"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "unit": {
                        "default": "inch",
                        "title": "dimension_unit",
                        "type": "string",
                        "enum": [
                          "inch",
                          "centimeter"
                        ],
                        "description": "The dimension units that are supported by ShipEngine."
                      },
                      "length": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "default": 0,
                        "description": "The length of the package, in the specified unit"
                      },
                      "width": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "default": 0,
                        "description": "The width of the package, in the specified unit"
                      },
                      "height": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "default": 0,
                        "description": "The length of the package, in the specified unit"
                      }
                    }
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "package_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "package_id": {
                      "description": "A string that uniquely identifies the package",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "package_code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "dimensions": {
                      "title": "dimensions",
                      "type": "object",
                      "description": "The dimensions of a package",
                      "required": [
                        "unit",
                        "length",
                        "width",
                        "height"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "unit": {
                          "default": "inch",
                          "title": "dimension_unit",
                          "type": "string",
                          "enum": [
                            "inch",
                            "centimeter"
                          ],
                          "description": "The dimension units that are supported by ShipEngine."
                        },
                        "length": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "default": 0,
                          "description": "The length of the package, in the specified unit"
                        },
                        "width": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "default": 0,
                          "description": "The width of the package, in the specified unit"
                        },
                        "height": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "default": 0,
                          "description": "The length of the package, in the specified unit"
                        }
                      }
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/packages/{package_id}": {
      "get": {
        "tags": [
          "packages"
        ],
        "operationId": "packages.get_by_id",
        "parameters": [
          {
            "name": "package_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "package_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "package_id": {
                      "description": "A string that uniquely identifies the package",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "package_code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "dimensions": {
                      "title": "dimensions",
                      "type": "object",
                      "description": "The dimensions of a package",
                      "required": [
                        "unit",
                        "length",
                        "width",
                        "height"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "unit": {
                          "default": "inch",
                          "title": "dimension_unit",
                          "type": "string",
                          "enum": [
                            "inch",
                            "centimeter"
                          ],
                          "description": "The dimension units that are supported by ShipEngine."
                        },
                        "length": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "default": 0,
                          "description": "The length of the package, in the specified unit"
                        },
                        "width": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "default": 0,
                          "description": "The width of the package, in the specified unit"
                        },
                        "height": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "default": 0,
                          "description": "The length of the package, in the specified unit"
                        }
                      }
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "packages"
        ],
        "operationId": "packages.update",
        "parameters": [
          {
            "name": "package_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "package_request_body",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name"
                ],
                "properties": {
                  "package_id": {
                    "description": "A string that uniquely identifies the package",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "package_code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "dimensions": {
                    "title": "dimensions",
                    "type": "object",
                    "description": "The dimensions of a package",
                    "required": [
                      "unit",
                      "length",
                      "width",
                      "height"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "unit": {
                        "default": "inch",
                        "title": "dimension_unit",
                        "type": "string",
                        "enum": [
                          "inch",
                          "centimeter"
                        ],
                        "description": "The dimension units that are supported by ShipEngine."
                      },
                      "length": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "default": 0,
                        "description": "The length of the package, in the specified unit"
                      },
                      "width": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "default": 0,
                        "description": "The width of the package, in the specified unit"
                      },
                      "height": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "default": 0,
                        "description": "The length of the package, in the specified unit"
                      }
                    }
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "packages"
        ],
        "operationId": "packages.delete",
        "parameters": [
          {
            "name": "package_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/rates": {
      "post": {
        "tags": [
          "rates"
        ],
        "operationId": "rates.rate_shipment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "rate_shipment_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "shipment_id": {
                    "description": "A string that uniquely identifies the shipment",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "shipment": {
                    "title": "address_validating_shipment",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "validate_address": {
                        "title": "validate_address",
                        "type": "string",
                        "enum": [
                          "no_validation",
                          "validate_only",
                          "validate_and_clean"
                        ],
                        "description": "The possible validate address values"
                      },
                      "shipment_id": {
                        "description": "A string that uniquely identifies the shipment",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "carrier_id": {
                        "description": "A string that uniquely identifies the carrier",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "service_code": {
                        "type": "string"
                      },
                      "external_shipment_id": {
                        "description": "A string that uniquely identifies the external shipment",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "ship_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "modified_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "shipment_status": {
                        "title": "shipment_status",
                        "type": "string",
                        "enum": [
                          "pending",
                          "processing",
                          "label_purchased",
                          "cancelled"
                        ],
                        "description": "The possible shipment status values"
                      },
                      "ship_to": {
                        "title": "address",
                        "type": "object",
                        "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "ship_from": {
                        "title": "address",
                        "type": "object",
                        "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "warehouse_id": {
                        "description": "A string that uniquely identifies the warehouse",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "return_to": {
                        "title": "address",
                        "type": "object",
                        "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "confirmation": {
                        "title": "confirmation",
                        "type": "string",
                        "enum": [
                          "none",
                          "delivery",
                          "signature",
                          "adult_signature",
                          "direct_signature"
                        ],
                        "description": "The possible confirmation values"
                      },
                      "customs": {
                        "title": "international_shipment_options",
                        "type": "object",
                        "description": "Options for international shipments, such as customs declarations.",
                        "required": [
                          "contents",
                          "non_delivery"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "contents": {
                            "default": "merchandise",
                            "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                            "title": "contents",
                            "type": "string",
                            "enum": [
                              "merchandise",
                              "documents",
                              "gift",
                              "returned_goods",
                              "sample"
                            ]
                          },
                          "non_delivery": {
                            "default": "return_to_sender",
                            "description": "Indicates what to do if a package is unable to be delivered.",
                            "title": "non_delivery",
                            "type": "string",
                            "enum": [
                              "return_to_sender",
                              "treat_as_abandoned"
                            ]
                          },
                          "customs_items": {
                            "type": "array",
                            "default": [],
                            "minItems": 0,
                            "description": "Customs declarations for each item in the shipment.",
                            "items": {
                              "title": "customs_item",
                              "type": "object",
                              "description": "The customs declaration for a single item in the shipment.",
                              "required": [
                                "customs_item_id"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "customs_item_id": {
                                  "readOnly": true,
                                  "description": "A string that uniquely identifies the customs item",
                                  "title": "se_id",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 25,
                                  "pattern": "^se(-[a-z0-9]+)+$",
                                  "example": "se-28529731"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "maxLength": 100,
                                  "default": null,
                                  "description": "A description of the item"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "format": "int32",
                                  "default": 0,
                                  "description": "The quantity of this item in the shipment."
                                },
                                "value": {
                                  "type": "number",
                                  "format": "double",
                                  "default": 0,
                                  "description": "The monetary value of each of this item."
                                },
                                "harmonized_tariff_code": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "example": 3926.1,
                                  "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                                },
                                "country_of_origin": {
                                  "nullable": true,
                                  "default": null,
                                  "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                  "title": "country_of_origin",
                                  "type": "string",
                                  "minLength": 2,
                                  "maxLength": 2,
                                  "example": "CA"
                                }
                              }
                            }
                          }
                        }
                      },
                      "advanced_options": {
                        "title": "advanced_shipment_options",
                        "type": "object",
                        "description": "Advanced shipment options",
                        "additionalProperties": false,
                        "properties": {
                          "bill_to_account": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                          },
                          "bill_to_country_code": {
                            "nullable": true,
                            "default": null,
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "bill_to_party": {
                            "nullable": true,
                            "default": null,
                            "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                            "title": "bill_to_party",
                            "type": "string",
                            "enum": [
                              "recipient",
                              "third_party"
                            ]
                          },
                          "bill_to_postal_code": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                          },
                          "contains_alcohol": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that the shipment contains alcohol."
                          },
                          "delivered_duty_paid": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                          },
                          "non_machinable": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                          },
                          "saturday_delivery": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enables Saturday delivery, if supported by the carrier."
                          },
                          "use_ups_ground_freight_pricing": {
                            "type": "boolean",
                            "nullable": true,
                            "default": null,
                            "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                          },
                          "freight_class": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "example": 77.5,
                            "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                          },
                          "custom_field1": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "maxLength": 100,
                            "description": "An arbitrary field that can be used to store information about the shipment.\n"
                          },
                          "custom_field2": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "maxLength": 100,
                            "description": "An arbitrary field that can be used to store information about the shipment.\n"
                          },
                          "custom_field3": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "maxLength": 100,
                            "description": "An arbitrary field that can be used to store information about the shipment.\n"
                          }
                        }
                      },
                      "insurance_provider": {
                        "title": "insurance_provider",
                        "type": "string",
                        "enum": [
                          "none",
                          "shipsurance",
                          "carrier",
                          "third_party"
                        ],
                        "description": "The possible insurance provider values"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "title": "tag_response_body",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "packages": {
                        "type": "array",
                        "items": {
                          "title": "package",
                          "type": "object",
                          "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                          "required": [
                            "weight"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "package_code": {
                              "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                              "title": "package_code",
                              "type": "string",
                              "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                              "example": "small_flat_rate_box"
                            },
                            "weight": {
                              "description": "The package weight",
                              "title": "weight",
                              "type": "object",
                              "required": [
                                "value",
                                "unit"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "exclusiveMinimum": true,
                                  "description": "The weight, in the specified unit"
                                },
                                "unit": {
                                  "title": "weight_unit",
                                  "type": "string",
                                  "enum": [
                                    "pound",
                                    "ounce",
                                    "gram",
                                    "kilogram"
                                  ],
                                  "description": "The possible weight unit values"
                                }
                              }
                            },
                            "dimensions": {
                              "description": "The package dimensions",
                              "title": "dimensions",
                              "type": "object",
                              "required": [
                                "unit",
                                "length",
                                "width",
                                "height"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "unit": {
                                  "default": "inch",
                                  "title": "dimension_unit",
                                  "type": "string",
                                  "enum": [
                                    "inch",
                                    "centimeter"
                                  ],
                                  "description": "The dimension units that are supported by ShipEngine."
                                },
                                "length": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "default": 0,
                                  "description": "The length of the package, in the specified unit"
                                },
                                "width": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "default": 0,
                                  "description": "The width of the package, in the specified unit"
                                },
                                "height": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "default": 0,
                                  "description": "The length of the package, in the specified unit"
                                }
                              }
                            },
                            "insured_value": {
                              "default": [
                                {
                                  "currency": "usd",
                                  "amount": 0
                                }
                              ],
                              "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                              "title": "monetary_value",
                              "type": "object",
                              "required": [
                                "currency",
                                "amount"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "currency": {
                                  "title": "currency",
                                  "type": "string",
                                  "enum": [
                                    "usd",
                                    "cad",
                                    "aud",
                                    "gbp",
                                    "eur"
                                  ],
                                  "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                },
                                "amount": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "description": "The monetary amount, in the specified currency."
                                }
                              }
                            },
                            "tracking_number": {
                              "readOnly": true,
                              "description": "The tracking number for the package.  The format depends on the carrier.\n",
                              "title": "tracking_number",
                              "type": "string",
                              "minLength": 1,
                              "example": "1Z932R800392060079"
                            },
                            "label_messages": {
                              "type": "object",
                              "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                              "required": [
                                "reference1",
                                "reference2",
                                "reference3"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "reference1": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                                },
                                "reference2": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                                },
                                "reference3": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                                }
                              }
                            }
                          }
                        }
                      },
                      "total_weight": {
                        "readOnly": true,
                        "title": "weight",
                        "type": "object",
                        "description": "The weight of a package",
                        "required": [
                          "value",
                          "unit"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "double",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "The weight, in the specified unit"
                          },
                          "unit": {
                            "title": "weight_unit",
                            "type": "string",
                            "enum": [
                              "pound",
                              "ounce",
                              "gram",
                              "kilogram"
                            ],
                            "description": "The possible weight unit values"
                          }
                        }
                      }
                    }
                  },
                  "rate_options": {
                    "title": "rate_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "carrier_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "rate_shipment_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "rate_response": {
                      "title": "rate_response_body",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "rates": {
                          "type": "array",
                          "items": {
                            "title": "rate",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "rate_id": {
                                "description": "A string that uniquely identifies the rate",
                                "title": "se_id",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 25,
                                "pattern": "^se(-[a-z0-9]+)+$",
                                "example": "se-28529731"
                              },
                              "rate_type": {
                                "title": "rate_type",
                                "type": "string",
                                "enum": [
                                  "check",
                                  "shipment"
                                ],
                                "description": "The possible rate type values"
                              },
                              "carrier_id": {
                                "description": "A string that uniquely identifies the carrier",
                                "title": "se_id",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 25,
                                "pattern": "^se(-[a-z0-9]+)+$",
                                "example": "se-28529731"
                              },
                              "shipping_amount": {
                                "title": "monetary_value",
                                "type": "object",
                                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "insurance_amount": {
                                "title": "monetary_value",
                                "type": "object",
                                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "confirmation_amount": {
                                "title": "monetary_value",
                                "type": "object",
                                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "other_amount": {
                                "title": "monetary_value",
                                "type": "object",
                                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "zone": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "package_type": {
                                "type": "string"
                              },
                              "delivery_days": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "guaranteed_service": {
                                "type": "boolean"
                              },
                              "estimated_delivery_date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "carrier_delivery_days": {
                                "type": "string"
                              },
                              "ship_date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "negotiated_rate": {
                                "type": "boolean"
                              },
                              "service_type": {
                                "type": "string"
                              },
                              "service_code": {
                                "type": "string"
                              },
                              "trackable": {
                                "type": "boolean"
                              },
                              "carrier_code": {
                                "type": "string"
                              },
                              "carrier_nickname": {
                                "type": "string"
                              },
                              "carrier_friendly_name": {
                                "type": "string"
                              },
                              "validation_status": {
                                "title": "validation_status",
                                "type": "string",
                                "enum": [
                                  "valid",
                                  "invalid",
                                  "has_warnings",
                                  "unknown"
                                ],
                                "description": "The possible validation status values"
                              },
                              "warning_messages": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "error_messages": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "invalid_rates": {
                          "type": "array",
                          "items": {
                            "title": "rate",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "rate_id": {
                                "description": "A string that uniquely identifies the rate",
                                "title": "se_id",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 25,
                                "pattern": "^se(-[a-z0-9]+)+$",
                                "example": "se-28529731"
                              },
                              "rate_type": {
                                "title": "rate_type",
                                "type": "string",
                                "enum": [
                                  "check",
                                  "shipment"
                                ],
                                "description": "The possible rate type values"
                              },
                              "carrier_id": {
                                "description": "A string that uniquely identifies the carrier",
                                "title": "se_id",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 25,
                                "pattern": "^se(-[a-z0-9]+)+$",
                                "example": "se-28529731"
                              },
                              "shipping_amount": {
                                "title": "monetary_value",
                                "type": "object",
                                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "insurance_amount": {
                                "title": "monetary_value",
                                "type": "object",
                                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "confirmation_amount": {
                                "title": "monetary_value",
                                "type": "object",
                                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "other_amount": {
                                "title": "monetary_value",
                                "type": "object",
                                "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "zone": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "package_type": {
                                "type": "string"
                              },
                              "delivery_days": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "guaranteed_service": {
                                "type": "boolean"
                              },
                              "estimated_delivery_date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "carrier_delivery_days": {
                                "type": "string"
                              },
                              "ship_date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "negotiated_rate": {
                                "type": "boolean"
                              },
                              "service_type": {
                                "type": "string"
                              },
                              "service_code": {
                                "type": "string"
                              },
                              "trackable": {
                                "type": "boolean"
                              },
                              "carrier_code": {
                                "type": "string"
                              },
                              "carrier_nickname": {
                                "type": "string"
                              },
                              "carrier_friendly_name": {
                                "type": "string"
                              },
                              "validation_status": {
                                "title": "validation_status",
                                "type": "string",
                                "enum": [
                                  "valid",
                                  "invalid",
                                  "has_warnings",
                                  "unknown"
                                ],
                                "description": "The possible validation status values"
                              },
                              "warning_messages": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "error_messages": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "rate_request_id": {
                          "description": "A string that uniquely identifies the rate request",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "shipment_id": {
                          "description": "A string that uniquely identifies the shipment",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "status": {
                          "title": "rate_response_status",
                          "type": "string",
                          "enum": [
                            "working",
                            "completed",
                            "partial",
                            "error"
                          ],
                          "description": "The possible rate response status values"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "title": "provider_error",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "carrier_id": {
                                "description": "A string that uniquely identifies the carrier",
                                "title": "se_id",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 25,
                                "pattern": "^se(-[a-z0-9]+)+$",
                                "example": "se-28529731"
                              },
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "shipment_id": {
                      "description": "A string that uniquely identifies the shipment",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "description": "A string that uniquely identifies the carrier",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "service_code": {
                      "type": "string"
                    },
                    "external_shipment_id": {
                      "description": "A string that uniquely identifies the external shipment",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "ship_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modified_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "shipment_status": {
                      "title": "shipment_status",
                      "type": "string",
                      "enum": [
                        "pending",
                        "processing",
                        "label_purchased",
                        "cancelled"
                      ],
                      "description": "The possible shipment status values"
                    },
                    "ship_to": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "ship_from": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "warehouse_id": {
                      "description": "A string that uniquely identifies the warehouse",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "return_to": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "confirmation": {
                      "title": "confirmation",
                      "type": "string",
                      "enum": [
                        "none",
                        "delivery",
                        "signature",
                        "adult_signature",
                        "direct_signature"
                      ],
                      "description": "The possible confirmation values"
                    },
                    "customs": {
                      "title": "international_shipment_options",
                      "type": "object",
                      "description": "Options for international shipments, such as customs declarations.",
                      "required": [
                        "contents",
                        "non_delivery"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "contents": {
                          "default": "merchandise",
                          "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                          "title": "contents",
                          "type": "string",
                          "enum": [
                            "merchandise",
                            "documents",
                            "gift",
                            "returned_goods",
                            "sample"
                          ]
                        },
                        "non_delivery": {
                          "default": "return_to_sender",
                          "description": "Indicates what to do if a package is unable to be delivered.",
                          "title": "non_delivery",
                          "type": "string",
                          "enum": [
                            "return_to_sender",
                            "treat_as_abandoned"
                          ]
                        },
                        "customs_items": {
                          "type": "array",
                          "default": [],
                          "minItems": 0,
                          "description": "Customs declarations for each item in the shipment.",
                          "items": {
                            "title": "customs_item",
                            "type": "object",
                            "description": "The customs declaration for a single item in the shipment.",
                            "required": [
                              "customs_item_id"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "customs_item_id": {
                                "readOnly": true,
                                "description": "A string that uniquely identifies the customs item",
                                "title": "se_id",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 25,
                                "pattern": "^se(-[a-z0-9]+)+$",
                                "example": "se-28529731"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "maxLength": 100,
                                "default": null,
                                "description": "A description of the item"
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "The quantity of this item in the shipment."
                              },
                              "value": {
                                "type": "number",
                                "format": "double",
                                "default": 0,
                                "description": "The monetary value of each of this item."
                              },
                              "harmonized_tariff_code": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "example": 3926.1,
                                "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                              },
                              "country_of_origin": {
                                "nullable": true,
                                "default": null,
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                "title": "country_of_origin",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              }
                            }
                          }
                        }
                      }
                    },
                    "advanced_options": {
                      "title": "advanced_shipment_options",
                      "type": "object",
                      "description": "Advanced shipment options",
                      "additionalProperties": false,
                      "properties": {
                        "bill_to_account": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                        },
                        "bill_to_country_code": {
                          "nullable": true,
                          "default": null,
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "bill_to_party": {
                          "nullable": true,
                          "default": null,
                          "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                          "title": "bill_to_party",
                          "type": "string",
                          "enum": [
                            "recipient",
                            "third_party"
                          ]
                        },
                        "bill_to_postal_code": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                        },
                        "contains_alcohol": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the shipment contains alcohol."
                        },
                        "delivered_duty_paid": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                        },
                        "non_machinable": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                        },
                        "saturday_delivery": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enables Saturday delivery, if supported by the carrier."
                        },
                        "use_ups_ground_freight_pricing": {
                          "type": "boolean",
                          "nullable": true,
                          "default": null,
                          "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                        },
                        "freight_class": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "example": 77.5,
                          "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                        },
                        "custom_field1": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        },
                        "custom_field2": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        },
                        "custom_field3": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        }
                      }
                    },
                    "insurance_provider": {
                      "title": "insurance_provider",
                      "type": "string",
                      "enum": [
                        "none",
                        "shipsurance",
                        "carrier",
                        "third_party"
                      ],
                      "description": "The possible insurance provider values"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "title": "tag_response_body",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "packages": {
                      "type": "array",
                      "items": {
                        "title": "package",
                        "type": "object",
                        "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                        "required": [
                          "weight"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_code": {
                            "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                            "title": "package_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "small_flat_rate_box"
                          },
                          "weight": {
                            "description": "The package weight",
                            "title": "weight",
                            "type": "object",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          },
                          "dimensions": {
                            "description": "The package dimensions",
                            "title": "dimensions",
                            "type": "object",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "insured_value": {
                            "default": [
                              {
                                "currency": "usd",
                                "amount": 0
                              }
                            ],
                            "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "tracking_number": {
                            "readOnly": true,
                            "description": "The tracking number for the package.  The format depends on the carrier.\n",
                            "title": "tracking_number",
                            "type": "string",
                            "minLength": 1,
                            "example": "1Z932R800392060079"
                          },
                          "label_messages": {
                            "type": "object",
                            "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                            "required": [
                              "reference1",
                              "reference2",
                              "reference3"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "reference1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                              }
                            }
                          }
                        }
                      }
                    },
                    "total_weight": {
                      "readOnly": true,
                      "title": "weight",
                      "type": "object",
                      "description": "The weight of a package",
                      "required": [
                        "value",
                        "unit"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "value": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "description": "The weight, in the specified unit"
                        },
                        "unit": {
                          "title": "weight_unit",
                          "type": "string",
                          "enum": [
                            "pound",
                            "ounce",
                            "gram",
                            "kilogram"
                          ],
                          "description": "The possible weight unit values"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/rates/bulk": {
      "post": {
        "tags": [
          "rates"
        ],
        "operationId": "rates.bulk_rate_shipments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "rate_shipments_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "shipment_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rate_options": {
                    "title": "rate_request_body",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "carrier_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "shipments": {
                    "type": "array",
                    "items": {
                      "title": "address_validating_shipment",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "validate_address": {
                          "title": "validate_address",
                          "type": "string",
                          "enum": [
                            "no_validation",
                            "validate_only",
                            "validate_and_clean"
                          ],
                          "description": "The possible validate address values"
                        },
                        "shipment_id": {
                          "description": "A string that uniquely identifies the shipment",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "carrier_id": {
                          "description": "A string that uniquely identifies the carrier",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "service_code": {
                          "type": "string"
                        },
                        "external_shipment_id": {
                          "description": "A string that uniquely identifies the external shipment",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "ship_date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "modified_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "shipment_status": {
                          "title": "shipment_status",
                          "type": "string",
                          "enum": [
                            "pending",
                            "processing",
                            "label_purchased",
                            "cancelled"
                          ],
                          "description": "The possible shipment status values"
                        },
                        "ship_to": {
                          "title": "address",
                          "type": "object",
                          "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "ship_from": {
                          "title": "address",
                          "type": "object",
                          "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "warehouse_id": {
                          "description": "A string that uniquely identifies the warehouse",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "return_to": {
                          "title": "address",
                          "type": "object",
                          "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "confirmation": {
                          "title": "confirmation",
                          "type": "string",
                          "enum": [
                            "none",
                            "delivery",
                            "signature",
                            "adult_signature",
                            "direct_signature"
                          ],
                          "description": "The possible confirmation values"
                        },
                        "customs": {
                          "title": "international_shipment_options",
                          "type": "object",
                          "description": "Options for international shipments, such as customs declarations.",
                          "required": [
                            "contents",
                            "non_delivery"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "contents": {
                              "default": "merchandise",
                              "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                              "title": "contents",
                              "type": "string",
                              "enum": [
                                "merchandise",
                                "documents",
                                "gift",
                                "returned_goods",
                                "sample"
                              ]
                            },
                            "non_delivery": {
                              "default": "return_to_sender",
                              "description": "Indicates what to do if a package is unable to be delivered.",
                              "title": "non_delivery",
                              "type": "string",
                              "enum": [
                                "return_to_sender",
                                "treat_as_abandoned"
                              ]
                            },
                            "customs_items": {
                              "type": "array",
                              "default": [],
                              "minItems": 0,
                              "description": "Customs declarations for each item in the shipment.",
                              "items": {
                                "title": "customs_item",
                                "type": "object",
                                "description": "The customs declaration for a single item in the shipment.",
                                "required": [
                                  "customs_item_id"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "customs_item_id": {
                                    "readOnly": true,
                                    "description": "A string that uniquely identifies the customs item",
                                    "title": "se_id",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 25,
                                    "pattern": "^se(-[a-z0-9]+)+$",
                                    "example": "se-28529731"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "maxLength": 100,
                                    "default": null,
                                    "description": "A description of the item"
                                  },
                                  "quantity": {
                                    "type": "integer",
                                    "format": "int32",
                                    "default": 0,
                                    "description": "The quantity of this item in the shipment."
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "double",
                                    "default": 0,
                                    "description": "The monetary value of each of this item."
                                  },
                                  "harmonized_tariff_code": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "example": 3926.1,
                                    "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                                  },
                                  "country_of_origin": {
                                    "nullable": true,
                                    "default": null,
                                    "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                    "title": "country_of_origin",
                                    "type": "string",
                                    "minLength": 2,
                                    "maxLength": 2,
                                    "example": "CA"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "advanced_options": {
                          "title": "advanced_shipment_options",
                          "type": "object",
                          "description": "Advanced shipment options",
                          "additionalProperties": false,
                          "properties": {
                            "bill_to_account": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                            },
                            "bill_to_country_code": {
                              "nullable": true,
                              "default": null,
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "bill_to_party": {
                              "nullable": true,
                              "default": null,
                              "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                              "title": "bill_to_party",
                              "type": "string",
                              "enum": [
                                "recipient",
                                "third_party"
                              ]
                            },
                            "bill_to_postal_code": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                            },
                            "contains_alcohol": {
                              "type": "boolean",
                              "default": false,
                              "description": "Indicates that the shipment contains alcohol."
                            },
                            "delivered_duty_paid": {
                              "type": "boolean",
                              "default": false,
                              "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                            },
                            "non_machinable": {
                              "type": "boolean",
                              "default": false,
                              "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                            },
                            "saturday_delivery": {
                              "type": "boolean",
                              "default": false,
                              "description": "Enables Saturday delivery, if supported by the carrier."
                            },
                            "use_ups_ground_freight_pricing": {
                              "type": "boolean",
                              "nullable": true,
                              "default": null,
                              "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                            },
                            "freight_class": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "example": 77.5,
                              "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                            },
                            "custom_field1": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "maxLength": 100,
                              "description": "An arbitrary field that can be used to store information about the shipment.\n"
                            },
                            "custom_field2": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "maxLength": 100,
                              "description": "An arbitrary field that can be used to store information about the shipment.\n"
                            },
                            "custom_field3": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "maxLength": 100,
                              "description": "An arbitrary field that can be used to store information about the shipment.\n"
                            }
                          }
                        },
                        "insurance_provider": {
                          "title": "insurance_provider",
                          "type": "string",
                          "enum": [
                            "none",
                            "shipsurance",
                            "carrier",
                            "third_party"
                          ],
                          "description": "The possible insurance provider values"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "title": "tag_response_body",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "packages": {
                          "type": "array",
                          "items": {
                            "title": "package",
                            "type": "object",
                            "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                            "required": [
                              "weight"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "package_code": {
                                "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                                "title": "package_code",
                                "type": "string",
                                "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                                "example": "small_flat_rate_box"
                              },
                              "weight": {
                                "description": "The package weight",
                                "title": "weight",
                                "type": "object",
                                "required": [
                                  "value",
                                  "unit"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "exclusiveMinimum": true,
                                    "description": "The weight, in the specified unit"
                                  },
                                  "unit": {
                                    "title": "weight_unit",
                                    "type": "string",
                                    "enum": [
                                      "pound",
                                      "ounce",
                                      "gram",
                                      "kilogram"
                                    ],
                                    "description": "The possible weight unit values"
                                  }
                                }
                              },
                              "dimensions": {
                                "description": "The package dimensions",
                                "title": "dimensions",
                                "type": "object",
                                "required": [
                                  "unit",
                                  "length",
                                  "width",
                                  "height"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "unit": {
                                    "default": "inch",
                                    "title": "dimension_unit",
                                    "type": "string",
                                    "enum": [
                                      "inch",
                                      "centimeter"
                                    ],
                                    "description": "The dimension units that are supported by ShipEngine."
                                  },
                                  "length": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "default": 0,
                                    "description": "The length of the package, in the specified unit"
                                  },
                                  "width": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "default": 0,
                                    "description": "The width of the package, in the specified unit"
                                  },
                                  "height": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "default": 0,
                                    "description": "The length of the package, in the specified unit"
                                  }
                                }
                              },
                              "insured_value": {
                                "default": [
                                  {
                                    "currency": "usd",
                                    "amount": 0
                                  }
                                ],
                                "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                                "title": "monetary_value",
                                "type": "object",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "tracking_number": {
                                "readOnly": true,
                                "description": "The tracking number for the package.  The format depends on the carrier.\n",
                                "title": "tracking_number",
                                "type": "string",
                                "minLength": 1,
                                "example": "1Z932R800392060079"
                              },
                              "label_messages": {
                                "type": "object",
                                "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                                "required": [
                                  "reference1",
                                  "reference2",
                                  "reference3"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "reference1": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                                  },
                                  "reference2": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                                  },
                                  "reference3": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "total_weight": {
                          "readOnly": true,
                          "title": "weight",
                          "type": "object",
                          "description": "The weight of a package",
                          "required": [
                            "value",
                            "unit"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "double",
                              "minimum": 0,
                              "exclusiveMinimum": true,
                              "description": "The weight, in the specified unit"
                            },
                            "unit": {
                              "title": "weight_unit",
                              "type": "string",
                              "enum": [
                                "pound",
                                "ounce",
                                "gram",
                                "kilogram"
                              ],
                              "description": "The possible weight unit values"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "bulk_rate_response_body",
                  "type": "array",
                  "items": {
                    "title": "bulk_rate",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "rate_request_id": {
                        "description": "A string that uniquely identifies the rate request",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "shipment_id": {
                        "description": "A string that uniquely identifies the shipment",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "title": "rate_response_status",
                        "type": "string",
                        "enum": [
                          "working",
                          "completed",
                          "partial",
                          "error"
                        ],
                        "description": "The possible rate response status values"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "title": "provider_error",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "carrier_id": {
                              "description": "A string that uniquely identifies the carrier",
                              "title": "se_id",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 25,
                              "pattern": "^se(-[a-z0-9]+)+$",
                              "example": "se-28529731"
                            },
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/rates/estimate": {
      "post": {
        "tags": [
          "rates"
        ],
        "operationId": "rates.estimate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "rate_estimate_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "carrier_id": {
                    "description": "A string that uniquely identifies the carrier",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "carrier_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "from_country_code": {
                    "type": "string"
                  },
                  "from_postal_code": {
                    "type": "string"
                  },
                  "to_country_code": {
                    "type": "string"
                  },
                  "to_postal_code": {
                    "type": "string"
                  },
                  "to_city_locality": {
                    "type": "string"
                  },
                  "to_state_province": {
                    "type": "string"
                  },
                  "weight": {
                    "title": "weight",
                    "type": "object",
                    "description": "The weight of a package",
                    "required": [
                      "value",
                      "unit"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "value": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The weight, in the specified unit"
                      },
                      "unit": {
                        "title": "weight_unit",
                        "type": "string",
                        "enum": [
                          "pound",
                          "ounce",
                          "gram",
                          "kilogram"
                        ],
                        "description": "The possible weight unit values"
                      }
                    }
                  },
                  "dimensions": {
                    "title": "dimensions",
                    "type": "object",
                    "description": "The dimensions of a package",
                    "required": [
                      "unit",
                      "length",
                      "width",
                      "height"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "unit": {
                        "default": "inch",
                        "title": "dimension_unit",
                        "type": "string",
                        "enum": [
                          "inch",
                          "centimeter"
                        ],
                        "description": "The dimension units that are supported by ShipEngine."
                      },
                      "length": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "default": 0,
                        "description": "The length of the package, in the specified unit"
                      },
                      "width": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "default": 0,
                        "description": "The width of the package, in the specified unit"
                      },
                      "height": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "default": 0,
                        "description": "The length of the package, in the specified unit"
                      }
                    }
                  },
                  "confirmation": {
                    "title": "confirmation",
                    "type": "string",
                    "enum": [
                      "none",
                      "delivery",
                      "signature",
                      "adult_signature",
                      "direct_signature"
                    ],
                    "description": "The possible confirmation values"
                  },
                  "address_residential_indicator": {
                    "title": "address_residential_indicator",
                    "type": "string",
                    "enum": [
                      "unknown",
                      "yes",
                      "no"
                    ],
                    "description": "Indicates whether an address is residential."
                  },
                  "ship_date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "rate_estimate_response_body",
                  "type": "array",
                  "items": {
                    "title": "rate",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "rate_id": {
                        "description": "A string that uniquely identifies the rate",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "rate_type": {
                        "title": "rate_type",
                        "type": "string",
                        "enum": [
                          "check",
                          "shipment"
                        ],
                        "description": "The possible rate type values"
                      },
                      "carrier_id": {
                        "description": "A string that uniquely identifies the carrier",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "shipping_amount": {
                        "title": "monetary_value",
                        "type": "object",
                        "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                        "required": [
                          "currency",
                          "amount"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "currency": {
                            "title": "currency",
                            "type": "string",
                            "enum": [
                              "usd",
                              "cad",
                              "aud",
                              "gbp",
                              "eur"
                            ],
                            "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "minimum": 0,
                            "description": "The monetary amount, in the specified currency."
                          }
                        }
                      },
                      "insurance_amount": {
                        "title": "monetary_value",
                        "type": "object",
                        "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                        "required": [
                          "currency",
                          "amount"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "currency": {
                            "title": "currency",
                            "type": "string",
                            "enum": [
                              "usd",
                              "cad",
                              "aud",
                              "gbp",
                              "eur"
                            ],
                            "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "minimum": 0,
                            "description": "The monetary amount, in the specified currency."
                          }
                        }
                      },
                      "confirmation_amount": {
                        "title": "monetary_value",
                        "type": "object",
                        "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                        "required": [
                          "currency",
                          "amount"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "currency": {
                            "title": "currency",
                            "type": "string",
                            "enum": [
                              "usd",
                              "cad",
                              "aud",
                              "gbp",
                              "eur"
                            ],
                            "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "minimum": 0,
                            "description": "The monetary amount, in the specified currency."
                          }
                        }
                      },
                      "other_amount": {
                        "title": "monetary_value",
                        "type": "object",
                        "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                        "required": [
                          "currency",
                          "amount"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "currency": {
                            "title": "currency",
                            "type": "string",
                            "enum": [
                              "usd",
                              "cad",
                              "aud",
                              "gbp",
                              "eur"
                            ],
                            "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                          },
                          "amount": {
                            "type": "number",
                            "format": "double",
                            "minimum": 0,
                            "description": "The monetary amount, in the specified currency."
                          }
                        }
                      },
                      "zone": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "package_type": {
                        "type": "string"
                      },
                      "delivery_days": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "guaranteed_service": {
                        "type": "boolean"
                      },
                      "estimated_delivery_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "carrier_delivery_days": {
                        "type": "string"
                      },
                      "ship_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "negotiated_rate": {
                        "type": "boolean"
                      },
                      "service_type": {
                        "type": "string"
                      },
                      "service_code": {
                        "type": "string"
                      },
                      "trackable": {
                        "type": "boolean"
                      },
                      "carrier_code": {
                        "type": "string"
                      },
                      "carrier_nickname": {
                        "type": "string"
                      },
                      "carrier_friendly_name": {
                        "type": "string"
                      },
                      "validation_status": {
                        "title": "validation_status",
                        "type": "string",
                        "enum": [
                          "valid",
                          "invalid",
                          "has_warnings",
                          "unknown"
                        ],
                        "description": "The possible validation status values"
                      },
                      "warning_messages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "error_messages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/rates/{rate_id}": {
      "get": {
        "tags": [
          "rates"
        ],
        "operationId": "rates.get_by_id",
        "parameters": [
          {
            "name": "rate_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "rate_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "rates": {
                      "type": "array",
                      "items": {
                        "title": "rate",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "rate_id": {
                            "description": "A string that uniquely identifies the rate",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "rate_type": {
                            "title": "rate_type",
                            "type": "string",
                            "enum": [
                              "check",
                              "shipment"
                            ],
                            "description": "The possible rate type values"
                          },
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "shipping_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "insurance_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "confirmation_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "other_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "zone": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "package_type": {
                            "type": "string"
                          },
                          "delivery_days": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "guaranteed_service": {
                            "type": "boolean"
                          },
                          "estimated_delivery_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "carrier_delivery_days": {
                            "type": "string"
                          },
                          "ship_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "negotiated_rate": {
                            "type": "boolean"
                          },
                          "service_type": {
                            "type": "string"
                          },
                          "service_code": {
                            "type": "string"
                          },
                          "trackable": {
                            "type": "boolean"
                          },
                          "carrier_code": {
                            "type": "string"
                          },
                          "carrier_nickname": {
                            "type": "string"
                          },
                          "carrier_friendly_name": {
                            "type": "string"
                          },
                          "validation_status": {
                            "title": "validation_status",
                            "type": "string",
                            "enum": [
                              "valid",
                              "invalid",
                              "has_warnings",
                              "unknown"
                            ],
                            "description": "The possible validation status values"
                          },
                          "warning_messages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "error_messages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "invalid_rates": {
                      "type": "array",
                      "items": {
                        "title": "rate",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "rate_id": {
                            "description": "A string that uniquely identifies the rate",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "rate_type": {
                            "title": "rate_type",
                            "type": "string",
                            "enum": [
                              "check",
                              "shipment"
                            ],
                            "description": "The possible rate type values"
                          },
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "shipping_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "insurance_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "confirmation_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "other_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "zone": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "package_type": {
                            "type": "string"
                          },
                          "delivery_days": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "guaranteed_service": {
                            "type": "boolean"
                          },
                          "estimated_delivery_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "carrier_delivery_days": {
                            "type": "string"
                          },
                          "ship_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "negotiated_rate": {
                            "type": "boolean"
                          },
                          "service_type": {
                            "type": "string"
                          },
                          "service_code": {
                            "type": "string"
                          },
                          "trackable": {
                            "type": "boolean"
                          },
                          "carrier_code": {
                            "type": "string"
                          },
                          "carrier_nickname": {
                            "type": "string"
                          },
                          "carrier_friendly_name": {
                            "type": "string"
                          },
                          "validation_status": {
                            "title": "validation_status",
                            "type": "string",
                            "enum": [
                              "valid",
                              "invalid",
                              "has_warnings",
                              "unknown"
                            ],
                            "description": "The possible validation status values"
                          },
                          "warning_messages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "error_messages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "rate_request_id": {
                      "description": "A string that uniquely identifies the rate request",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "shipment_id": {
                      "description": "A string that uniquely identifies the shipment",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "title": "rate_response_status",
                      "type": "string",
                      "enum": [
                        "working",
                        "completed",
                        "partial",
                        "error"
                      ],
                      "description": "The possible rate response status values"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "provider_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipments": {
      "get": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.list",
        "parameters": [
          {
            "name": "shipment_status",
            "in": "query",
            "required": false,
            "schema": {
              "title": "shipment_status",
              "type": "string",
              "enum": [
                "pending",
                "processing",
                "label_purchased",
                "cancelled"
              ],
              "description": "The possible shipment status values"
            }
          },
          {
            "name": "batch_id",
            "in": "query",
            "required": false,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created_at_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "modified_at_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "modified_at_end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            },
            "example": 2,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 25
            },
            "example": 50,
            "description": "The number of results to return per response."
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "schema": {
              "default": "desc",
              "title": "sort_dir",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "description": "Controls the sort order of queries\n\n|Value     |Description\n|:---------|:-----------------------------------------------------\n|`asc`     |Return results in ascending order\n|`desc`    |Return results in descending order\n"
            },
            "description": "Controls the sort order of the query."
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "title": "shipments_sort_by",
              "type": "string",
              "enum": [
                "modified_at",
                "created_at"
              ],
              "description": "The possible shipments sort by values"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "list_shipment_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "shipments": {
                      "type": "array",
                      "items": {
                        "title": "shipment",
                        "type": "object",
                        "description": "The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.\n\n> **Note:** Either `ship_from` or `warehouse_id` must be set.\n",
                        "required": [
                          "shipment_id",
                          "carrier_id",
                          "service_code",
                          "ship_date",
                          "created_at",
                          "modified_at",
                          "shipment_status",
                          "ship_to",
                          "ship_from",
                          "warehouse_id",
                          "return_to",
                          "confirmation",
                          "customs",
                          "advanced_options",
                          "insurance_provider",
                          "tags",
                          "packages",
                          "total_weight"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "shipment_id": {
                            "readOnly": true,
                            "description": "A string that uniquely identifies the shipment",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "carrier_id": {
                            "description": "The carrier account that is billed for the shipping charges",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "service_code": {
                            "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                            "title": "service_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                            "example": "usps_first_class_mail"
                          },
                          "external_shipment_id": {
                            "type": "string",
                            "maxLength": 50,
                            "nullable": true,
                            "description": "You can optionally use this field to store your own identifier for this shipment.\n\n> **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.\n"
                          },
                          "ship_date": {
                            "description": "The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                            "title": "date",
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                            "example": "2018-09-23T00:00:00.000Z"
                          },
                          "created_at": {
                            "readOnly": true,
                            "description": "The date and time that the shipment was created in ShipEngine.",
                            "title": "date_time",
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                            "example": "2018-09-23T15:00:00.000Z"
                          },
                          "modified_at": {
                            "readOnly": true,
                            "description": "The date and time that the shipment was created or last modified.",
                            "title": "date_time",
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                            "example": "2018-09-23T15:00:00.000Z"
                          },
                          "shipment_status": {
                            "readOnly": true,
                            "default": "pending",
                            "description": "The current status of the shipment",
                            "title": "shipment_status",
                            "type": "string",
                            "enum": [
                              "pending",
                              "processing",
                              "label_purchased",
                              "cancelled"
                            ]
                          },
                          "ship_to": {
                            "description": "The recipient's mailing address",
                            "title": "address",
                            "type": "object",
                            "required": [
                              "address_line1",
                              "city_locality",
                              "state_province",
                              "postal_code",
                              "country_code",
                              "address_residential_indicator"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "John Doe",
                                "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                              },
                              "phone": {
                                "type": "string",
                                "minLength": 1,
                                "example": "+1 204-253-9411 ext. 123",
                                "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                              },
                              "company_name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "The Home Depot",
                                "description": "If this is a business address, then the company name should be specified here.\n"
                              },
                              "address_line1": {
                                "type": "string",
                                "minLength": 1,
                                "example": "1999 Bishop Grandin Blvd.",
                                "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                              },
                              "address_line2": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Unit 408",
                                "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "address_line3": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Building #7",
                                "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "city_locality": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Winnipeg",
                                "description": "The name of the city or locality"
                              },
                              "state_province": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Manitoba",
                                "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                              },
                              "postal_code": {
                                "type": "string",
                                "minLength": 1,
                                "example": "MB R2M 3E8",
                                "description": "postal code"
                              },
                              "country_code": {
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "address_residential_indicator": {
                                "default": "unknown",
                                "example": "no",
                                "description": "Indicates whether this is a residential address.",
                                "title": "address_residential_indicator",
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "yes",
                                  "no"
                                ]
                              }
                            }
                          },
                          "ship_from": {
                            "description": "The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://docs.shipengine.com/docs/create-a-warehouse).  Then you can simply specify the `warehouse_id` rather than the complete address each time.\n",
                            "title": "address",
                            "type": "object",
                            "required": [
                              "address_line1",
                              "city_locality",
                              "state_province",
                              "postal_code",
                              "country_code",
                              "address_residential_indicator"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "John Doe",
                                "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                              },
                              "phone": {
                                "type": "string",
                                "minLength": 1,
                                "example": "+1 204-253-9411 ext. 123",
                                "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                              },
                              "company_name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "The Home Depot",
                                "description": "If this is a business address, then the company name should be specified here.\n"
                              },
                              "address_line1": {
                                "type": "string",
                                "minLength": 1,
                                "example": "1999 Bishop Grandin Blvd.",
                                "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                              },
                              "address_line2": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Unit 408",
                                "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "address_line3": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Building #7",
                                "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "city_locality": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Winnipeg",
                                "description": "The name of the city or locality"
                              },
                              "state_province": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Manitoba",
                                "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                              },
                              "postal_code": {
                                "type": "string",
                                "minLength": 1,
                                "example": "MB R2M 3E8",
                                "description": "postal code"
                              },
                              "country_code": {
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "address_residential_indicator": {
                                "default": "unknown",
                                "example": "no",
                                "description": "Indicates whether this is a residential address.",
                                "title": "address_residential_indicator",
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "yes",
                                  "no"
                                ]
                              }
                            }
                          },
                          "warehouse_id": {
                            "nullable": true,
                            "default": null,
                            "description": "The [warehouse](https://docs.shipengine.com/docs/ship-from-a-warehouse) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.\n",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "return_to": {
                            "description": "The return address for this shipment.  Defaults to the `ship_from` address.\n",
                            "title": "address",
                            "type": "object",
                            "required": [
                              "address_line1",
                              "city_locality",
                              "state_province",
                              "postal_code",
                              "country_code",
                              "address_residential_indicator"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "John Doe",
                                "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                              },
                              "phone": {
                                "type": "string",
                                "minLength": 1,
                                "example": "+1 204-253-9411 ext. 123",
                                "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                              },
                              "company_name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "The Home Depot",
                                "description": "If this is a business address, then the company name should be specified here.\n"
                              },
                              "address_line1": {
                                "type": "string",
                                "minLength": 1,
                                "example": "1999 Bishop Grandin Blvd.",
                                "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                              },
                              "address_line2": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Unit 408",
                                "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "address_line3": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Building #7",
                                "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "city_locality": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Winnipeg",
                                "description": "The name of the city or locality"
                              },
                              "state_province": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Manitoba",
                                "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                              },
                              "postal_code": {
                                "type": "string",
                                "minLength": 1,
                                "example": "MB R2M 3E8",
                                "description": "postal code"
                              },
                              "country_code": {
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "address_residential_indicator": {
                                "default": "unknown",
                                "example": "no",
                                "description": "Indicates whether this is a residential address.",
                                "title": "address_residential_indicator",
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "yes",
                                  "no"
                                ]
                              }
                            }
                          },
                          "confirmation": {
                            "default": "none",
                            "description": "The type of delivery confirmation that is required for this shipment.",
                            "title": "confirmation",
                            "type": "string",
                            "enum": [
                              "none",
                              "delivery",
                              "signature",
                              "adult_signature",
                              "direct_signature"
                            ]
                          },
                          "customs": {
                            "nullable": true,
                            "default": null,
                            "description": "Customs information.  This is usually only needed for international shipments.\n",
                            "title": "international_shipment_options",
                            "type": "object",
                            "required": [
                              "contents",
                              "non_delivery"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "contents": {
                                "default": "merchandise",
                                "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                                "title": "contents",
                                "type": "string",
                                "enum": [
                                  "merchandise",
                                  "documents",
                                  "gift",
                                  "returned_goods",
                                  "sample"
                                ]
                              },
                              "non_delivery": {
                                "default": "return_to_sender",
                                "description": "Indicates what to do if a package is unable to be delivered.",
                                "title": "non_delivery",
                                "type": "string",
                                "enum": [
                                  "return_to_sender",
                                  "treat_as_abandoned"
                                ]
                              },
                              "customs_items": {
                                "type": "array",
                                "default": [],
                                "minItems": 0,
                                "description": "Customs declarations for each item in the shipment.",
                                "items": {
                                  "title": "customs_item",
                                  "type": "object",
                                  "description": "The customs declaration for a single item in the shipment.",
                                  "required": [
                                    "customs_item_id"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "customs_item_id": {
                                      "readOnly": true,
                                      "description": "A string that uniquely identifies the customs item",
                                      "title": "se_id",
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 25,
                                      "pattern": "^se(-[a-z0-9]+)+$",
                                      "example": "se-28529731"
                                    },
                                    "description": {
                                      "type": "string",
                                      "nullable": true,
                                      "maxLength": 100,
                                      "default": null,
                                      "description": "A description of the item"
                                    },
                                    "quantity": {
                                      "type": "integer",
                                      "format": "int32",
                                      "default": 0,
                                      "description": "The quantity of this item in the shipment."
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "double",
                                      "default": 0,
                                      "description": "The monetary value of each of this item."
                                    },
                                    "harmonized_tariff_code": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "example": 3926.1,
                                      "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                                    },
                                    "country_of_origin": {
                                      "nullable": true,
                                      "default": null,
                                      "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                      "title": "country_of_origin",
                                      "type": "string",
                                      "minLength": 2,
                                      "maxLength": 2,
                                      "example": "CA"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "advanced_options": {
                            "description": "Advanced shipment options.  These are entirely optional.",
                            "title": "advanced_shipment_options",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "bill_to_account": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                              },
                              "bill_to_country_code": {
                                "nullable": true,
                                "default": null,
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "bill_to_party": {
                                "nullable": true,
                                "default": null,
                                "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                                "title": "bill_to_party",
                                "type": "string",
                                "enum": [
                                  "recipient",
                                  "third_party"
                                ]
                              },
                              "bill_to_postal_code": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                              },
                              "contains_alcohol": {
                                "type": "boolean",
                                "default": false,
                                "description": "Indicates that the shipment contains alcohol."
                              },
                              "delivered_duty_paid": {
                                "type": "boolean",
                                "default": false,
                                "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                              },
                              "non_machinable": {
                                "type": "boolean",
                                "default": false,
                                "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                              },
                              "saturday_delivery": {
                                "type": "boolean",
                                "default": false,
                                "description": "Enables Saturday delivery, if supported by the carrier."
                              },
                              "use_ups_ground_freight_pricing": {
                                "type": "boolean",
                                "nullable": true,
                                "default": null,
                                "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                              },
                              "freight_class": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "example": 77.5,
                                "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                              },
                              "custom_field1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "maxLength": 100,
                                "description": "An arbitrary field that can be used to store information about the shipment.\n"
                              },
                              "custom_field2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "maxLength": 100,
                                "description": "An arbitrary field that can be used to store information about the shipment.\n"
                              },
                              "custom_field3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "maxLength": 100,
                                "description": "An arbitrary field that can be used to store information about the shipment.\n"
                              }
                            }
                          },
                          "insurance_provider": {
                            "default": "none",
                            "description": "The insurance provider to use for any insured packages in the shipment.\n",
                            "title": "insurance_provider",
                            "type": "string",
                            "enum": [
                              "none",
                              "shipsurance",
                              "carrier",
                              "third_party"
                            ]
                          },
                          "tags": {
                            "type": "array",
                            "readOnly": true,
                            "default": [],
                            "minItems": 0,
                            "items": {
                              "title": "tag",
                              "type": "object",
                              "description": "Tags are arbitrary strings that you can use to categorize shipments.  For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
                              "required": [
                                "name"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "Fragile",
                                  "description": "The tag name."
                                }
                              }
                            },
                            "description": "Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.\n"
                          },
                          "packages": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "title": "package",
                              "type": "object",
                              "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                              "required": [
                                "weight"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "package_code": {
                                  "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                                  "title": "package_code",
                                  "type": "string",
                                  "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                                  "example": "small_flat_rate_box"
                                },
                                "weight": {
                                  "description": "The package weight",
                                  "title": "weight",
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "unit"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "exclusiveMinimum": true,
                                      "description": "The weight, in the specified unit"
                                    },
                                    "unit": {
                                      "title": "weight_unit",
                                      "type": "string",
                                      "enum": [
                                        "pound",
                                        "ounce",
                                        "gram",
                                        "kilogram"
                                      ],
                                      "description": "The possible weight unit values"
                                    }
                                  }
                                },
                                "dimensions": {
                                  "description": "The package dimensions",
                                  "title": "dimensions",
                                  "type": "object",
                                  "required": [
                                    "unit",
                                    "length",
                                    "width",
                                    "height"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "unit": {
                                      "default": "inch",
                                      "title": "dimension_unit",
                                      "type": "string",
                                      "enum": [
                                        "inch",
                                        "centimeter"
                                      ],
                                      "description": "The dimension units that are supported by ShipEngine."
                                    },
                                    "length": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The length of the package, in the specified unit"
                                    },
                                    "width": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The width of the package, in the specified unit"
                                    },
                                    "height": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The length of the package, in the specified unit"
                                    }
                                  }
                                },
                                "insured_value": {
                                  "default": [
                                    {
                                      "currency": "usd",
                                      "amount": 0
                                    }
                                  ],
                                  "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                                  "title": "monetary_value",
                                  "type": "object",
                                  "required": [
                                    "currency",
                                    "amount"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "currency": {
                                      "title": "currency",
                                      "type": "string",
                                      "enum": [
                                        "usd",
                                        "cad",
                                        "aud",
                                        "gbp",
                                        "eur"
                                      ],
                                      "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                    },
                                    "amount": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "description": "The monetary amount, in the specified currency."
                                    }
                                  }
                                },
                                "tracking_number": {
                                  "readOnly": true,
                                  "description": "The tracking number for the package.  The format depends on the carrier.\n",
                                  "title": "tracking_number",
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "1Z932R800392060079"
                                },
                                "label_messages": {
                                  "type": "object",
                                  "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                                  "required": [
                                    "reference1",
                                    "reference2",
                                    "reference3"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "reference1": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                                    },
                                    "reference2": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                                    },
                                    "reference3": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                                    }
                                  }
                                }
                              }
                            },
                            "description": "The packages in the shipment.\n\n> **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.\n"
                          },
                          "total_weight": {
                            "readOnly": true,
                            "description": "The combined weight of all packages in the shipment",
                            "title": "weight",
                            "type": "object",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "page": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pages": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "links": {
                      "title": "pagination_link",
                      "type": "object",
                      "description": "Helpful links to other pages of results",
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "first": {
                          "description": "The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "last": {
                          "description": "The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "prev": {
                          "description": "The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "next": {
                          "description": "The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.create_shipments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "create_shipments_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "shipments": {
                    "type": "array",
                    "items": {
                      "title": "address_validating_shipment",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "validate_address": {
                          "title": "validate_address",
                          "type": "string",
                          "enum": [
                            "no_validation",
                            "validate_only",
                            "validate_and_clean"
                          ],
                          "description": "The possible validate address values"
                        },
                        "shipment_id": {
                          "description": "A string that uniquely identifies the shipment",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "carrier_id": {
                          "description": "A string that uniquely identifies the carrier",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "service_code": {
                          "type": "string"
                        },
                        "external_shipment_id": {
                          "description": "A string that uniquely identifies the external shipment",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "ship_date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "modified_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "shipment_status": {
                          "title": "shipment_status",
                          "type": "string",
                          "enum": [
                            "pending",
                            "processing",
                            "label_purchased",
                            "cancelled"
                          ],
                          "description": "The possible shipment status values"
                        },
                        "ship_to": {
                          "title": "address",
                          "type": "object",
                          "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "ship_from": {
                          "title": "address",
                          "type": "object",
                          "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "warehouse_id": {
                          "description": "A string that uniquely identifies the warehouse",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "return_to": {
                          "title": "address",
                          "type": "object",
                          "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "confirmation": {
                          "title": "confirmation",
                          "type": "string",
                          "enum": [
                            "none",
                            "delivery",
                            "signature",
                            "adult_signature",
                            "direct_signature"
                          ],
                          "description": "The possible confirmation values"
                        },
                        "customs": {
                          "title": "international_shipment_options",
                          "type": "object",
                          "description": "Options for international shipments, such as customs declarations.",
                          "required": [
                            "contents",
                            "non_delivery"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "contents": {
                              "default": "merchandise",
                              "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                              "title": "contents",
                              "type": "string",
                              "enum": [
                                "merchandise",
                                "documents",
                                "gift",
                                "returned_goods",
                                "sample"
                              ]
                            },
                            "non_delivery": {
                              "default": "return_to_sender",
                              "description": "Indicates what to do if a package is unable to be delivered.",
                              "title": "non_delivery",
                              "type": "string",
                              "enum": [
                                "return_to_sender",
                                "treat_as_abandoned"
                              ]
                            },
                            "customs_items": {
                              "type": "array",
                              "default": [],
                              "minItems": 0,
                              "description": "Customs declarations for each item in the shipment.",
                              "items": {
                                "title": "customs_item",
                                "type": "object",
                                "description": "The customs declaration for a single item in the shipment.",
                                "required": [
                                  "customs_item_id"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "customs_item_id": {
                                    "readOnly": true,
                                    "description": "A string that uniquely identifies the customs item",
                                    "title": "se_id",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 25,
                                    "pattern": "^se(-[a-z0-9]+)+$",
                                    "example": "se-28529731"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "maxLength": 100,
                                    "default": null,
                                    "description": "A description of the item"
                                  },
                                  "quantity": {
                                    "type": "integer",
                                    "format": "int32",
                                    "default": 0,
                                    "description": "The quantity of this item in the shipment."
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "double",
                                    "default": 0,
                                    "description": "The monetary value of each of this item."
                                  },
                                  "harmonized_tariff_code": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "example": 3926.1,
                                    "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                                  },
                                  "country_of_origin": {
                                    "nullable": true,
                                    "default": null,
                                    "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                    "title": "country_of_origin",
                                    "type": "string",
                                    "minLength": 2,
                                    "maxLength": 2,
                                    "example": "CA"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "advanced_options": {
                          "title": "advanced_shipment_options",
                          "type": "object",
                          "description": "Advanced shipment options",
                          "additionalProperties": false,
                          "properties": {
                            "bill_to_account": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                            },
                            "bill_to_country_code": {
                              "nullable": true,
                              "default": null,
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "bill_to_party": {
                              "nullable": true,
                              "default": null,
                              "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                              "title": "bill_to_party",
                              "type": "string",
                              "enum": [
                                "recipient",
                                "third_party"
                              ]
                            },
                            "bill_to_postal_code": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                            },
                            "contains_alcohol": {
                              "type": "boolean",
                              "default": false,
                              "description": "Indicates that the shipment contains alcohol."
                            },
                            "delivered_duty_paid": {
                              "type": "boolean",
                              "default": false,
                              "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                            },
                            "non_machinable": {
                              "type": "boolean",
                              "default": false,
                              "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                            },
                            "saturday_delivery": {
                              "type": "boolean",
                              "default": false,
                              "description": "Enables Saturday delivery, if supported by the carrier."
                            },
                            "use_ups_ground_freight_pricing": {
                              "type": "boolean",
                              "nullable": true,
                              "default": null,
                              "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                            },
                            "freight_class": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "example": 77.5,
                              "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                            },
                            "custom_field1": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "maxLength": 100,
                              "description": "An arbitrary field that can be used to store information about the shipment.\n"
                            },
                            "custom_field2": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "maxLength": 100,
                              "description": "An arbitrary field that can be used to store information about the shipment.\n"
                            },
                            "custom_field3": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "maxLength": 100,
                              "description": "An arbitrary field that can be used to store information about the shipment.\n"
                            }
                          }
                        },
                        "insurance_provider": {
                          "title": "insurance_provider",
                          "type": "string",
                          "enum": [
                            "none",
                            "shipsurance",
                            "carrier",
                            "third_party"
                          ],
                          "description": "The possible insurance provider values"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "title": "tag_response_body",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "packages": {
                          "type": "array",
                          "items": {
                            "title": "package",
                            "type": "object",
                            "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                            "required": [
                              "weight"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "package_code": {
                                "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                                "title": "package_code",
                                "type": "string",
                                "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                                "example": "small_flat_rate_box"
                              },
                              "weight": {
                                "description": "The package weight",
                                "title": "weight",
                                "type": "object",
                                "required": [
                                  "value",
                                  "unit"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "exclusiveMinimum": true,
                                    "description": "The weight, in the specified unit"
                                  },
                                  "unit": {
                                    "title": "weight_unit",
                                    "type": "string",
                                    "enum": [
                                      "pound",
                                      "ounce",
                                      "gram",
                                      "kilogram"
                                    ],
                                    "description": "The possible weight unit values"
                                  }
                                }
                              },
                              "dimensions": {
                                "description": "The package dimensions",
                                "title": "dimensions",
                                "type": "object",
                                "required": [
                                  "unit",
                                  "length",
                                  "width",
                                  "height"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "unit": {
                                    "default": "inch",
                                    "title": "dimension_unit",
                                    "type": "string",
                                    "enum": [
                                      "inch",
                                      "centimeter"
                                    ],
                                    "description": "The dimension units that are supported by ShipEngine."
                                  },
                                  "length": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "default": 0,
                                    "description": "The length of the package, in the specified unit"
                                  },
                                  "width": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "default": 0,
                                    "description": "The width of the package, in the specified unit"
                                  },
                                  "height": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "default": 0,
                                    "description": "The length of the package, in the specified unit"
                                  }
                                }
                              },
                              "insured_value": {
                                "default": [
                                  {
                                    "currency": "usd",
                                    "amount": 0
                                  }
                                ],
                                "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                                "title": "monetary_value",
                                "type": "object",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "tracking_number": {
                                "readOnly": true,
                                "description": "The tracking number for the package.  The format depends on the carrier.\n",
                                "title": "tracking_number",
                                "type": "string",
                                "minLength": 1,
                                "example": "1Z932R800392060079"
                              },
                              "label_messages": {
                                "type": "object",
                                "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                                "required": [
                                  "reference1",
                                  "reference2",
                                  "reference3"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "reference1": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                                  },
                                  "reference2": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                                  },
                                  "reference3": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "total_weight": {
                          "readOnly": true,
                          "title": "weight",
                          "type": "object",
                          "description": "The weight of a package",
                          "required": [
                            "value",
                            "unit"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "double",
                              "minimum": 0,
                              "exclusiveMinimum": true,
                              "description": "The weight, in the specified unit"
                            },
                            "unit": {
                              "title": "weight_unit",
                              "type": "string",
                              "enum": [
                                "pound",
                                "ounce",
                                "gram",
                                "kilogram"
                              ],
                              "description": "The possible weight unit values"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The requested object creation was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "create_shipments_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "has_errors": {
                      "type": "boolean"
                    },
                    "shipments": {
                      "type": "array",
                      "items": {
                        "title": "create_shipment_response_body",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "address_validation": {
                            "title": "address_validation_result",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "status": {
                                "title": "address_validation_status",
                                "type": "string",
                                "enum": [
                                  "unverified",
                                  "verified",
                                  "warning",
                                  "error"
                                ],
                                "description": "The possible address validation status values"
                              },
                              "original_address": {
                                "title": "address",
                                "type": "object",
                                "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                                "required": [
                                  "address_line1",
                                  "city_locality",
                                  "state_province",
                                  "postal_code",
                                  "country_code",
                                  "address_residential_indicator"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "John Doe",
                                    "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                                  },
                                  "phone": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "+1 204-253-9411 ext. 123",
                                    "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                                  },
                                  "company_name": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "The Home Depot",
                                    "description": "If this is a business address, then the company name should be specified here.\n"
                                  },
                                  "address_line1": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "1999 Bishop Grandin Blvd.",
                                    "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                                  },
                                  "address_line2": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "Unit 408",
                                    "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                                  },
                                  "address_line3": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "Building #7",
                                    "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                                  },
                                  "city_locality": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "Winnipeg",
                                    "description": "The name of the city or locality"
                                  },
                                  "state_province": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "Manitoba",
                                    "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "MB R2M 3E8",
                                    "description": "postal code"
                                  },
                                  "country_code": {
                                    "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                    "title": "country_code",
                                    "type": "string",
                                    "minLength": 2,
                                    "maxLength": 2,
                                    "example": "CA"
                                  },
                                  "address_residential_indicator": {
                                    "default": "unknown",
                                    "example": "no",
                                    "description": "Indicates whether this is a residential address.",
                                    "title": "address_residential_indicator",
                                    "type": "string",
                                    "enum": [
                                      "unknown",
                                      "yes",
                                      "no"
                                    ]
                                  }
                                }
                              },
                              "matched_address": {
                                "title": "address",
                                "type": "object",
                                "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                                "required": [
                                  "address_line1",
                                  "city_locality",
                                  "state_province",
                                  "postal_code",
                                  "country_code",
                                  "address_residential_indicator"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "John Doe",
                                    "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                                  },
                                  "phone": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "+1 204-253-9411 ext. 123",
                                    "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                                  },
                                  "company_name": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "The Home Depot",
                                    "description": "If this is a business address, then the company name should be specified here.\n"
                                  },
                                  "address_line1": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "1999 Bishop Grandin Blvd.",
                                    "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                                  },
                                  "address_line2": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "Unit 408",
                                    "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                                  },
                                  "address_line3": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "Building #7",
                                    "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                                  },
                                  "city_locality": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "Winnipeg",
                                    "description": "The name of the city or locality"
                                  },
                                  "state_province": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "Manitoba",
                                    "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                                  },
                                  "postal_code": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "MB R2M 3E8",
                                    "description": "postal code"
                                  },
                                  "country_code": {
                                    "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                    "title": "country_code",
                                    "type": "string",
                                    "minLength": 2,
                                    "maxLength": 2,
                                    "example": "CA"
                                  },
                                  "address_residential_indicator": {
                                    "default": "unknown",
                                    "example": "no",
                                    "description": "Indicates whether this is a residential address.",
                                    "title": "address_residential_indicator",
                                    "type": "string",
                                    "enum": [
                                      "unknown",
                                      "yes",
                                      "no"
                                    ]
                                  }
                                }
                              },
                              "messages": {
                                "type": "array",
                                "items": {
                                  "title": "response_message",
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "code": {
                                      "title": "address_validation_code",
                                      "type": "string",
                                      "enum": [
                                        "a1000",
                                        "a1001",
                                        "a1002",
                                        "a1003",
                                        "a1004",
                                        "a1005",
                                        "a1006",
                                        "a1007",
                                        "a1008",
                                        "r1000",
                                        "r1001",
                                        "r1002",
                                        "r1003"
                                      ],
                                      "description": "The error codes that can be returned by the address validation API"
                                    },
                                    "message": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "address_validation_message_type",
                                      "type": "string",
                                      "enum": [
                                        "error",
                                        "warning",
                                        "info"
                                      ],
                                      "description": "The different types of messages that can be returned by the address validation API"
                                    },
                                    "detail_code": {
                                      "title": "address_validation_detail_code",
                                      "type": "string",
                                      "enum": [
                                        "unsupported_country",
                                        "non_supported_country",
                                        "minimum_postal_code_verification_failed",
                                        "street_does_not_match_unique_street_name",
                                        "multiple_directionals",
                                        "multiple_matches",
                                        "suite_not_valid",
                                        "suite_missing",
                                        "invalid_house_number",
                                        "missing_house_number",
                                        "invalid_box_number",
                                        "missing_box_number",
                                        "missing_cmra_or_private_mail_box_number",
                                        "suite_has_no_secondaries",
                                        "postal_code_changed_or_added",
                                        "state_province_changed_or_added",
                                        "city_locality_changed_or_added",
                                        "urbanization_changed",
                                        "street_name_spelling_changed_or_added",
                                        "street_name_type_changed_or_added",
                                        "street_direction_changed_or_added",
                                        "suite_type_changed_or_added",
                                        "suite_unit_number_changed_or_added",
                                        "double_dependent_locality_changed_or_added",
                                        "subadministrative_area_changed_or_added",
                                        "subnational_area_changed_or_added",
                                        "p_o_box_changed_or_added",
                                        "premise_type_changed_or_added",
                                        "house_number_changed",
                                        "organization_changed_or_added",
                                        "partially_verified_to_state_level",
                                        "partially_verified_to_city_level",
                                        "partially_verified_to_street_level",
                                        "partially_verified_to_premise_level",
                                        "verified_to_state_level",
                                        "verified_to_city_level",
                                        "verified_to_street_level",
                                        "verified_to_premise_level",
                                        "verified_to_suite_level",
                                        "coded_to_street_lavel",
                                        "coded_to_neighborhood_level",
                                        "coded_to_community_level",
                                        "coded_to_state_level",
                                        "coded_to_rooftop_level",
                                        "coded_to_rooftop_interpolation_level",
                                        "name_max_length_exceeded",
                                        "phone_max_length_exceeded",
                                        "company_name_max_length_exceeded",
                                        "line1_min_max_length",
                                        "line2_max_length_exceeded",
                                        "line3_max_length_exceeded",
                                        "city_locality_max_length_exceeded",
                                        "state_province_max_length_exceeded",
                                        "invalid_postal_code",
                                        "country_invalid_length"
                                      ],
                                      "description": "The detailed error codes that can be returned by the address validation API"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "shipment_id": {
                            "description": "A string that uniquely identifies the shipment",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "service_code": {
                            "type": "string"
                          },
                          "external_shipment_id": {
                            "description": "A string that uniquely identifies the external shipment",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "ship_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "modified_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "shipment_status": {
                            "title": "shipment_status",
                            "type": "string",
                            "enum": [
                              "pending",
                              "processing",
                              "label_purchased",
                              "cancelled"
                            ],
                            "description": "The possible shipment status values"
                          },
                          "ship_to": {
                            "title": "address",
                            "type": "object",
                            "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                            "required": [
                              "address_line1",
                              "city_locality",
                              "state_province",
                              "postal_code",
                              "country_code",
                              "address_residential_indicator"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "John Doe",
                                "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                              },
                              "phone": {
                                "type": "string",
                                "minLength": 1,
                                "example": "+1 204-253-9411 ext. 123",
                                "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                              },
                              "company_name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "The Home Depot",
                                "description": "If this is a business address, then the company name should be specified here.\n"
                              },
                              "address_line1": {
                                "type": "string",
                                "minLength": 1,
                                "example": "1999 Bishop Grandin Blvd.",
                                "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                              },
                              "address_line2": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Unit 408",
                                "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "address_line3": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Building #7",
                                "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "city_locality": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Winnipeg",
                                "description": "The name of the city or locality"
                              },
                              "state_province": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Manitoba",
                                "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                              },
                              "postal_code": {
                                "type": "string",
                                "minLength": 1,
                                "example": "MB R2M 3E8",
                                "description": "postal code"
                              },
                              "country_code": {
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "address_residential_indicator": {
                                "default": "unknown",
                                "example": "no",
                                "description": "Indicates whether this is a residential address.",
                                "title": "address_residential_indicator",
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "yes",
                                  "no"
                                ]
                              }
                            }
                          },
                          "ship_from": {
                            "title": "address",
                            "type": "object",
                            "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                            "required": [
                              "address_line1",
                              "city_locality",
                              "state_province",
                              "postal_code",
                              "country_code",
                              "address_residential_indicator"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "John Doe",
                                "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                              },
                              "phone": {
                                "type": "string",
                                "minLength": 1,
                                "example": "+1 204-253-9411 ext. 123",
                                "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                              },
                              "company_name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "The Home Depot",
                                "description": "If this is a business address, then the company name should be specified here.\n"
                              },
                              "address_line1": {
                                "type": "string",
                                "minLength": 1,
                                "example": "1999 Bishop Grandin Blvd.",
                                "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                              },
                              "address_line2": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Unit 408",
                                "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "address_line3": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Building #7",
                                "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "city_locality": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Winnipeg",
                                "description": "The name of the city or locality"
                              },
                              "state_province": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Manitoba",
                                "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                              },
                              "postal_code": {
                                "type": "string",
                                "minLength": 1,
                                "example": "MB R2M 3E8",
                                "description": "postal code"
                              },
                              "country_code": {
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "address_residential_indicator": {
                                "default": "unknown",
                                "example": "no",
                                "description": "Indicates whether this is a residential address.",
                                "title": "address_residential_indicator",
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "yes",
                                  "no"
                                ]
                              }
                            }
                          },
                          "warehouse_id": {
                            "description": "A string that uniquely identifies the warehouse",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "return_to": {
                            "title": "address",
                            "type": "object",
                            "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                            "required": [
                              "address_line1",
                              "city_locality",
                              "state_province",
                              "postal_code",
                              "country_code",
                              "address_residential_indicator"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "John Doe",
                                "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                              },
                              "phone": {
                                "type": "string",
                                "minLength": 1,
                                "example": "+1 204-253-9411 ext. 123",
                                "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                              },
                              "company_name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "The Home Depot",
                                "description": "If this is a business address, then the company name should be specified here.\n"
                              },
                              "address_line1": {
                                "type": "string",
                                "minLength": 1,
                                "example": "1999 Bishop Grandin Blvd.",
                                "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                              },
                              "address_line2": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Unit 408",
                                "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "address_line3": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Building #7",
                                "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "city_locality": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Winnipeg",
                                "description": "The name of the city or locality"
                              },
                              "state_province": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Manitoba",
                                "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                              },
                              "postal_code": {
                                "type": "string",
                                "minLength": 1,
                                "example": "MB R2M 3E8",
                                "description": "postal code"
                              },
                              "country_code": {
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "address_residential_indicator": {
                                "default": "unknown",
                                "example": "no",
                                "description": "Indicates whether this is a residential address.",
                                "title": "address_residential_indicator",
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "yes",
                                  "no"
                                ]
                              }
                            }
                          },
                          "confirmation": {
                            "title": "confirmation",
                            "type": "string",
                            "enum": [
                              "none",
                              "delivery",
                              "signature",
                              "adult_signature",
                              "direct_signature"
                            ],
                            "description": "The possible confirmation values"
                          },
                          "customs": {
                            "title": "international_shipment_options",
                            "type": "object",
                            "description": "Options for international shipments, such as customs declarations.",
                            "required": [
                              "contents",
                              "non_delivery"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "contents": {
                                "default": "merchandise",
                                "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                                "title": "contents",
                                "type": "string",
                                "enum": [
                                  "merchandise",
                                  "documents",
                                  "gift",
                                  "returned_goods",
                                  "sample"
                                ]
                              },
                              "non_delivery": {
                                "default": "return_to_sender",
                                "description": "Indicates what to do if a package is unable to be delivered.",
                                "title": "non_delivery",
                                "type": "string",
                                "enum": [
                                  "return_to_sender",
                                  "treat_as_abandoned"
                                ]
                              },
                              "customs_items": {
                                "type": "array",
                                "default": [],
                                "minItems": 0,
                                "description": "Customs declarations for each item in the shipment.",
                                "items": {
                                  "title": "customs_item",
                                  "type": "object",
                                  "description": "The customs declaration for a single item in the shipment.",
                                  "required": [
                                    "customs_item_id"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "customs_item_id": {
                                      "readOnly": true,
                                      "description": "A string that uniquely identifies the customs item",
                                      "title": "se_id",
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 25,
                                      "pattern": "^se(-[a-z0-9]+)+$",
                                      "example": "se-28529731"
                                    },
                                    "description": {
                                      "type": "string",
                                      "nullable": true,
                                      "maxLength": 100,
                                      "default": null,
                                      "description": "A description of the item"
                                    },
                                    "quantity": {
                                      "type": "integer",
                                      "format": "int32",
                                      "default": 0,
                                      "description": "The quantity of this item in the shipment."
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "double",
                                      "default": 0,
                                      "description": "The monetary value of each of this item."
                                    },
                                    "harmonized_tariff_code": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "example": 3926.1,
                                      "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                                    },
                                    "country_of_origin": {
                                      "nullable": true,
                                      "default": null,
                                      "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                      "title": "country_of_origin",
                                      "type": "string",
                                      "minLength": 2,
                                      "maxLength": 2,
                                      "example": "CA"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "advanced_options": {
                            "title": "advanced_shipment_options",
                            "type": "object",
                            "description": "Advanced shipment options",
                            "additionalProperties": false,
                            "properties": {
                              "bill_to_account": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                              },
                              "bill_to_country_code": {
                                "nullable": true,
                                "default": null,
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "bill_to_party": {
                                "nullable": true,
                                "default": null,
                                "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                                "title": "bill_to_party",
                                "type": "string",
                                "enum": [
                                  "recipient",
                                  "third_party"
                                ]
                              },
                              "bill_to_postal_code": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                              },
                              "contains_alcohol": {
                                "type": "boolean",
                                "default": false,
                                "description": "Indicates that the shipment contains alcohol."
                              },
                              "delivered_duty_paid": {
                                "type": "boolean",
                                "default": false,
                                "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                              },
                              "non_machinable": {
                                "type": "boolean",
                                "default": false,
                                "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                              },
                              "saturday_delivery": {
                                "type": "boolean",
                                "default": false,
                                "description": "Enables Saturday delivery, if supported by the carrier."
                              },
                              "use_ups_ground_freight_pricing": {
                                "type": "boolean",
                                "nullable": true,
                                "default": null,
                                "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                              },
                              "freight_class": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "example": 77.5,
                                "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                              },
                              "custom_field1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "maxLength": 100,
                                "description": "An arbitrary field that can be used to store information about the shipment.\n"
                              },
                              "custom_field2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "maxLength": 100,
                                "description": "An arbitrary field that can be used to store information about the shipment.\n"
                              },
                              "custom_field3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "maxLength": 100,
                                "description": "An arbitrary field that can be used to store information about the shipment.\n"
                              }
                            }
                          },
                          "insurance_provider": {
                            "title": "insurance_provider",
                            "type": "string",
                            "enum": [
                              "none",
                              "shipsurance",
                              "carrier",
                              "third_party"
                            ],
                            "description": "The possible insurance provider values"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "title": "tag_response_body",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "packages": {
                            "type": "array",
                            "items": {
                              "title": "package",
                              "type": "object",
                              "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                              "required": [
                                "weight"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "package_code": {
                                  "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                                  "title": "package_code",
                                  "type": "string",
                                  "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                                  "example": "small_flat_rate_box"
                                },
                                "weight": {
                                  "description": "The package weight",
                                  "title": "weight",
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "unit"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "exclusiveMinimum": true,
                                      "description": "The weight, in the specified unit"
                                    },
                                    "unit": {
                                      "title": "weight_unit",
                                      "type": "string",
                                      "enum": [
                                        "pound",
                                        "ounce",
                                        "gram",
                                        "kilogram"
                                      ],
                                      "description": "The possible weight unit values"
                                    }
                                  }
                                },
                                "dimensions": {
                                  "description": "The package dimensions",
                                  "title": "dimensions",
                                  "type": "object",
                                  "required": [
                                    "unit",
                                    "length",
                                    "width",
                                    "height"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "unit": {
                                      "default": "inch",
                                      "title": "dimension_unit",
                                      "type": "string",
                                      "enum": [
                                        "inch",
                                        "centimeter"
                                      ],
                                      "description": "The dimension units that are supported by ShipEngine."
                                    },
                                    "length": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The length of the package, in the specified unit"
                                    },
                                    "width": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The width of the package, in the specified unit"
                                    },
                                    "height": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "default": 0,
                                      "description": "The length of the package, in the specified unit"
                                    }
                                  }
                                },
                                "insured_value": {
                                  "default": [
                                    {
                                      "currency": "usd",
                                      "amount": 0
                                    }
                                  ],
                                  "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                                  "title": "monetary_value",
                                  "type": "object",
                                  "required": [
                                    "currency",
                                    "amount"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "currency": {
                                      "title": "currency",
                                      "type": "string",
                                      "enum": [
                                        "usd",
                                        "cad",
                                        "aud",
                                        "gbp",
                                        "eur"
                                      ],
                                      "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                    },
                                    "amount": {
                                      "type": "number",
                                      "format": "double",
                                      "minimum": 0,
                                      "description": "The monetary amount, in the specified currency."
                                    }
                                  }
                                },
                                "tracking_number": {
                                  "readOnly": true,
                                  "description": "The tracking number for the package.  The format depends on the carrier.\n",
                                  "title": "tracking_number",
                                  "type": "string",
                                  "minLength": 1,
                                  "example": "1Z932R800392060079"
                                },
                                "label_messages": {
                                  "type": "object",
                                  "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                                  "required": [
                                    "reference1",
                                    "reference2",
                                    "reference3"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "reference1": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                                    },
                                    "reference2": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                                    },
                                    "reference3": {
                                      "type": "string",
                                      "nullable": true,
                                      "default": null,
                                      "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "total_weight": {
                            "readOnly": true,
                            "title": "weight",
                            "type": "object",
                            "description": "The weight of a package",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipments/external_shipment_id/{external_shipment_id}": {
      "get": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.get_by_external_id",
        "parameters": [
          {
            "name": "external_shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "shipment_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "description": "The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.\n\n> **Note:** Either `ship_from` or `warehouse_id` must be set.\n",
                  "required": [
                    "shipment_id",
                    "carrier_id",
                    "service_code",
                    "ship_date",
                    "created_at",
                    "modified_at",
                    "shipment_status",
                    "ship_to",
                    "ship_from",
                    "warehouse_id",
                    "return_to",
                    "confirmation",
                    "customs",
                    "advanced_options",
                    "insurance_provider",
                    "tags",
                    "packages",
                    "total_weight"
                  ],
                  "properties": {
                    "shipment_id": {
                      "readOnly": true,
                      "description": "A string that uniquely identifies the shipment",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "description": "The carrier account that is billed for the shipping charges",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "service_code": {
                      "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                      "title": "service_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                      "example": "usps_first_class_mail"
                    },
                    "external_shipment_id": {
                      "type": "string",
                      "maxLength": 50,
                      "nullable": true,
                      "description": "You can optionally use this field to store your own identifier for this shipment.\n\n> **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.\n"
                    },
                    "ship_date": {
                      "description": "The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                      "title": "date",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                      "example": "2018-09-23T00:00:00.000Z"
                    },
                    "created_at": {
                      "readOnly": true,
                      "description": "The date and time that the shipment was created in ShipEngine.",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "modified_at": {
                      "readOnly": true,
                      "description": "The date and time that the shipment was created or last modified.",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "shipment_status": {
                      "readOnly": true,
                      "default": "pending",
                      "description": "The current status of the shipment",
                      "title": "shipment_status",
                      "type": "string",
                      "enum": [
                        "pending",
                        "processing",
                        "label_purchased",
                        "cancelled"
                      ]
                    },
                    "ship_to": {
                      "description": "The recipient's mailing address",
                      "title": "address",
                      "type": "object",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "ship_from": {
                      "description": "The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://docs.shipengine.com/docs/create-a-warehouse).  Then you can simply specify the `warehouse_id` rather than the complete address each time.\n",
                      "title": "address",
                      "type": "object",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "warehouse_id": {
                      "nullable": true,
                      "default": null,
                      "description": "The [warehouse](https://docs.shipengine.com/docs/ship-from-a-warehouse) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "return_to": {
                      "description": "The return address for this shipment.  Defaults to the `ship_from` address.\n",
                      "title": "address",
                      "type": "object",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "confirmation": {
                      "default": "none",
                      "description": "The type of delivery confirmation that is required for this shipment.",
                      "title": "confirmation",
                      "type": "string",
                      "enum": [
                        "none",
                        "delivery",
                        "signature",
                        "adult_signature",
                        "direct_signature"
                      ]
                    },
                    "customs": {
                      "nullable": true,
                      "default": null,
                      "description": "Customs information.  This is usually only needed for international shipments.\n",
                      "title": "international_shipment_options",
                      "type": "object",
                      "required": [
                        "contents",
                        "non_delivery"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "contents": {
                          "default": "merchandise",
                          "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                          "title": "contents",
                          "type": "string",
                          "enum": [
                            "merchandise",
                            "documents",
                            "gift",
                            "returned_goods",
                            "sample"
                          ]
                        },
                        "non_delivery": {
                          "default": "return_to_sender",
                          "description": "Indicates what to do if a package is unable to be delivered.",
                          "title": "non_delivery",
                          "type": "string",
                          "enum": [
                            "return_to_sender",
                            "treat_as_abandoned"
                          ]
                        },
                        "customs_items": {
                          "type": "array",
                          "default": [],
                          "minItems": 0,
                          "description": "Customs declarations for each item in the shipment.",
                          "items": {
                            "title": "customs_item",
                            "type": "object",
                            "description": "The customs declaration for a single item in the shipment.",
                            "required": [
                              "customs_item_id"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "customs_item_id": {
                                "readOnly": true,
                                "description": "A string that uniquely identifies the customs item",
                                "title": "se_id",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 25,
                                "pattern": "^se(-[a-z0-9]+)+$",
                                "example": "se-28529731"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "maxLength": 100,
                                "default": null,
                                "description": "A description of the item"
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "The quantity of this item in the shipment."
                              },
                              "value": {
                                "type": "number",
                                "format": "double",
                                "default": 0,
                                "description": "The monetary value of each of this item."
                              },
                              "harmonized_tariff_code": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "example": 3926.1,
                                "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                              },
                              "country_of_origin": {
                                "nullable": true,
                                "default": null,
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                "title": "country_of_origin",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              }
                            }
                          }
                        }
                      }
                    },
                    "advanced_options": {
                      "description": "Advanced shipment options.  These are entirely optional.",
                      "title": "advanced_shipment_options",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "bill_to_account": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                        },
                        "bill_to_country_code": {
                          "nullable": true,
                          "default": null,
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "bill_to_party": {
                          "nullable": true,
                          "default": null,
                          "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                          "title": "bill_to_party",
                          "type": "string",
                          "enum": [
                            "recipient",
                            "third_party"
                          ]
                        },
                        "bill_to_postal_code": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                        },
                        "contains_alcohol": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the shipment contains alcohol."
                        },
                        "delivered_duty_paid": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                        },
                        "non_machinable": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                        },
                        "saturday_delivery": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enables Saturday delivery, if supported by the carrier."
                        },
                        "use_ups_ground_freight_pricing": {
                          "type": "boolean",
                          "nullable": true,
                          "default": null,
                          "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                        },
                        "freight_class": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "example": 77.5,
                          "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                        },
                        "custom_field1": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        },
                        "custom_field2": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        },
                        "custom_field3": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        }
                      }
                    },
                    "insurance_provider": {
                      "default": "none",
                      "description": "The insurance provider to use for any insured packages in the shipment.\n",
                      "title": "insurance_provider",
                      "type": "string",
                      "enum": [
                        "none",
                        "shipsurance",
                        "carrier",
                        "third_party"
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "readOnly": true,
                      "default": [],
                      "minItems": 0,
                      "items": {
                        "title": "tag",
                        "type": "object",
                        "description": "Tags are arbitrary strings that you can use to categorize shipments.  For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Fragile",
                            "description": "The tag name."
                          }
                        }
                      },
                      "description": "Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.\n"
                    },
                    "packages": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "title": "package",
                        "type": "object",
                        "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                        "required": [
                          "weight"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_code": {
                            "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                            "title": "package_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "small_flat_rate_box"
                          },
                          "weight": {
                            "description": "The package weight",
                            "title": "weight",
                            "type": "object",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          },
                          "dimensions": {
                            "description": "The package dimensions",
                            "title": "dimensions",
                            "type": "object",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "insured_value": {
                            "default": [
                              {
                                "currency": "usd",
                                "amount": 0
                              }
                            ],
                            "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "tracking_number": {
                            "readOnly": true,
                            "description": "The tracking number for the package.  The format depends on the carrier.\n",
                            "title": "tracking_number",
                            "type": "string",
                            "minLength": 1,
                            "example": "1Z932R800392060079"
                          },
                          "label_messages": {
                            "type": "object",
                            "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                            "required": [
                              "reference1",
                              "reference2",
                              "reference3"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "reference1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                              }
                            }
                          }
                        }
                      },
                      "description": "The packages in the shipment.\n\n> **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.\n"
                    },
                    "total_weight": {
                      "readOnly": true,
                      "description": "The combined weight of all packages in the shipment",
                      "title": "weight",
                      "type": "object",
                      "required": [
                        "value",
                        "unit"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "value": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "description": "The weight, in the specified unit"
                        },
                        "unit": {
                          "title": "weight_unit",
                          "type": "string",
                          "enum": [
                            "pound",
                            "ounce",
                            "gram",
                            "kilogram"
                          ],
                          "description": "The possible weight unit values"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipments/{shipment_id}": {
      "get": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.get_by_id",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "shipment_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "description": "The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.\n\n> **Note:** Either `ship_from` or `warehouse_id` must be set.\n",
                  "required": [
                    "shipment_id",
                    "carrier_id",
                    "service_code",
                    "ship_date",
                    "created_at",
                    "modified_at",
                    "shipment_status",
                    "ship_to",
                    "ship_from",
                    "warehouse_id",
                    "return_to",
                    "confirmation",
                    "customs",
                    "advanced_options",
                    "insurance_provider",
                    "tags",
                    "packages",
                    "total_weight"
                  ],
                  "properties": {
                    "shipment_id": {
                      "readOnly": true,
                      "description": "A string that uniquely identifies the shipment",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "description": "The carrier account that is billed for the shipping charges",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "service_code": {
                      "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                      "title": "service_code",
                      "type": "string",
                      "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                      "example": "usps_first_class_mail"
                    },
                    "external_shipment_id": {
                      "type": "string",
                      "maxLength": 50,
                      "nullable": true,
                      "description": "You can optionally use this field to store your own identifier for this shipment.\n\n> **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.\n"
                    },
                    "ship_date": {
                      "description": "The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                      "title": "date",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                      "example": "2018-09-23T00:00:00.000Z"
                    },
                    "created_at": {
                      "readOnly": true,
                      "description": "The date and time that the shipment was created in ShipEngine.",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "modified_at": {
                      "readOnly": true,
                      "description": "The date and time that the shipment was created or last modified.",
                      "title": "date_time",
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                      "example": "2018-09-23T15:00:00.000Z"
                    },
                    "shipment_status": {
                      "readOnly": true,
                      "default": "pending",
                      "description": "The current status of the shipment",
                      "title": "shipment_status",
                      "type": "string",
                      "enum": [
                        "pending",
                        "processing",
                        "label_purchased",
                        "cancelled"
                      ]
                    },
                    "ship_to": {
                      "description": "The recipient's mailing address",
                      "title": "address",
                      "type": "object",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "ship_from": {
                      "description": "The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://docs.shipengine.com/docs/create-a-warehouse).  Then you can simply specify the `warehouse_id` rather than the complete address each time.\n",
                      "title": "address",
                      "type": "object",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "warehouse_id": {
                      "nullable": true,
                      "default": null,
                      "description": "The [warehouse](https://docs.shipengine.com/docs/ship-from-a-warehouse) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.\n",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "return_to": {
                      "description": "The return address for this shipment.  Defaults to the `ship_from` address.\n",
                      "title": "address",
                      "type": "object",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "confirmation": {
                      "default": "none",
                      "description": "The type of delivery confirmation that is required for this shipment.",
                      "title": "confirmation",
                      "type": "string",
                      "enum": [
                        "none",
                        "delivery",
                        "signature",
                        "adult_signature",
                        "direct_signature"
                      ]
                    },
                    "customs": {
                      "nullable": true,
                      "default": null,
                      "description": "Customs information.  This is usually only needed for international shipments.\n",
                      "title": "international_shipment_options",
                      "type": "object",
                      "required": [
                        "contents",
                        "non_delivery"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "contents": {
                          "default": "merchandise",
                          "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                          "title": "contents",
                          "type": "string",
                          "enum": [
                            "merchandise",
                            "documents",
                            "gift",
                            "returned_goods",
                            "sample"
                          ]
                        },
                        "non_delivery": {
                          "default": "return_to_sender",
                          "description": "Indicates what to do if a package is unable to be delivered.",
                          "title": "non_delivery",
                          "type": "string",
                          "enum": [
                            "return_to_sender",
                            "treat_as_abandoned"
                          ]
                        },
                        "customs_items": {
                          "type": "array",
                          "default": [],
                          "minItems": 0,
                          "description": "Customs declarations for each item in the shipment.",
                          "items": {
                            "title": "customs_item",
                            "type": "object",
                            "description": "The customs declaration for a single item in the shipment.",
                            "required": [
                              "customs_item_id"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "customs_item_id": {
                                "readOnly": true,
                                "description": "A string that uniquely identifies the customs item",
                                "title": "se_id",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 25,
                                "pattern": "^se(-[a-z0-9]+)+$",
                                "example": "se-28529731"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "maxLength": 100,
                                "default": null,
                                "description": "A description of the item"
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "The quantity of this item in the shipment."
                              },
                              "value": {
                                "type": "number",
                                "format": "double",
                                "default": 0,
                                "description": "The monetary value of each of this item."
                              },
                              "harmonized_tariff_code": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "example": 3926.1,
                                "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                              },
                              "country_of_origin": {
                                "nullable": true,
                                "default": null,
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                "title": "country_of_origin",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              }
                            }
                          }
                        }
                      }
                    },
                    "advanced_options": {
                      "description": "Advanced shipment options.  These are entirely optional.",
                      "title": "advanced_shipment_options",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "bill_to_account": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                        },
                        "bill_to_country_code": {
                          "nullable": true,
                          "default": null,
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "bill_to_party": {
                          "nullable": true,
                          "default": null,
                          "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                          "title": "bill_to_party",
                          "type": "string",
                          "enum": [
                            "recipient",
                            "third_party"
                          ]
                        },
                        "bill_to_postal_code": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                        },
                        "contains_alcohol": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the shipment contains alcohol."
                        },
                        "delivered_duty_paid": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                        },
                        "non_machinable": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                        },
                        "saturday_delivery": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enables Saturday delivery, if supported by the carrier."
                        },
                        "use_ups_ground_freight_pricing": {
                          "type": "boolean",
                          "nullable": true,
                          "default": null,
                          "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                        },
                        "freight_class": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "example": 77.5,
                          "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                        },
                        "custom_field1": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        },
                        "custom_field2": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        },
                        "custom_field3": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        }
                      }
                    },
                    "insurance_provider": {
                      "default": "none",
                      "description": "The insurance provider to use for any insured packages in the shipment.\n",
                      "title": "insurance_provider",
                      "type": "string",
                      "enum": [
                        "none",
                        "shipsurance",
                        "carrier",
                        "third_party"
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "readOnly": true,
                      "default": [],
                      "minItems": 0,
                      "items": {
                        "title": "tag",
                        "type": "object",
                        "description": "Tags are arbitrary strings that you can use to categorize shipments.  For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Fragile",
                            "description": "The tag name."
                          }
                        }
                      },
                      "description": "Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.\n"
                    },
                    "packages": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "title": "package",
                        "type": "object",
                        "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                        "required": [
                          "weight"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_code": {
                            "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                            "title": "package_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "small_flat_rate_box"
                          },
                          "weight": {
                            "description": "The package weight",
                            "title": "weight",
                            "type": "object",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          },
                          "dimensions": {
                            "description": "The package dimensions",
                            "title": "dimensions",
                            "type": "object",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "insured_value": {
                            "default": [
                              {
                                "currency": "usd",
                                "amount": 0
                              }
                            ],
                            "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "tracking_number": {
                            "readOnly": true,
                            "description": "The tracking number for the package.  The format depends on the carrier.\n",
                            "title": "tracking_number",
                            "type": "string",
                            "minLength": 1,
                            "example": "1Z932R800392060079"
                          },
                          "label_messages": {
                            "type": "object",
                            "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                            "required": [
                              "reference1",
                              "reference2",
                              "reference3"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "reference1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                              }
                            }
                          }
                        }
                      },
                      "description": "The packages in the shipment.\n\n> **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.\n"
                    },
                    "total_weight": {
                      "readOnly": true,
                      "description": "The combined weight of all packages in the shipment",
                      "title": "weight",
                      "type": "object",
                      "required": [
                        "value",
                        "unit"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "value": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "description": "The weight, in the specified unit"
                        },
                        "unit": {
                          "title": "weight_unit",
                          "type": "string",
                          "enum": [
                            "pound",
                            "ounce",
                            "gram",
                            "kilogram"
                          ],
                          "description": "The possible weight unit values"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.update_shipment",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "update_shipment_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "validate_address": {
                    "title": "validate_address",
                    "type": "string",
                    "enum": [
                      "no_validation",
                      "validate_only",
                      "validate_and_clean"
                    ],
                    "description": "The possible validate address values"
                  },
                  "shipment_id": {
                    "description": "A string that uniquely identifies the shipment",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "carrier_id": {
                    "description": "A string that uniquely identifies the carrier",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "service_code": {
                    "type": "string"
                  },
                  "external_shipment_id": {
                    "description": "A string that uniquely identifies the external shipment",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "ship_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "modified_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "shipment_status": {
                    "title": "shipment_status",
                    "type": "string",
                    "enum": [
                      "pending",
                      "processing",
                      "label_purchased",
                      "cancelled"
                    ],
                    "description": "The possible shipment status values"
                  },
                  "ship_to": {
                    "title": "address",
                    "type": "object",
                    "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                    "required": [
                      "address_line1",
                      "city_locality",
                      "state_province",
                      "postal_code",
                      "country_code",
                      "address_residential_indicator"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "John Doe",
                        "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                      },
                      "phone": {
                        "type": "string",
                        "minLength": 1,
                        "example": "+1 204-253-9411 ext. 123",
                        "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                      },
                      "company_name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "The Home Depot",
                        "description": "If this is a business address, then the company name should be specified here.\n"
                      },
                      "address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "example": "1999 Bishop Grandin Blvd.",
                        "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                      },
                      "address_line2": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Unit 408",
                        "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "address_line3": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Building #7",
                        "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "city_locality": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Winnipeg",
                        "description": "The name of the city or locality"
                      },
                      "state_province": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Manitoba",
                        "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "example": "MB R2M 3E8",
                        "description": "postal code"
                      },
                      "country_code": {
                        "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                        "title": "country_code",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "CA"
                      },
                      "address_residential_indicator": {
                        "default": "unknown",
                        "example": "no",
                        "description": "Indicates whether this is a residential address.",
                        "title": "address_residential_indicator",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "yes",
                          "no"
                        ]
                      }
                    }
                  },
                  "ship_from": {
                    "title": "address",
                    "type": "object",
                    "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                    "required": [
                      "address_line1",
                      "city_locality",
                      "state_province",
                      "postal_code",
                      "country_code",
                      "address_residential_indicator"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "John Doe",
                        "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                      },
                      "phone": {
                        "type": "string",
                        "minLength": 1,
                        "example": "+1 204-253-9411 ext. 123",
                        "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                      },
                      "company_name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "The Home Depot",
                        "description": "If this is a business address, then the company name should be specified here.\n"
                      },
                      "address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "example": "1999 Bishop Grandin Blvd.",
                        "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                      },
                      "address_line2": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Unit 408",
                        "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "address_line3": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Building #7",
                        "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "city_locality": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Winnipeg",
                        "description": "The name of the city or locality"
                      },
                      "state_province": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Manitoba",
                        "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "example": "MB R2M 3E8",
                        "description": "postal code"
                      },
                      "country_code": {
                        "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                        "title": "country_code",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "CA"
                      },
                      "address_residential_indicator": {
                        "default": "unknown",
                        "example": "no",
                        "description": "Indicates whether this is a residential address.",
                        "title": "address_residential_indicator",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "yes",
                          "no"
                        ]
                      }
                    }
                  },
                  "warehouse_id": {
                    "description": "A string that uniquely identifies the warehouse",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "return_to": {
                    "title": "address",
                    "type": "object",
                    "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                    "required": [
                      "address_line1",
                      "city_locality",
                      "state_province",
                      "postal_code",
                      "country_code",
                      "address_residential_indicator"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "John Doe",
                        "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                      },
                      "phone": {
                        "type": "string",
                        "minLength": 1,
                        "example": "+1 204-253-9411 ext. 123",
                        "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                      },
                      "company_name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "The Home Depot",
                        "description": "If this is a business address, then the company name should be specified here.\n"
                      },
                      "address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "example": "1999 Bishop Grandin Blvd.",
                        "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                      },
                      "address_line2": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Unit 408",
                        "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "address_line3": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Building #7",
                        "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "city_locality": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Winnipeg",
                        "description": "The name of the city or locality"
                      },
                      "state_province": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Manitoba",
                        "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "example": "MB R2M 3E8",
                        "description": "postal code"
                      },
                      "country_code": {
                        "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                        "title": "country_code",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "CA"
                      },
                      "address_residential_indicator": {
                        "default": "unknown",
                        "example": "no",
                        "description": "Indicates whether this is a residential address.",
                        "title": "address_residential_indicator",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "yes",
                          "no"
                        ]
                      }
                    }
                  },
                  "confirmation": {
                    "title": "confirmation",
                    "type": "string",
                    "enum": [
                      "none",
                      "delivery",
                      "signature",
                      "adult_signature",
                      "direct_signature"
                    ],
                    "description": "The possible confirmation values"
                  },
                  "customs": {
                    "title": "international_shipment_options",
                    "type": "object",
                    "description": "Options for international shipments, such as customs declarations.",
                    "required": [
                      "contents",
                      "non_delivery"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "contents": {
                        "default": "merchandise",
                        "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                        "title": "contents",
                        "type": "string",
                        "enum": [
                          "merchandise",
                          "documents",
                          "gift",
                          "returned_goods",
                          "sample"
                        ]
                      },
                      "non_delivery": {
                        "default": "return_to_sender",
                        "description": "Indicates what to do if a package is unable to be delivered.",
                        "title": "non_delivery",
                        "type": "string",
                        "enum": [
                          "return_to_sender",
                          "treat_as_abandoned"
                        ]
                      },
                      "customs_items": {
                        "type": "array",
                        "default": [],
                        "minItems": 0,
                        "description": "Customs declarations for each item in the shipment.",
                        "items": {
                          "title": "customs_item",
                          "type": "object",
                          "description": "The customs declaration for a single item in the shipment.",
                          "required": [
                            "customs_item_id"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "customs_item_id": {
                              "readOnly": true,
                              "description": "A string that uniquely identifies the customs item",
                              "title": "se_id",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 25,
                              "pattern": "^se(-[a-z0-9]+)+$",
                              "example": "se-28529731"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true,
                              "maxLength": 100,
                              "default": null,
                              "description": "A description of the item"
                            },
                            "quantity": {
                              "type": "integer",
                              "format": "int32",
                              "default": 0,
                              "description": "The quantity of this item in the shipment."
                            },
                            "value": {
                              "type": "number",
                              "format": "double",
                              "default": 0,
                              "description": "The monetary value of each of this item."
                            },
                            "harmonized_tariff_code": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "example": 3926.1,
                              "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                            },
                            "country_of_origin": {
                              "nullable": true,
                              "default": null,
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                              "title": "country_of_origin",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            }
                          }
                        }
                      }
                    }
                  },
                  "advanced_options": {
                    "title": "advanced_shipment_options",
                    "type": "object",
                    "description": "Advanced shipment options",
                    "additionalProperties": false,
                    "properties": {
                      "bill_to_account": {
                        "type": "string",
                        "nullable": true,
                        "default": null,
                        "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                      },
                      "bill_to_country_code": {
                        "nullable": true,
                        "default": null,
                        "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                        "title": "country_code",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "CA"
                      },
                      "bill_to_party": {
                        "nullable": true,
                        "default": null,
                        "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                        "title": "bill_to_party",
                        "type": "string",
                        "enum": [
                          "recipient",
                          "third_party"
                        ]
                      },
                      "bill_to_postal_code": {
                        "type": "string",
                        "nullable": true,
                        "default": null,
                        "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                      },
                      "contains_alcohol": {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates that the shipment contains alcohol."
                      },
                      "delivered_duty_paid": {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                      },
                      "non_machinable": {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                      },
                      "saturday_delivery": {
                        "type": "boolean",
                        "default": false,
                        "description": "Enables Saturday delivery, if supported by the carrier."
                      },
                      "use_ups_ground_freight_pricing": {
                        "type": "boolean",
                        "nullable": true,
                        "default": null,
                        "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                      },
                      "freight_class": {
                        "type": "string",
                        "nullable": true,
                        "default": null,
                        "example": 77.5,
                        "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                      },
                      "custom_field1": {
                        "type": "string",
                        "nullable": true,
                        "default": null,
                        "maxLength": 100,
                        "description": "An arbitrary field that can be used to store information about the shipment.\n"
                      },
                      "custom_field2": {
                        "type": "string",
                        "nullable": true,
                        "default": null,
                        "maxLength": 100,
                        "description": "An arbitrary field that can be used to store information about the shipment.\n"
                      },
                      "custom_field3": {
                        "type": "string",
                        "nullable": true,
                        "default": null,
                        "maxLength": 100,
                        "description": "An arbitrary field that can be used to store information about the shipment.\n"
                      }
                    }
                  },
                  "insurance_provider": {
                    "title": "insurance_provider",
                    "type": "string",
                    "enum": [
                      "none",
                      "shipsurance",
                      "carrier",
                      "third_party"
                    ],
                    "description": "The possible insurance provider values"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "title": "tag_response_body",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "packages": {
                    "type": "array",
                    "items": {
                      "title": "package",
                      "type": "object",
                      "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                      "required": [
                        "weight"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "package_code": {
                          "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                          "title": "package_code",
                          "type": "string",
                          "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                          "example": "small_flat_rate_box"
                        },
                        "weight": {
                          "description": "The package weight",
                          "title": "weight",
                          "type": "object",
                          "required": [
                            "value",
                            "unit"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "double",
                              "minimum": 0,
                              "exclusiveMinimum": true,
                              "description": "The weight, in the specified unit"
                            },
                            "unit": {
                              "title": "weight_unit",
                              "type": "string",
                              "enum": [
                                "pound",
                                "ounce",
                                "gram",
                                "kilogram"
                              ],
                              "description": "The possible weight unit values"
                            }
                          }
                        },
                        "dimensions": {
                          "description": "The package dimensions",
                          "title": "dimensions",
                          "type": "object",
                          "required": [
                            "unit",
                            "length",
                            "width",
                            "height"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "unit": {
                              "default": "inch",
                              "title": "dimension_unit",
                              "type": "string",
                              "enum": [
                                "inch",
                                "centimeter"
                              ],
                              "description": "The dimension units that are supported by ShipEngine."
                            },
                            "length": {
                              "type": "number",
                              "format": "double",
                              "minimum": 0,
                              "default": 0,
                              "description": "The length of the package, in the specified unit"
                            },
                            "width": {
                              "type": "number",
                              "format": "double",
                              "minimum": 0,
                              "default": 0,
                              "description": "The width of the package, in the specified unit"
                            },
                            "height": {
                              "type": "number",
                              "format": "double",
                              "minimum": 0,
                              "default": 0,
                              "description": "The length of the package, in the specified unit"
                            }
                          }
                        },
                        "insured_value": {
                          "default": [
                            {
                              "currency": "usd",
                              "amount": 0
                            }
                          ],
                          "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                          "title": "monetary_value",
                          "type": "object",
                          "required": [
                            "currency",
                            "amount"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "currency": {
                              "title": "currency",
                              "type": "string",
                              "enum": [
                                "usd",
                                "cad",
                                "aud",
                                "gbp",
                                "eur"
                              ],
                              "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                            },
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "minimum": 0,
                              "description": "The monetary amount, in the specified currency."
                            }
                          }
                        },
                        "tracking_number": {
                          "readOnly": true,
                          "description": "The tracking number for the package.  The format depends on the carrier.\n",
                          "title": "tracking_number",
                          "type": "string",
                          "minLength": 1,
                          "example": "1Z932R800392060079"
                        },
                        "label_messages": {
                          "type": "object",
                          "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                          "required": [
                            "reference1",
                            "reference2",
                            "reference3"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "reference1": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                            },
                            "reference2": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                            },
                            "reference3": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "total_weight": {
                    "readOnly": true,
                    "title": "weight",
                    "type": "object",
                    "description": "The weight of a package",
                    "required": [
                      "value",
                      "unit"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "value": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The weight, in the specified unit"
                      },
                      "unit": {
                        "title": "weight_unit",
                        "type": "string",
                        "enum": [
                          "pound",
                          "ounce",
                          "gram",
                          "kilogram"
                        ],
                        "description": "The possible weight unit values"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "create_shipment_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "address_validation": {
                      "title": "address_validation_result",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "status": {
                          "title": "address_validation_status",
                          "type": "string",
                          "enum": [
                            "unverified",
                            "verified",
                            "warning",
                            "error"
                          ],
                          "description": "The possible address validation status values"
                        },
                        "original_address": {
                          "title": "address",
                          "type": "object",
                          "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "matched_address": {
                          "title": "address",
                          "type": "object",
                          "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "messages": {
                          "type": "array",
                          "items": {
                            "title": "response_message",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "code": {
                                "title": "address_validation_code",
                                "type": "string",
                                "enum": [
                                  "a1000",
                                  "a1001",
                                  "a1002",
                                  "a1003",
                                  "a1004",
                                  "a1005",
                                  "a1006",
                                  "a1007",
                                  "a1008",
                                  "r1000",
                                  "r1001",
                                  "r1002",
                                  "r1003"
                                ],
                                "description": "The error codes that can be returned by the address validation API"
                              },
                              "message": {
                                "type": "string"
                              },
                              "type": {
                                "title": "address_validation_message_type",
                                "type": "string",
                                "enum": [
                                  "error",
                                  "warning",
                                  "info"
                                ],
                                "description": "The different types of messages that can be returned by the address validation API"
                              },
                              "detail_code": {
                                "title": "address_validation_detail_code",
                                "type": "string",
                                "enum": [
                                  "unsupported_country",
                                  "non_supported_country",
                                  "minimum_postal_code_verification_failed",
                                  "street_does_not_match_unique_street_name",
                                  "multiple_directionals",
                                  "multiple_matches",
                                  "suite_not_valid",
                                  "suite_missing",
                                  "invalid_house_number",
                                  "missing_house_number",
                                  "invalid_box_number",
                                  "missing_box_number",
                                  "missing_cmra_or_private_mail_box_number",
                                  "suite_has_no_secondaries",
                                  "postal_code_changed_or_added",
                                  "state_province_changed_or_added",
                                  "city_locality_changed_or_added",
                                  "urbanization_changed",
                                  "street_name_spelling_changed_or_added",
                                  "street_name_type_changed_or_added",
                                  "street_direction_changed_or_added",
                                  "suite_type_changed_or_added",
                                  "suite_unit_number_changed_or_added",
                                  "double_dependent_locality_changed_or_added",
                                  "subadministrative_area_changed_or_added",
                                  "subnational_area_changed_or_added",
                                  "p_o_box_changed_or_added",
                                  "premise_type_changed_or_added",
                                  "house_number_changed",
                                  "organization_changed_or_added",
                                  "partially_verified_to_state_level",
                                  "partially_verified_to_city_level",
                                  "partially_verified_to_street_level",
                                  "partially_verified_to_premise_level",
                                  "verified_to_state_level",
                                  "verified_to_city_level",
                                  "verified_to_street_level",
                                  "verified_to_premise_level",
                                  "verified_to_suite_level",
                                  "coded_to_street_lavel",
                                  "coded_to_neighborhood_level",
                                  "coded_to_community_level",
                                  "coded_to_state_level",
                                  "coded_to_rooftop_level",
                                  "coded_to_rooftop_interpolation_level",
                                  "name_max_length_exceeded",
                                  "phone_max_length_exceeded",
                                  "company_name_max_length_exceeded",
                                  "line1_min_max_length",
                                  "line2_max_length_exceeded",
                                  "line3_max_length_exceeded",
                                  "city_locality_max_length_exceeded",
                                  "state_province_max_length_exceeded",
                                  "invalid_postal_code",
                                  "country_invalid_length"
                                ],
                                "description": "The detailed error codes that can be returned by the address validation API"
                              }
                            }
                          }
                        }
                      }
                    },
                    "shipment_id": {
                      "description": "A string that uniquely identifies the shipment",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "carrier_id": {
                      "description": "A string that uniquely identifies the carrier",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "service_code": {
                      "type": "string"
                    },
                    "external_shipment_id": {
                      "description": "A string that uniquely identifies the external shipment",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "ship_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modified_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "shipment_status": {
                      "title": "shipment_status",
                      "type": "string",
                      "enum": [
                        "pending",
                        "processing",
                        "label_purchased",
                        "cancelled"
                      ],
                      "description": "The possible shipment status values"
                    },
                    "ship_to": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "ship_from": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "warehouse_id": {
                      "description": "A string that uniquely identifies the warehouse",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "return_to": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "confirmation": {
                      "title": "confirmation",
                      "type": "string",
                      "enum": [
                        "none",
                        "delivery",
                        "signature",
                        "adult_signature",
                        "direct_signature"
                      ],
                      "description": "The possible confirmation values"
                    },
                    "customs": {
                      "title": "international_shipment_options",
                      "type": "object",
                      "description": "Options for international shipments, such as customs declarations.",
                      "required": [
                        "contents",
                        "non_delivery"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "contents": {
                          "default": "merchandise",
                          "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                          "title": "contents",
                          "type": "string",
                          "enum": [
                            "merchandise",
                            "documents",
                            "gift",
                            "returned_goods",
                            "sample"
                          ]
                        },
                        "non_delivery": {
                          "default": "return_to_sender",
                          "description": "Indicates what to do if a package is unable to be delivered.",
                          "title": "non_delivery",
                          "type": "string",
                          "enum": [
                            "return_to_sender",
                            "treat_as_abandoned"
                          ]
                        },
                        "customs_items": {
                          "type": "array",
                          "default": [],
                          "minItems": 0,
                          "description": "Customs declarations for each item in the shipment.",
                          "items": {
                            "title": "customs_item",
                            "type": "object",
                            "description": "The customs declaration for a single item in the shipment.",
                            "required": [
                              "customs_item_id"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "customs_item_id": {
                                "readOnly": true,
                                "description": "A string that uniquely identifies the customs item",
                                "title": "se_id",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 25,
                                "pattern": "^se(-[a-z0-9]+)+$",
                                "example": "se-28529731"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "maxLength": 100,
                                "default": null,
                                "description": "A description of the item"
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "The quantity of this item in the shipment."
                              },
                              "value": {
                                "type": "number",
                                "format": "double",
                                "default": 0,
                                "description": "The monetary value of each of this item."
                              },
                              "harmonized_tariff_code": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "example": 3926.1,
                                "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                              },
                              "country_of_origin": {
                                "nullable": true,
                                "default": null,
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                "title": "country_of_origin",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              }
                            }
                          }
                        }
                      }
                    },
                    "advanced_options": {
                      "title": "advanced_shipment_options",
                      "type": "object",
                      "description": "Advanced shipment options",
                      "additionalProperties": false,
                      "properties": {
                        "bill_to_account": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                        },
                        "bill_to_country_code": {
                          "nullable": true,
                          "default": null,
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "bill_to_party": {
                          "nullable": true,
                          "default": null,
                          "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                          "title": "bill_to_party",
                          "type": "string",
                          "enum": [
                            "recipient",
                            "third_party"
                          ]
                        },
                        "bill_to_postal_code": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                        },
                        "contains_alcohol": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the shipment contains alcohol."
                        },
                        "delivered_duty_paid": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                        },
                        "non_machinable": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                        },
                        "saturday_delivery": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enables Saturday delivery, if supported by the carrier."
                        },
                        "use_ups_ground_freight_pricing": {
                          "type": "boolean",
                          "nullable": true,
                          "default": null,
                          "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                        },
                        "freight_class": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "example": 77.5,
                          "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                        },
                        "custom_field1": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        },
                        "custom_field2": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        },
                        "custom_field3": {
                          "type": "string",
                          "nullable": true,
                          "default": null,
                          "maxLength": 100,
                          "description": "An arbitrary field that can be used to store information about the shipment.\n"
                        }
                      }
                    },
                    "insurance_provider": {
                      "title": "insurance_provider",
                      "type": "string",
                      "enum": [
                        "none",
                        "shipsurance",
                        "carrier",
                        "third_party"
                      ],
                      "description": "The possible insurance provider values"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "title": "tag_response_body",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "packages": {
                      "type": "array",
                      "items": {
                        "title": "package",
                        "type": "object",
                        "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                        "required": [
                          "weight"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "package_code": {
                            "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                            "title": "package_code",
                            "type": "string",
                            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                            "example": "small_flat_rate_box"
                          },
                          "weight": {
                            "description": "The package weight",
                            "title": "weight",
                            "type": "object",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "value": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "description": "The weight, in the specified unit"
                              },
                              "unit": {
                                "title": "weight_unit",
                                "type": "string",
                                "enum": [
                                  "pound",
                                  "ounce",
                                  "gram",
                                  "kilogram"
                                ],
                                "description": "The possible weight unit values"
                              }
                            }
                          },
                          "dimensions": {
                            "description": "The package dimensions",
                            "title": "dimensions",
                            "type": "object",
                            "required": [
                              "unit",
                              "length",
                              "width",
                              "height"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "unit": {
                                "default": "inch",
                                "title": "dimension_unit",
                                "type": "string",
                                "enum": [
                                  "inch",
                                  "centimeter"
                                ],
                                "description": "The dimension units that are supported by ShipEngine."
                              },
                              "length": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The width of the package, in the specified unit"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "default": 0,
                                "description": "The length of the package, in the specified unit"
                              }
                            }
                          },
                          "insured_value": {
                            "default": [
                              {
                                "currency": "usd",
                                "amount": 0
                              }
                            ],
                            "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                            "title": "monetary_value",
                            "type": "object",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "tracking_number": {
                            "readOnly": true,
                            "description": "The tracking number for the package.  The format depends on the carrier.\n",
                            "title": "tracking_number",
                            "type": "string",
                            "minLength": 1,
                            "example": "1Z932R800392060079"
                          },
                          "label_messages": {
                            "type": "object",
                            "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                            "required": [
                              "reference1",
                              "reference2",
                              "reference3"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "reference1": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference2": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                              },
                              "reference3": {
                                "type": "string",
                                "nullable": true,
                                "default": null,
                                "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                              }
                            }
                          }
                        }
                      }
                    },
                    "total_weight": {
                      "readOnly": true,
                      "title": "weight",
                      "type": "object",
                      "description": "The weight of a package",
                      "required": [
                        "value",
                        "unit"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "value": {
                          "type": "number",
                          "format": "double",
                          "minimum": 0,
                          "exclusiveMinimum": true,
                          "description": "The weight, in the specified unit"
                        },
                        "unit": {
                          "title": "weight_unit",
                          "type": "string",
                          "enum": [
                            "pound",
                            "ounce",
                            "gram",
                            "kilogram"
                          ],
                          "description": "The possible weight unit values"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipments/{shipment_id}/cancel": {
      "put": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.cancel",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipments/{shipment_id}/errors": {
      "get": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.list_errors",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 1
            },
            "example": 2,
            "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "default": 25
            },
            "example": 50,
            "description": "The number of results to return per response."
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "shipment_errors_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "shipment_response_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error": {
                            "type": "string"
                          },
                          "shipment_id": {
                            "description": "A string that uniquely identifies the shipment",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "external_shipment_id": {
                            "description": "A string that uniquely identifies the external shipment",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          }
                        }
                      }
                    },
                    "links": {
                      "title": "pagination_link",
                      "type": "object",
                      "description": "Helpful links to other pages of results",
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "first": {
                          "description": "The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "last": {
                          "description": "The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.\n",
                          "title": "link",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "href"
                          ],
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "prev": {
                          "description": "The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        },
                        "next": {
                          "description": "The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.\n",
                          "title": "optional_link",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "href": {
                              "description": "The URL of the linked resource, if any",
                              "title": "url",
                              "type": "string",
                              "format": "url",
                              "minLength": 1,
                              "example": "http://api.shipengine.com/v1/labels/se-28529731"
                            },
                            "type": {
                              "type": "string",
                              "minLength": 1,
                              "description": "The type of resource, or the type of relationship to the parent resource"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipments/{shipment_id}/rates": {
      "get": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.get_rates_for_shipment",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "name": "created_at_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "rate_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "rates": {
                      "type": "array",
                      "items": {
                        "title": "rate",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "rate_id": {
                            "description": "A string that uniquely identifies the rate",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "rate_type": {
                            "title": "rate_type",
                            "type": "string",
                            "enum": [
                              "check",
                              "shipment"
                            ],
                            "description": "The possible rate type values"
                          },
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "shipping_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "insurance_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "confirmation_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "other_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "zone": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "package_type": {
                            "type": "string"
                          },
                          "delivery_days": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "guaranteed_service": {
                            "type": "boolean"
                          },
                          "estimated_delivery_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "carrier_delivery_days": {
                            "type": "string"
                          },
                          "ship_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "negotiated_rate": {
                            "type": "boolean"
                          },
                          "service_type": {
                            "type": "string"
                          },
                          "service_code": {
                            "type": "string"
                          },
                          "trackable": {
                            "type": "boolean"
                          },
                          "carrier_code": {
                            "type": "string"
                          },
                          "carrier_nickname": {
                            "type": "string"
                          },
                          "carrier_friendly_name": {
                            "type": "string"
                          },
                          "validation_status": {
                            "title": "validation_status",
                            "type": "string",
                            "enum": [
                              "valid",
                              "invalid",
                              "has_warnings",
                              "unknown"
                            ],
                            "description": "The possible validation status values"
                          },
                          "warning_messages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "error_messages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "invalid_rates": {
                      "type": "array",
                      "items": {
                        "title": "rate",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "rate_id": {
                            "description": "A string that uniquely identifies the rate",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "rate_type": {
                            "title": "rate_type",
                            "type": "string",
                            "enum": [
                              "check",
                              "shipment"
                            ],
                            "description": "The possible rate type values"
                          },
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "shipping_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "insurance_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "confirmation_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "other_amount": {
                            "title": "monetary_value",
                            "type": "object",
                            "description": "A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.\n",
                            "required": [
                              "currency",
                              "amount"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "currency": {
                                "title": "currency",
                                "type": "string",
                                "enum": [
                                  "usd",
                                  "cad",
                                  "aud",
                                  "gbp",
                                  "eur"
                                ],
                                "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "minimum": 0,
                                "description": "The monetary amount, in the specified currency."
                              }
                            }
                          },
                          "zone": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "package_type": {
                            "type": "string"
                          },
                          "delivery_days": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "guaranteed_service": {
                            "type": "boolean"
                          },
                          "estimated_delivery_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "carrier_delivery_days": {
                            "type": "string"
                          },
                          "ship_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "negotiated_rate": {
                            "type": "boolean"
                          },
                          "service_type": {
                            "type": "string"
                          },
                          "service_code": {
                            "type": "string"
                          },
                          "trackable": {
                            "type": "boolean"
                          },
                          "carrier_code": {
                            "type": "string"
                          },
                          "carrier_nickname": {
                            "type": "string"
                          },
                          "carrier_friendly_name": {
                            "type": "string"
                          },
                          "validation_status": {
                            "title": "validation_status",
                            "type": "string",
                            "enum": [
                              "valid",
                              "invalid",
                              "has_warnings",
                              "unknown"
                            ],
                            "description": "The possible validation status values"
                          },
                          "warning_messages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "error_messages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "rate_request_id": {
                      "description": "A string that uniquely identifies the rate request",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "shipment_id": {
                      "description": "A string that uniquely identifies the shipment",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "title": "rate_response_status",
                      "type": "string",
                      "enum": [
                        "working",
                        "completed",
                        "partial",
                        "error"
                      ],
                      "description": "The possible rate response status values"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "provider_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "carrier_id": {
                            "description": "A string that uniquely identifies the carrier",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipments/{shipment_id}/tags/{tag}": {
      "post": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.add_tag",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The requested object creation was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "shipment_add_tag_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "shipment_id": {
                      "description": "A string that uniquely identifies the shipment",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "tag": {
                      "title": "tag_response_body",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "shipments"
        ],
        "operationId": "shipments.remove_tag",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          },
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/shipments/recognize": {
      "summary": "Parse shipping info",
      "description": "Data often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's shipment-recognition API helps you extract meaningful shipping data (people's names, addresses, package weights and dimensions, insurance and delivery requirements, etc.) from this unstructured text.\n",
      "put": {
        "summary": "Parse shipping info",
        "description": "The shipment-recognition API makes it easy for you to extract shipping data from unstructured text, including people's names, addresses, package weights and dimensions, insurance and delivery requirements, and more.\n\nData often enters your system as unstructured text (for example: emails, SMS messages, support tickets, or other documents). ShipEngine's shipment-recognition API helps you extract meaningful, structured data from this unstructured text. The parsed shipment data is returned in the same structure that's used for other ShipEngine APIs, so you can easily use the parsed data to create a shipping label.\n\n> **Note:** Shipment recognition is currently supported for the United States, Canada, Australia, New Zealand, the United Kingdom, and Ireland.\n",
        "tags": [
          "shipments",
          "natural_language_processing"
        ],
        "operationId": "shipment.parse",
        "requestBody": {
          "required": true,
          "description": "The only required field is `text`, which is the text to be parsed. You can optionally also provide a `shipment` containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.\n",
          "content": {
            "application/json": {
              "schema": {
                "title": "recognize_shipment_request_body",
                "type": "object",
                "description": "The only required field is `text`, which is the text to be parsed. You can optionally also provide a `shipment` containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.\n",
                "required": [
                  "text"
                ],
                "additionalProperties": false,
                "properties": {
                  "text": {
                    "type": "string",
                    "minLength": 1,
                    "example": "I have a 4oz package that's 5x10x14in, and I need to ship it to Margie McMiller at 3800 North Lamar suite 200 in austin, tx 78652. Please send it via USPS first class and require an adult signature. It also needs to be insured for $400.\n",
                    "description": "The unstructured text that contains shipping-related entities"
                  },
                  "shipment": {
                    "description": "You can optionally provide a `shipment` object containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.\n",
                    "title": "partial_shipment",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "shipment_id": {
                        "readOnly": true,
                        "description": "A string that uniquely identifies the shipment",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "carrier_id": {
                        "description": "The carrier account that is billed for the shipping charges",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "service_code": {
                        "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                        "title": "service_code",
                        "type": "string",
                        "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                        "example": "usps_first_class_mail"
                      },
                      "external_shipment_id": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true,
                        "description": "You can optionally use this field to store your own identifier for this shipment.\n\n> **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.\n"
                      },
                      "ship_date": {
                        "description": "The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                        "title": "date",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                        "example": "2018-09-23T00:00:00.000Z"
                      },
                      "created_at": {
                        "readOnly": true,
                        "description": "The date and time that the shipment was created in ShipEngine.",
                        "title": "date_time",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                        "example": "2018-09-23T15:00:00.000Z"
                      },
                      "modified_at": {
                        "readOnly": true,
                        "description": "The date and time that the shipment was created or last modified.",
                        "title": "date_time",
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                        "example": "2018-09-23T15:00:00.000Z"
                      },
                      "shipment_status": {
                        "readOnly": true,
                        "default": "pending",
                        "description": "The current status of the shipment",
                        "title": "shipment_status",
                        "type": "string",
                        "enum": [
                          "pending",
                          "processing",
                          "label_purchased",
                          "cancelled"
                        ]
                      },
                      "ship_to": {
                        "description": "The recipient's mailing address",
                        "title": "address",
                        "type": "object",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "ship_from": {
                        "description": "The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://docs.shipengine.com/docs/create-a-warehouse).  Then you can simply specify the `warehouse_id` rather than the complete address each time.\n",
                        "title": "address",
                        "type": "object",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "warehouse_id": {
                        "nullable": true,
                        "default": null,
                        "description": "The [warehouse](https://docs.shipengine.com/docs/ship-from-a-warehouse) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.\n",
                        "title": "se_id",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 25,
                        "pattern": "^se(-[a-z0-9]+)+$",
                        "example": "se-28529731"
                      },
                      "return_to": {
                        "description": "The return address for this shipment.  Defaults to the `ship_from` address.\n",
                        "title": "address",
                        "type": "object",
                        "required": [
                          "address_line1",
                          "city_locality",
                          "state_province",
                          "postal_code",
                          "country_code",
                          "address_residential_indicator"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "John Doe",
                            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1,
                            "example": "+1 204-253-9411 ext. 123",
                            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                          },
                          "company_name": {
                            "type": "string",
                            "minLength": 1,
                            "example": "The Home Depot",
                            "description": "If this is a business address, then the company name should be specified here.\n"
                          },
                          "address_line1": {
                            "type": "string",
                            "minLength": 1,
                            "example": "1999 Bishop Grandin Blvd.",
                            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                          },
                          "address_line2": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Unit 408",
                            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "address_line3": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Building #7",
                            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                          },
                          "city_locality": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Winnipeg",
                            "description": "The name of the city or locality"
                          },
                          "state_province": {
                            "type": "string",
                            "minLength": 1,
                            "example": "Manitoba",
                            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                          },
                          "postal_code": {
                            "type": "string",
                            "minLength": 1,
                            "example": "MB R2M 3E8",
                            "description": "postal code"
                          },
                          "country_code": {
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "address_residential_indicator": {
                            "default": "unknown",
                            "example": "no",
                            "description": "Indicates whether this is a residential address.",
                            "title": "address_residential_indicator",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      "confirmation": {
                        "default": "none",
                        "description": "The type of delivery confirmation that is required for this shipment.",
                        "title": "confirmation",
                        "type": "string",
                        "enum": [
                          "none",
                          "delivery",
                          "signature",
                          "adult_signature",
                          "direct_signature"
                        ]
                      },
                      "customs": {
                        "nullable": true,
                        "default": null,
                        "description": "Customs information.  This is usually only needed for international shipments.\n",
                        "title": "international_shipment_options",
                        "type": "object",
                        "required": [
                          "contents",
                          "non_delivery"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "contents": {
                            "default": "merchandise",
                            "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                            "title": "contents",
                            "type": "string",
                            "enum": [
                              "merchandise",
                              "documents",
                              "gift",
                              "returned_goods",
                              "sample"
                            ]
                          },
                          "non_delivery": {
                            "default": "return_to_sender",
                            "description": "Indicates what to do if a package is unable to be delivered.",
                            "title": "non_delivery",
                            "type": "string",
                            "enum": [
                              "return_to_sender",
                              "treat_as_abandoned"
                            ]
                          },
                          "customs_items": {
                            "type": "array",
                            "default": [],
                            "minItems": 0,
                            "description": "Customs declarations for each item in the shipment.",
                            "items": {
                              "title": "customs_item",
                              "type": "object",
                              "description": "The customs declaration for a single item in the shipment.",
                              "required": [
                                "customs_item_id"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "customs_item_id": {
                                  "readOnly": true,
                                  "description": "A string that uniquely identifies the customs item",
                                  "title": "se_id",
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 25,
                                  "pattern": "^se(-[a-z0-9]+)+$",
                                  "example": "se-28529731"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "maxLength": 100,
                                  "default": null,
                                  "description": "A description of the item"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "format": "int32",
                                  "default": 0,
                                  "description": "The quantity of this item in the shipment."
                                },
                                "value": {
                                  "type": "number",
                                  "format": "double",
                                  "default": 0,
                                  "description": "The monetary value of each of this item."
                                },
                                "harmonized_tariff_code": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "example": 3926.1,
                                  "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                                },
                                "country_of_origin": {
                                  "nullable": true,
                                  "default": null,
                                  "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                  "title": "country_of_origin",
                                  "type": "string",
                                  "minLength": 2,
                                  "maxLength": 2,
                                  "example": "CA"
                                }
                              }
                            }
                          }
                        }
                      },
                      "advanced_options": {
                        "description": "Advanced shipment options.  These are entirely optional.",
                        "title": "advanced_shipment_options",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "bill_to_account": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                          },
                          "bill_to_country_code": {
                            "nullable": true,
                            "default": null,
                            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                            "title": "country_code",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 2,
                            "example": "CA"
                          },
                          "bill_to_party": {
                            "nullable": true,
                            "default": null,
                            "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                            "title": "bill_to_party",
                            "type": "string",
                            "enum": [
                              "recipient",
                              "third_party"
                            ]
                          },
                          "bill_to_postal_code": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                          },
                          "contains_alcohol": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that the shipment contains alcohol."
                          },
                          "delivered_duty_paid": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                          },
                          "non_machinable": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                          },
                          "saturday_delivery": {
                            "type": "boolean",
                            "default": false,
                            "description": "Enables Saturday delivery, if supported by the carrier."
                          },
                          "use_ups_ground_freight_pricing": {
                            "type": "boolean",
                            "nullable": true,
                            "default": null,
                            "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                          },
                          "freight_class": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "example": 77.5,
                            "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                          },
                          "custom_field1": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "maxLength": 100,
                            "description": "An arbitrary field that can be used to store information about the shipment.\n"
                          },
                          "custom_field2": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "maxLength": 100,
                            "description": "An arbitrary field that can be used to store information about the shipment.\n"
                          },
                          "custom_field3": {
                            "type": "string",
                            "nullable": true,
                            "default": null,
                            "maxLength": 100,
                            "description": "An arbitrary field that can be used to store information about the shipment.\n"
                          }
                        }
                      },
                      "insurance_provider": {
                        "default": "none",
                        "description": "The insurance provider to use for any insured packages in the shipment.\n",
                        "title": "insurance_provider",
                        "type": "string",
                        "enum": [
                          "none",
                          "shipsurance",
                          "carrier",
                          "third_party"
                        ]
                      },
                      "tags": {
                        "type": "array",
                        "readOnly": true,
                        "default": [],
                        "minItems": 0,
                        "items": {
                          "title": "tag",
                          "type": "object",
                          "description": "Tags are arbitrary strings that you can use to categorize shipments.  For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
                          "required": [
                            "name"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Fragile",
                              "description": "The tag name."
                            }
                          }
                        },
                        "description": "Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.\n"
                      },
                      "packages": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "title": "package",
                          "type": "object",
                          "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                          "required": [
                            "weight"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "package_code": {
                              "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                              "title": "package_code",
                              "type": "string",
                              "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                              "example": "small_flat_rate_box"
                            },
                            "weight": {
                              "description": "The package weight",
                              "title": "weight",
                              "type": "object",
                              "required": [
                                "value",
                                "unit"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "exclusiveMinimum": true,
                                  "description": "The weight, in the specified unit"
                                },
                                "unit": {
                                  "title": "weight_unit",
                                  "type": "string",
                                  "enum": [
                                    "pound",
                                    "ounce",
                                    "gram",
                                    "kilogram"
                                  ],
                                  "description": "The possible weight unit values"
                                }
                              }
                            },
                            "dimensions": {
                              "description": "The package dimensions",
                              "title": "dimensions",
                              "type": "object",
                              "required": [
                                "unit",
                                "length",
                                "width",
                                "height"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "unit": {
                                  "default": "inch",
                                  "title": "dimension_unit",
                                  "type": "string",
                                  "enum": [
                                    "inch",
                                    "centimeter"
                                  ],
                                  "description": "The dimension units that are supported by ShipEngine."
                                },
                                "length": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "default": 0,
                                  "description": "The length of the package, in the specified unit"
                                },
                                "width": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "default": 0,
                                  "description": "The width of the package, in the specified unit"
                                },
                                "height": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "default": 0,
                                  "description": "The length of the package, in the specified unit"
                                }
                              }
                            },
                            "insured_value": {
                              "default": [
                                {
                                  "currency": "usd",
                                  "amount": 0
                                }
                              ],
                              "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                              "title": "monetary_value",
                              "type": "object",
                              "required": [
                                "currency",
                                "amount"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "currency": {
                                  "title": "currency",
                                  "type": "string",
                                  "enum": [
                                    "usd",
                                    "cad",
                                    "aud",
                                    "gbp",
                                    "eur"
                                  ],
                                  "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                },
                                "amount": {
                                  "type": "number",
                                  "format": "double",
                                  "minimum": 0,
                                  "description": "The monetary amount, in the specified currency."
                                }
                              }
                            },
                            "tracking_number": {
                              "readOnly": true,
                              "description": "The tracking number for the package.  The format depends on the carrier.\n",
                              "title": "tracking_number",
                              "type": "string",
                              "minLength": 1,
                              "example": "1Z932R800392060079"
                            },
                            "label_messages": {
                              "type": "object",
                              "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                              "required": [
                                "reference1",
                                "reference2",
                                "reference3"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "reference1": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                                },
                                "reference2": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                                },
                                "reference3": {
                                  "type": "string",
                                  "nullable": true,
                                  "default": null,
                                  "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                                }
                              }
                            }
                          }
                        },
                        "description": "The packages in the shipment.\n\n> **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.\n"
                      },
                      "total_weight": {
                        "readOnly": true,
                        "description": "The combined weight of all packages in the shipment",
                        "title": "weight",
                        "type": "object",
                        "required": [
                          "value",
                          "unit"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "double",
                            "minimum": 0,
                            "exclusiveMinimum": true,
                            "description": "The weight, in the specified unit"
                          },
                          "unit": {
                            "title": "weight_unit",
                            "type": "string",
                            "enum": [
                              "pound",
                              "ounce",
                              "gram",
                              "kilogram"
                            ],
                            "description": "The possible weight unit values"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "text_only": {
                  "summary": "Text only",
                  "description": "This is the simplest way to call the shipment-recognition API. Just pass the text to be parsed and nothing else.\n",
                  "value": {
                    "text": "I have a 4oz package that's 5x10x14in, and I need to ship it to Margie McMiller at 3800 North Lamar suite 200 in austin, tx 78652. Please send it via USPS first class and require an adult signature. It also needs to be insured for $400.\n"
                  }
                },
                "some_known_fields": {
                  "summary": "Some known fields",
                  "description": "You can optionally provide a `shipment` object containing any already-known values. For example, you probably already know the `ship_from` address, and you may also already know what carrier and service you want to use.\n",
                  "value": {
                    "text": "I have a 4oz package that's 5x10x14in, and I need to ship it to Margie McMiller at 3800 North Lamar suite 200 in austin, tx 78652. Please send it via USPS first class and require an adult signature. It also needs to be insured for $400.\n",
                    "shipment": {
                      "service_code": "usps_first_class_mail",
                      "ship_from": {
                        "company_name": "My Awesome Store",
                        "phone": "555-555-5555",
                        "address_line1": "587 Shotwell St.",
                        "address_line2": "Suite 201",
                        "city_locality": "San Francisco",
                        "state_province": "CA",
                        "postal_code": 94110,
                        "country_code": "US",
                        "address_residential_indicator": "yes"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "recognize_shipment_response_body",
                  "type": "object",
                  "description": "The parsed shipment, as well as a confidence score and a list of all the shipping entities that were recognized in the text.\n",
                  "required": [
                    "score",
                    "shipment",
                    "entities"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "score": {
                      "type": "number",
                      "format": "double",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "A confidence score between zero and one that indicates how certain the API is that it understood the text.\n"
                    },
                    "shipment": {
                      "description": "The parsed shipment.  This shipment may not be complete, depending on how much information was included in the text and how confident the API is about each recognized entity.\n\n> **Note:** The shipment-recognition API does not currently perform any validation of the parsed addresses, so we recommend that you use the [address-validation API](https://docs.shipengine.com/docs/address-validation) to ensure that the addresses are correct.\n",
                      "title": "partial_shipment",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "shipment_id": {
                          "readOnly": true,
                          "description": "A string that uniquely identifies the shipment",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "carrier_id": {
                          "description": "The carrier account that is billed for the shipping charges",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "service_code": {
                          "description": "The [carrier service](https://docs.shipengine.com/docs/use-a-specific-service) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.\n",
                          "title": "service_code",
                          "type": "string",
                          "pattern": "^[a-z0-9]+(_[a-z0-9-]+)* ?$",
                          "example": "usps_first_class_mail"
                        },
                        "external_shipment_id": {
                          "type": "string",
                          "maxLength": 50,
                          "nullable": true,
                          "description": "You can optionally use this field to store your own identifier for this shipment.\n\n> **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.\n"
                        },
                        "ship_date": {
                          "description": "The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.\n",
                          "title": "date",
                          "type": "string",
                          "format": "date-time",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2}))?$",
                          "example": "2018-09-23T00:00:00.000Z"
                        },
                        "created_at": {
                          "readOnly": true,
                          "description": "The date and time that the shipment was created in ShipEngine.",
                          "title": "date_time",
                          "type": "string",
                          "format": "date-time",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                          "example": "2018-09-23T15:00:00.000Z"
                        },
                        "modified_at": {
                          "readOnly": true,
                          "description": "The date and time that the shipment was created or last modified.",
                          "title": "date_time",
                          "type": "string",
                          "format": "date-time",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
                          "example": "2018-09-23T15:00:00.000Z"
                        },
                        "shipment_status": {
                          "readOnly": true,
                          "default": "pending",
                          "description": "The current status of the shipment",
                          "title": "shipment_status",
                          "type": "string",
                          "enum": [
                            "pending",
                            "processing",
                            "label_purchased",
                            "cancelled"
                          ]
                        },
                        "ship_to": {
                          "description": "The recipient's mailing address",
                          "title": "address",
                          "type": "object",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "ship_from": {
                          "description": "The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://docs.shipengine.com/docs/create-a-warehouse).  Then you can simply specify the `warehouse_id` rather than the complete address each time.\n",
                          "title": "address",
                          "type": "object",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "warehouse_id": {
                          "nullable": true,
                          "default": null,
                          "description": "The [warehouse](https://docs.shipengine.com/docs/ship-from-a-warehouse) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.\n",
                          "title": "se_id",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 25,
                          "pattern": "^se(-[a-z0-9]+)+$",
                          "example": "se-28529731"
                        },
                        "return_to": {
                          "description": "The return address for this shipment.  Defaults to the `ship_from` address.\n",
                          "title": "address",
                          "type": "object",
                          "required": [
                            "address_line1",
                            "city_locality",
                            "state_province",
                            "postal_code",
                            "country_code",
                            "address_residential_indicator"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "John Doe",
                              "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 1,
                              "example": "+1 204-253-9411 ext. 123",
                              "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                            },
                            "company_name": {
                              "type": "string",
                              "minLength": 1,
                              "example": "The Home Depot",
                              "description": "If this is a business address, then the company name should be specified here.\n"
                            },
                            "address_line1": {
                              "type": "string",
                              "minLength": 1,
                              "example": "1999 Bishop Grandin Blvd.",
                              "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                            },
                            "address_line2": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Unit 408",
                              "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "address_line3": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Building #7",
                              "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                            },
                            "city_locality": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Winnipeg",
                              "description": "The name of the city or locality"
                            },
                            "state_province": {
                              "type": "string",
                              "minLength": 1,
                              "example": "Manitoba",
                              "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                            },
                            "postal_code": {
                              "type": "string",
                              "minLength": 1,
                              "example": "MB R2M 3E8",
                              "description": "postal code"
                            },
                            "country_code": {
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "address_residential_indicator": {
                              "default": "unknown",
                              "example": "no",
                              "description": "Indicates whether this is a residential address.",
                              "title": "address_residential_indicator",
                              "type": "string",
                              "enum": [
                                "unknown",
                                "yes",
                                "no"
                              ]
                            }
                          }
                        },
                        "confirmation": {
                          "default": "none",
                          "description": "The type of delivery confirmation that is required for this shipment.",
                          "title": "confirmation",
                          "type": "string",
                          "enum": [
                            "none",
                            "delivery",
                            "signature",
                            "adult_signature",
                            "direct_signature"
                          ]
                        },
                        "customs": {
                          "nullable": true,
                          "default": null,
                          "description": "Customs information.  This is usually only needed for international shipments.\n",
                          "title": "international_shipment_options",
                          "type": "object",
                          "required": [
                            "contents",
                            "non_delivery"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "contents": {
                              "default": "merchandise",
                              "description": "The type of contents in this shipment.  This may impact import duties or customs treatment.",
                              "title": "contents",
                              "type": "string",
                              "enum": [
                                "merchandise",
                                "documents",
                                "gift",
                                "returned_goods",
                                "sample"
                              ]
                            },
                            "non_delivery": {
                              "default": "return_to_sender",
                              "description": "Indicates what to do if a package is unable to be delivered.",
                              "title": "non_delivery",
                              "type": "string",
                              "enum": [
                                "return_to_sender",
                                "treat_as_abandoned"
                              ]
                            },
                            "customs_items": {
                              "type": "array",
                              "default": [],
                              "minItems": 0,
                              "description": "Customs declarations for each item in the shipment.",
                              "items": {
                                "title": "customs_item",
                                "type": "object",
                                "description": "The customs declaration for a single item in the shipment.",
                                "required": [
                                  "customs_item_id"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "customs_item_id": {
                                    "readOnly": true,
                                    "description": "A string that uniquely identifies the customs item",
                                    "title": "se_id",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 25,
                                    "pattern": "^se(-[a-z0-9]+)+$",
                                    "example": "se-28529731"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "maxLength": 100,
                                    "default": null,
                                    "description": "A description of the item"
                                  },
                                  "quantity": {
                                    "type": "integer",
                                    "format": "int32",
                                    "default": 0,
                                    "description": "The quantity of this item in the shipment."
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "double",
                                    "default": 0,
                                    "description": "The monetary value of each of this item."
                                  },
                                  "harmonized_tariff_code": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "example": 3926.1,
                                    "description": "The [Harmonized Tariff Code](https://en.wikipedia.org/wiki/Harmonized_System) of this item."
                                  },
                                  "country_of_origin": {
                                    "nullable": true,
                                    "default": null,
                                    "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) where this item originated\n",
                                    "title": "country_of_origin",
                                    "type": "string",
                                    "minLength": 2,
                                    "maxLength": 2,
                                    "example": "CA"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "advanced_options": {
                          "description": "Advanced shipment options.  These are entirely optional.",
                          "title": "advanced_shipment_options",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "bill_to_account": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "description": "This field is used to [bill shipping costs to a third party](https://docs.shipengine.com/docs/bill-a-third-party).  This field must be used in conjunction with the `bill_to_country_code`, `bill_to_party`, and `bill_to_postal_code` fields.\n"
                            },
                            "bill_to_country_code": {
                              "nullable": true,
                              "default": null,
                              "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1) of the third-party that is responsible for shipping costs.\n",
                              "title": "country_code",
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 2,
                              "example": "CA"
                            },
                            "bill_to_party": {
                              "nullable": true,
                              "default": null,
                              "description": "Indicates whether to bill shipping costs to the recipient or to a third-party.  When billing to a third-party, the `bill_to_account`, `bill_to_country_code`, and `bill_to_postal_code` fields must also be set.\n",
                              "title": "bill_to_party",
                              "type": "string",
                              "enum": [
                                "recipient",
                                "third_party"
                              ]
                            },
                            "bill_to_postal_code": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "description": "The postal code of the third-party that is responsible for shipping costs.\n"
                            },
                            "contains_alcohol": {
                              "type": "boolean",
                              "default": false,
                              "description": "Indicates that the shipment contains alcohol."
                            },
                            "delivered_duty_paid": {
                              "type": "boolean",
                              "default": false,
                              "description": "Indicates that the shipper is paying the international delivery duties for this shipment.  This option is supported by UPS, FedEx, and DHL Express.\n"
                            },
                            "non_machinable": {
                              "type": "boolean",
                              "default": false,
                              "description": "Indicates that the package cannot be processed automatically because it is too large or irregularly shaped. This is primarily for USPS shipments.  See [Section 1.2 of the USPS parcel standards](https://pe.usps.com/text/dmm300/101.htm#ep1047495) for details.\n"
                            },
                            "saturday_delivery": {
                              "type": "boolean",
                              "default": false,
                              "description": "Enables Saturday delivery, if supported by the carrier."
                            },
                            "use_ups_ground_freight_pricing": {
                              "type": "boolean",
                              "nullable": true,
                              "default": null,
                              "description": "Whether to use [UPS Ground Freight pricing](https://docs.shipengine.com/docs/ups-ground-freight).  If enabled, then a `freight_class` must also be specified.\n"
                            },
                            "freight_class": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "example": 77.5,
                              "description": "The National Motor Freight Traffic Association [freight class](http://www.nmfta.org/pages/nmfc?AspxAutoDetectCookieSupport=1), such as \"77.5\", \"110\", or \"250\".\n"
                            },
                            "custom_field1": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "maxLength": 100,
                              "description": "An arbitrary field that can be used to store information about the shipment.\n"
                            },
                            "custom_field2": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "maxLength": 100,
                              "description": "An arbitrary field that can be used to store information about the shipment.\n"
                            },
                            "custom_field3": {
                              "type": "string",
                              "nullable": true,
                              "default": null,
                              "maxLength": 100,
                              "description": "An arbitrary field that can be used to store information about the shipment.\n"
                            }
                          }
                        },
                        "insurance_provider": {
                          "default": "none",
                          "description": "The insurance provider to use for any insured packages in the shipment.\n",
                          "title": "insurance_provider",
                          "type": "string",
                          "enum": [
                            "none",
                            "shipsurance",
                            "carrier",
                            "third_party"
                          ]
                        },
                        "tags": {
                          "type": "array",
                          "readOnly": true,
                          "default": [],
                          "minItems": 0,
                          "items": {
                            "title": "tag",
                            "type": "object",
                            "description": "Tags are arbitrary strings that you can use to categorize shipments.  For example, you may want to use tags to distinguish between domestic and international shipments, or between insured and uninsured shipments.  Or maybe you want to create a tag for each of your customers so you can easily retrieve every shipment for a customer.\n",
                            "required": [
                              "name"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Fragile",
                                "description": "The tag name."
                              }
                            }
                          },
                          "description": "Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.\n"
                        },
                        "packages": {
                          "type": "array",
                          "minItems": 1,
                          "items": {
                            "title": "package",
                            "type": "object",
                            "description": "A package associated with a [shipping label](https://docs.shipengine.com/docs/quickstart-create-a-label)",
                            "required": [
                              "weight"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "package_code": {
                                "description": "The [package type](https://docs.shipengine.com/docs/list-carrier-package-types), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.\n",
                                "title": "package_code",
                                "type": "string",
                                "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
                                "example": "small_flat_rate_box"
                              },
                              "weight": {
                                "description": "The package weight",
                                "title": "weight",
                                "type": "object",
                                "required": [
                                  "value",
                                  "unit"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "exclusiveMinimum": true,
                                    "description": "The weight, in the specified unit"
                                  },
                                  "unit": {
                                    "title": "weight_unit",
                                    "type": "string",
                                    "enum": [
                                      "pound",
                                      "ounce",
                                      "gram",
                                      "kilogram"
                                    ],
                                    "description": "The possible weight unit values"
                                  }
                                }
                              },
                              "dimensions": {
                                "description": "The package dimensions",
                                "title": "dimensions",
                                "type": "object",
                                "required": [
                                  "unit",
                                  "length",
                                  "width",
                                  "height"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "unit": {
                                    "default": "inch",
                                    "title": "dimension_unit",
                                    "type": "string",
                                    "enum": [
                                      "inch",
                                      "centimeter"
                                    ],
                                    "description": "The dimension units that are supported by ShipEngine."
                                  },
                                  "length": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "default": 0,
                                    "description": "The length of the package, in the specified unit"
                                  },
                                  "width": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "default": 0,
                                    "description": "The width of the package, in the specified unit"
                                  },
                                  "height": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "default": 0,
                                    "description": "The length of the package, in the specified unit"
                                  }
                                }
                              },
                              "insured_value": {
                                "default": [
                                  {
                                    "currency": "usd",
                                    "amount": 0
                                  }
                                ],
                                "description": "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set.\n",
                                "title": "monetary_value",
                                "type": "object",
                                "required": [
                                  "currency",
                                  "amount"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "title": "currency",
                                    "type": "string",
                                    "enum": [
                                      "usd",
                                      "cad",
                                      "aud",
                                      "gbp",
                                      "eur"
                                    ],
                                    "description": "The currencies that are supported by ShipEngine.\n\n|Currency Code  | Description\n|---------------|-----------------------\n|`usd`          | United States Dollar\n|`cad`          | Canadian Dollar\n|`aud`          | Australian Dollar\n|`gbp`          | Great British Pound\n|`eur`          | Euro\n"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "description": "The monetary amount, in the specified currency."
                                  }
                                }
                              },
                              "tracking_number": {
                                "readOnly": true,
                                "description": "The tracking number for the package.  The format depends on the carrier.\n",
                                "title": "tracking_number",
                                "type": "string",
                                "minLength": 1,
                                "example": "1Z932R800392060079"
                              },
                              "label_messages": {
                                "type": "object",
                                "description": "Custom messages to print on the shipping label for the package.  These are typically used to print invoice numbers, product numbers, or other internal reference numbers.  Not all carriers support label messages. The number of lines and the maximum length of each line also varies by carrier.\n\n|Carrier            |Max lines |Max line length\n|-------------------|----------|--------------------\n|USPS (Stamps.com)  |3         |60\n|FedEx              |3         |35 for the first line. 30 for additional lines.\n|UPS                |2         |35\n|OnTrac             |2         |25\n",
                                "required": [
                                  "reference1",
                                  "reference2",
                                  "reference3"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "reference1": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "description": "The first line of the custom label message.  Some carriers may prefix this line with something like \"REF\", \"Reference\", \"Trx Ref No.\", etc.\n"
                                  },
                                  "reference2": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "description": "The second line of the custom label message.  Some carriers may prefix this line with something like \"INV\", \"Reference 2\", \"Trx Ref No.\", etc.\n"
                                  },
                                  "reference3": {
                                    "type": "string",
                                    "nullable": true,
                                    "default": null,
                                    "description": "The third line of the custom label message.  Some carriers may prefix this line with something like \"PO\", \"Reference 3\", etc.\n"
                                  }
                                }
                              }
                            }
                          },
                          "description": "The packages in the shipment.\n\n> **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.\n"
                        },
                        "total_weight": {
                          "readOnly": true,
                          "description": "The combined weight of all packages in the shipment",
                          "title": "weight",
                          "type": "object",
                          "required": [
                            "value",
                            "unit"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "number",
                              "format": "double",
                              "minimum": 0,
                              "exclusiveMinimum": true,
                              "description": "The weight, in the specified unit"
                            },
                            "unit": {
                              "title": "weight_unit",
                              "type": "string",
                              "enum": [
                                "pound",
                                "ounce",
                                "gram",
                                "kilogram"
                              ],
                              "description": "The possible weight unit values"
                            }
                          }
                        }
                      }
                    },
                    "entities": {
                      "type": "array",
                      "minItems": 0,
                      "items": {
                        "title": "recognized_entity",
                        "type": "object",
                        "description": "An entity is a single piece of data that was recognized in unstructured text.  For example, a city, a postal code, package dimensions, insured value, etc.  Each entity includes the original text and the parsed value.\n",
                        "required": [
                          "type",
                          "score",
                          "text",
                          "start_index",
                          "end_index"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": "string",
                            "minLength": 1,
                            "description": "The Entity type (e.g. \"weight\", \"person\", \"address_line1\", etc.)"
                          },
                          "score": {
                            "format": "double",
                            "minimum": 0,
                            "maximum": 1,
                            "type": "number",
                            "description": "A confidence score between zero and one that indicates how certain the API is that it correctly recognized this entity\n"
                          },
                          "text": {
                            "type": "string",
                            "minLength": 1,
                            "description": "The substring from the original text that was recognized as this entity"
                          },
                          "start_index": {
                            "type": "number",
                            "format": "integer",
                            "minimum": 0,
                            "description": "The index of the first character of this entity within the original text"
                          },
                          "end_index": {
                            "type": "number",
                            "format": "integer",
                            "minimum": 0,
                            "description": "The index of the last character of this entity within the original text"
                          },
                          "result": {
                            "type": "object",
                            "description": "The result object is different for each entity type.\n\nMost entity results have a `value` field, which is the normalized value of the entity.  For example, if the substring \"john doe\" was recognized as a \"person\" entity, then the value might be normalized to have proper capitalization (e.g. \"John Doe\").  Or if the substring \"ft worth\" was recognized as a \"city\" entity, then the value might be normalized to \"Fort Worth\".\n\nSome entities have other information in addition to, or instead of a `value`.  For example, a \"dimensions\" entity will have separate fields for `length`, `width`, `height`, and `unit`.\n"
                          }
                        }
                      },
                      "description": "All of the entities that were recognized in the text. An \"entity\" is a single piece of data, such as a city, a postal code, a carrier name, or a package weight.  Each entity includes the original text and the parsed value.\n"
                    }
                  }
                },
                "examples": {
                  "text_only": {
                    "description": "This response shows that the shipment-recognition API was able to recognize all the shipping entities in the text.  Notice that the `ship_from` field is not populated, since it wasn't included in the request or in the parsed text.\n",
                    "value": {
                      "score": 0.9031369611169101,
                      "shipment": {
                        "carrier_id": "se-118608",
                        "service_code": "usps_first_class_mail",
                        "confirmation": "adult_signature",
                        "ship_to": {
                          "name": "Margie McMiller",
                          "company_name": "Adult Signature",
                          "address_line1": "3800 North Lamar",
                          "address_line2": "Suite 200",
                          "city_locality": "Austin",
                          "state_province": "TX",
                          "postal_code": 78652,
                          "address_residential_indicator": "unknown"
                        },
                        "packages": [
                          {
                            "weight": {
                              "value": 4,
                              "unit": "ounce"
                            },
                            "dimensions": {
                              "length": 5,
                              "width": 10,
                              "height": 14,
                              "unit": "inch"
                            },
                            "insured_value": {
                              "amount": 400,
                              "currency": "USD"
                            }
                          }
                        ]
                      },
                      "entities": [
                        {
                          "type": "weight",
                          "score": 0.9805313966503588,
                          "text": "4oz",
                          "start_index": 9,
                          "end_index": 11,
                          "result": {
                            "value": 4,
                            "unit": "ounce"
                          }
                        },
                        {
                          "type": "dimensions",
                          "score": 1,
                          "text": "5x10x14in",
                          "start_index": 28,
                          "end_index": 36,
                          "result": {
                            "length": 5,
                            "width": 10,
                            "height": 14,
                            "unit": "inch"
                          }
                        },
                        {
                          "type": "dimension",
                          "score": 0.9805313966503588,
                          "text": "14in",
                          "start_index": 33,
                          "end_index": 36,
                          "result": {
                            "unit": "inch",
                            "value": 14
                          }
                        },
                        {
                          "type": "address",
                          "score": 0.9281558837267101,
                          "text": "to Margie McMiller at 3800 North Lamar suite 200 in austin, tx 78652. Please send it via USPS first class and require an adult signature",
                          "start_index": 61,
                          "end_index": 196,
                          "result": {
                            "direction": "to",
                            "name": "Margie McMiller",
                            "company_name": "Adult Signature",
                            "address_line1": "3800 North Lamar",
                            "address_line2": "Suite 200",
                            "city_locality": "Austin",
                            "state_province": "TX",
                            "postal_code": 78652
                          }
                        },
                        {
                          "type": "person",
                          "score": 0.9519646137063122,
                          "text": "Margie McMiller",
                          "start_index": 64,
                          "end_index": 78,
                          "result": {
                            "value": "Margie McMiller"
                          }
                        },
                        {
                          "type": "address_line",
                          "score": 0.9805313966503588,
                          "text": "3800 North Lamar",
                          "start_index": 83,
                          "end_index": 98,
                          "result": {
                            "line": 1,
                            "value": "3800 North Lamar"
                          }
                        },
                        {
                          "type": "number",
                          "score": 0.9805313966503588,
                          "text": 3800,
                          "start_index": 83,
                          "end_index": 86,
                          "result": {
                            "type": "cardinal",
                            "value": 3800
                          }
                        },
                        {
                          "type": "address_line",
                          "score": 1,
                          "text": "suite 200",
                          "start_index": 100,
                          "end_index": 108,
                          "result": {
                            "line": 2,
                            "value": "Suite 200"
                          }
                        },
                        {
                          "type": "dimension",
                          "score": 0.4792571878834418,
                          "text": "200 in",
                          "start_index": 106,
                          "end_index": 111,
                          "result": {
                            "unit": "inch",
                            "value": 200
                          }
                        },
                        {
                          "type": "city_locality",
                          "score": 0.9805313966503588,
                          "text": "austin",
                          "start_index": 113,
                          "end_index": 118,
                          "result": {
                            "value": "Austin"
                          }
                        },
                        {
                          "type": "state_province",
                          "score": 0.6082904353940255,
                          "text": "tx",
                          "start_index": 121,
                          "end_index": 122,
                          "result": {
                            "name": "Texas",
                            "value": "TX"
                          }
                        },
                        {
                          "type": "postal_code",
                          "score": 0.9519646137063122,
                          "text": 78652,
                          "start_index": 124,
                          "end_index": 128,
                          "result": {
                            "value": 78652
                          }
                        },
                        {
                          "type": "carrier",
                          "score": 0.9519646137063122,
                          "text": "USPS",
                          "start_index": 150,
                          "end_index": 153,
                          "result": {
                            "name": "Stamps.com",
                            "value": "se-118608"
                          }
                        },
                        {
                          "type": "service",
                          "score": 0.6082904353940255,
                          "text": "first class",
                          "start_index": 155,
                          "end_index": 165,
                          "result": {
                            "name": "USPS First Class Mail",
                            "value": "usps_first_class_mail"
                          }
                        },
                        {
                          "type": "number",
                          "score": 0.9805313966503588,
                          "text": "first",
                          "start_index": 155,
                          "end_index": 159,
                          "result": {
                            "type": "ordinal",
                            "value": 1
                          }
                        },
                        {
                          "type": "company",
                          "score": 0.9519646137063122,
                          "text": "adult signature",
                          "start_index": 182,
                          "end_index": 196,
                          "result": {
                            "value": "Adult Signature"
                          }
                        },
                        {
                          "type": "delivery_confirmation",
                          "score": 0.8530163983409642,
                          "text": "adult signature",
                          "start_index": 182,
                          "end_index": 196,
                          "result": {
                            "name": "Adult Signature",
                            "value": "adult_signature"
                          }
                        },
                        {
                          "type": "insurance",
                          "score": 0.8530163983409642,
                          "text": "insured for $400",
                          "start_index": 219,
                          "end_index": 234,
                          "result": {
                            "value": 400,
                            "unit": "USD"
                          }
                        },
                        {
                          "type": "insured_value",
                          "score": 1,
                          "text": "$400",
                          "start_index": 231,
                          "end_index": 234,
                          "result": {
                            "unit": "USD",
                            "value": 400
                          }
                        }
                      ]
                    }
                  },
                  "some_known_fields": {
                    "description": "This response is shows that the shipment-recognition API was able to recognize all the shipping entities in the text.  Notice that the `ship_from` and `service_code` fields are populated with the values that were provided in the request.\n",
                    "value": {
                      "score": 0.9031369611169101,
                      "shipment": {
                        "carrier_id": "se-118608",
                        "service_code": "usps_first_class_mail",
                        "confirmation": "adult_signature",
                        "ship_to": {
                          "name": "Margie McMiller",
                          "company_name": "Adult Signature",
                          "address_line1": "3800 North Lamar",
                          "address_line2": "Suite 200",
                          "city_locality": "Austin",
                          "state_province": "TX",
                          "postal_code": 78652,
                          "address_residential_indicator": "unknown"
                        },
                        "ship_from": {
                          "company_name": "My Awesome Store",
                          "phone": "555-555-5555",
                          "address_line1": "587 Shotwell St.",
                          "address_line2": "Suite 201",
                          "city_locality": "San Francisco",
                          "state_province": "CA",
                          "postal_code": 94110,
                          "country_code": "US",
                          "address_residential_indicator": "yes"
                        },
                        "packages": [
                          {
                            "weight": {
                              "value": 4,
                              "unit": "ounce"
                            },
                            "dimensions": {
                              "length": 5,
                              "width": 10,
                              "height": 14,
                              "unit": "inch"
                            },
                            "insured_value": {
                              "amount": 400,
                              "currency": "USD"
                            }
                          }
                        ]
                      },
                      "entities": [
                        {
                          "type": "weight",
                          "score": 0.9805313966503588,
                          "text": "4oz",
                          "start_index": 9,
                          "end_index": 11,
                          "result": {
                            "value": 4,
                            "unit": "ounce"
                          }
                        },
                        {
                          "type": "dimensions",
                          "score": 1,
                          "text": "5x10x14in",
                          "start_index": 28,
                          "end_index": 36,
                          "result": {
                            "length": 5,
                            "width": 10,
                            "height": 14,
                            "unit": "inch"
                          }
                        },
                        {
                          "type": "dimension",
                          "score": 0.9805313966503588,
                          "text": "14in",
                          "start_index": 33,
                          "end_index": 36,
                          "result": {
                            "unit": "inch",
                            "value": 14
                          }
                        },
                        {
                          "type": "address",
                          "score": 0.9281558837267101,
                          "text": "to Margie McMiller at 3800 North Lamar suite 200 in austin, tx 78652. Please send it via USPS first class and require an adult signature",
                          "start_index": 61,
                          "end_index": 196,
                          "result": {
                            "direction": "to",
                            "name": "Margie McMiller",
                            "company_name": "Adult Signature",
                            "address_line1": "3800 North Lamar",
                            "address_line2": "Suite 200",
                            "city_locality": "Austin",
                            "state_province": "TX",
                            "postal_code": 78652
                          }
                        },
                        {
                          "type": "person",
                          "score": 0.9519646137063122,
                          "text": "Margie McMiller",
                          "start_index": 64,
                          "end_index": 78,
                          "result": {
                            "value": "Margie McMiller"
                          }
                        },
                        {
                          "type": "address_line",
                          "score": 0.9805313966503588,
                          "text": "3800 North Lamar",
                          "start_index": 83,
                          "end_index": 98,
                          "result": {
                            "line": 1,
                            "value": "3800 North Lamar"
                          }
                        },
                        {
                          "type": "number",
                          "score": 0.9805313966503588,
                          "text": 3800,
                          "start_index": 83,
                          "end_index": 86,
                          "result": {
                            "type": "cardinal",
                            "value": 3800
                          }
                        },
                        {
                          "type": "address_line",
                          "score": 1,
                          "text": "suite 200",
                          "start_index": 100,
                          "end_index": 108,
                          "result": {
                            "line": 2,
                            "value": "Suite 200"
                          }
                        },
                        {
                          "type": "dimension",
                          "score": 0.4792571878834418,
                          "text": "200 in",
                          "start_index": 106,
                          "end_index": 111,
                          "result": {
                            "unit": "inch",
                            "value": 200
                          }
                        },
                        {
                          "type": "city_locality",
                          "score": 0.9805313966503588,
                          "text": "austin",
                          "start_index": 113,
                          "end_index": 118,
                          "result": {
                            "value": "Austin"
                          }
                        },
                        {
                          "type": "state_province",
                          "score": 0.6082904353940255,
                          "text": "tx",
                          "start_index": 121,
                          "end_index": 122,
                          "result": {
                            "name": "Texas",
                            "value": "TX"
                          }
                        },
                        {
                          "type": "postal_code",
                          "score": 0.9519646137063122,
                          "text": 78652,
                          "start_index": 124,
                          "end_index": 128,
                          "result": {
                            "value": 78652
                          }
                        },
                        {
                          "type": "carrier",
                          "score": 0.9519646137063122,
                          "text": "USPS",
                          "start_index": 150,
                          "end_index": 153,
                          "result": {
                            "name": "Stamps.com",
                            "value": "se-118608"
                          }
                        },
                        {
                          "type": "service",
                          "score": 0.6082904353940255,
                          "text": "first class",
                          "start_index": 155,
                          "end_index": 165,
                          "result": {
                            "name": "USPS First Class Mail",
                            "value": "usps_first_class_mail"
                          }
                        },
                        {
                          "type": "number",
                          "score": 0.9805313966503588,
                          "text": "first",
                          "start_index": 155,
                          "end_index": 159,
                          "result": {
                            "type": "ordinal",
                            "value": 1
                          }
                        },
                        {
                          "type": "company",
                          "score": 0.9519646137063122,
                          "text": "adult signature",
                          "start_index": 182,
                          "end_index": 196,
                          "result": {
                            "value": "Adult Signature"
                          }
                        },
                        {
                          "type": "delivery_confirmation",
                          "score": 0.8530163983409642,
                          "text": "adult signature",
                          "start_index": 182,
                          "end_index": 196,
                          "result": {
                            "name": "Adult Signature",
                            "value": "adult_signature"
                          }
                        },
                        {
                          "type": "insurance",
                          "score": 0.8530163983409642,
                          "text": "insured for $400",
                          "start_index": 219,
                          "end_index": 234,
                          "result": {
                            "value": 400,
                            "unit": "USD"
                          }
                        },
                        {
                          "type": "insured_value",
                          "score": 1,
                          "text": "$400",
                          "start_index": 231,
                          "end_index": 234,
                          "result": {
                            "unit": "USD",
                            "value": 400
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tags": {
      "get": {
        "tags": [
          "tags"
        ],
        "operationId": "tags.list_tags",
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "list_tag_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "title": "tag_response_body",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tags/{tag_name}": {
      "post": {
        "tags": [
          "tags"
        ],
        "operationId": "tags.add_tag",
        "parameters": [
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "tag_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tags"
        ],
        "operationId": "tags.delete",
        "parameters": [
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "list_tag_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "title": "tag_response_body",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tags/{tag_name}/{new_name}": {
      "put": {
        "tags": [
          "tags"
        ],
        "operationId": "tags.update_tag",
        "parameters": [
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "new_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tracking": {
      "get": {
        "tags": [
          "tracking"
        ],
        "operationId": "tracking.track",
        "parameters": [
          {
            "name": "carrier_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tracking_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "tracking_information_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "tracking_number": {
                      "type": "string"
                    },
                    "status_code": {
                      "type": "string"
                    },
                    "status_description": {
                      "type": "string"
                    },
                    "carrier_status_code": {
                      "type": "string"
                    },
                    "carrier_status_description": {
                      "type": "string"
                    },
                    "ship_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "estimated_delivery_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "actual_delivery_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "exception_description": {
                      "type": "string"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "title": "track_event",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "occurred_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "description": {
                            "type": "string"
                          },
                          "city_locality": {
                            "type": "string"
                          },
                          "state_province": {
                            "type": "string"
                          },
                          "postal_code": {
                            "type": "string"
                          },
                          "country_code": {
                            "type": "string"
                          },
                          "company_name": {
                            "type": "string"
                          },
                          "signer": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tracking/start": {
      "post": {
        "tags": [
          "tracking"
        ],
        "operationId": "tracking.start_tracking",
        "parameters": [
          {
            "name": "carrier_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tracking_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/tracking/stop": {
      "post": {
        "tags": [
          "tracking"
        ],
        "operationId": "tracking.stop_tracking",
        "parameters": [
          {
            "name": "carrier_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tracking_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/warehouses": {
      "get": {
        "tags": [
          "warehouses"
        ],
        "operationId": "warehouses.list",
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "warehouse_list_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "warehouses": {
                      "type": "array",
                      "items": {
                        "title": "warehouse",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "warehouse_id": {
                            "description": "A string that uniquely identifies the warehouse",
                            "title": "se_id",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 25,
                            "pattern": "^se(-[a-z0-9]+)+$",
                            "example": "se-28529731"
                          },
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "origin_address": {
                            "title": "address",
                            "type": "object",
                            "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                            "required": [
                              "address_line1",
                              "city_locality",
                              "state_province",
                              "postal_code",
                              "country_code",
                              "address_residential_indicator"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "John Doe",
                                "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                              },
                              "phone": {
                                "type": "string",
                                "minLength": 1,
                                "example": "+1 204-253-9411 ext. 123",
                                "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                              },
                              "company_name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "The Home Depot",
                                "description": "If this is a business address, then the company name should be specified here.\n"
                              },
                              "address_line1": {
                                "type": "string",
                                "minLength": 1,
                                "example": "1999 Bishop Grandin Blvd.",
                                "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                              },
                              "address_line2": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Unit 408",
                                "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "address_line3": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Building #7",
                                "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "city_locality": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Winnipeg",
                                "description": "The name of the city or locality"
                              },
                              "state_province": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Manitoba",
                                "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                              },
                              "postal_code": {
                                "type": "string",
                                "minLength": 1,
                                "example": "MB R2M 3E8",
                                "description": "postal code"
                              },
                              "country_code": {
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "address_residential_indicator": {
                                "default": "unknown",
                                "example": "no",
                                "description": "Indicates whether this is a residential address.",
                                "title": "address_residential_indicator",
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "yes",
                                  "no"
                                ]
                              }
                            }
                          },
                          "return_address": {
                            "title": "address",
                            "type": "object",
                            "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                            "required": [
                              "address_line1",
                              "city_locality",
                              "state_province",
                              "postal_code",
                              "country_code",
                              "address_residential_indicator"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "John Doe",
                                "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                              },
                              "phone": {
                                "type": "string",
                                "minLength": 1,
                                "example": "+1 204-253-9411 ext. 123",
                                "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                              },
                              "company_name": {
                                "type": "string",
                                "minLength": 1,
                                "example": "The Home Depot",
                                "description": "If this is a business address, then the company name should be specified here.\n"
                              },
                              "address_line1": {
                                "type": "string",
                                "minLength": 1,
                                "example": "1999 Bishop Grandin Blvd.",
                                "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                              },
                              "address_line2": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Unit 408",
                                "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "address_line3": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Building #7",
                                "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                              },
                              "city_locality": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Winnipeg",
                                "description": "The name of the city or locality"
                              },
                              "state_province": {
                                "type": "string",
                                "minLength": 1,
                                "example": "Manitoba",
                                "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                              },
                              "postal_code": {
                                "type": "string",
                                "minLength": 1,
                                "example": "MB R2M 3E8",
                                "description": "postal code"
                              },
                              "country_code": {
                                "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                                "title": "country_code",
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "example": "CA"
                              },
                              "address_residential_indicator": {
                                "default": "unknown",
                                "example": "no",
                                "description": "Indicates whether this is a residential address.",
                                "title": "address_residential_indicator",
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "yes",
                                  "no"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "warehouses"
        ],
        "operationId": "warehouses.create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "warehouse_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "warehouse_id": {
                    "description": "A string that uniquely identifies the warehouse",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "name": {
                    "type": "string"
                  },
                  "origin_address": {
                    "title": "address",
                    "type": "object",
                    "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                    "required": [
                      "address_line1",
                      "city_locality",
                      "state_province",
                      "postal_code",
                      "country_code",
                      "address_residential_indicator"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "John Doe",
                        "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                      },
                      "phone": {
                        "type": "string",
                        "minLength": 1,
                        "example": "+1 204-253-9411 ext. 123",
                        "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                      },
                      "company_name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "The Home Depot",
                        "description": "If this is a business address, then the company name should be specified here.\n"
                      },
                      "address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "example": "1999 Bishop Grandin Blvd.",
                        "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                      },
                      "address_line2": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Unit 408",
                        "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "address_line3": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Building #7",
                        "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "city_locality": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Winnipeg",
                        "description": "The name of the city or locality"
                      },
                      "state_province": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Manitoba",
                        "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "example": "MB R2M 3E8",
                        "description": "postal code"
                      },
                      "country_code": {
                        "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                        "title": "country_code",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "CA"
                      },
                      "address_residential_indicator": {
                        "default": "unknown",
                        "example": "no",
                        "description": "Indicates whether this is a residential address.",
                        "title": "address_residential_indicator",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "yes",
                          "no"
                        ]
                      }
                    }
                  },
                  "return_address": {
                    "title": "address",
                    "type": "object",
                    "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                    "required": [
                      "address_line1",
                      "city_locality",
                      "state_province",
                      "postal_code",
                      "country_code",
                      "address_residential_indicator"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "John Doe",
                        "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                      },
                      "phone": {
                        "type": "string",
                        "minLength": 1,
                        "example": "+1 204-253-9411 ext. 123",
                        "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                      },
                      "company_name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "The Home Depot",
                        "description": "If this is a business address, then the company name should be specified here.\n"
                      },
                      "address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "example": "1999 Bishop Grandin Blvd.",
                        "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                      },
                      "address_line2": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Unit 408",
                        "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "address_line3": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Building #7",
                        "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "city_locality": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Winnipeg",
                        "description": "The name of the city or locality"
                      },
                      "state_province": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Manitoba",
                        "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "example": "MB R2M 3E8",
                        "description": "postal code"
                      },
                      "country_code": {
                        "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                        "title": "country_code",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "CA"
                      },
                      "address_residential_indicator": {
                        "default": "unknown",
                        "example": "no",
                        "description": "Indicates whether this is a residential address.",
                        "title": "address_residential_indicator",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "yes",
                          "no"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "warehouse_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "warehouse_id": {
                      "description": "A string that uniquely identifies the warehouse",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "name": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "origin_address": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "return_address": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/warehouses/{warehouse_id}": {
      "get": {
        "tags": [
          "warehouses"
        ],
        "operationId": "warehouses.get_by_id",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was a success.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "warehouse_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "warehouse_id": {
                      "description": "A string that uniquely identifies the warehouse",
                      "title": "se_id",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 25,
                      "pattern": "^se(-[a-z0-9]+)+$",
                      "example": "se-28529731"
                    },
                    "name": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "origin_address": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    },
                    "return_address": {
                      "title": "address",
                      "type": "object",
                      "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                      "required": [
                        "address_line1",
                        "city_locality",
                        "state_province",
                        "postal_code",
                        "country_code",
                        "address_residential_indicator"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "John Doe",
                          "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                        },
                        "phone": {
                          "type": "string",
                          "minLength": 1,
                          "example": "+1 204-253-9411 ext. 123",
                          "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                        },
                        "company_name": {
                          "type": "string",
                          "minLength": 1,
                          "example": "The Home Depot",
                          "description": "If this is a business address, then the company name should be specified here.\n"
                        },
                        "address_line1": {
                          "type": "string",
                          "minLength": 1,
                          "example": "1999 Bishop Grandin Blvd.",
                          "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                        },
                        "address_line2": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Unit 408",
                          "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "address_line3": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Building #7",
                          "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                        },
                        "city_locality": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Winnipeg",
                          "description": "The name of the city or locality"
                        },
                        "state_province": {
                          "type": "string",
                          "minLength": 1,
                          "example": "Manitoba",
                          "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1,
                          "example": "MB R2M 3E8",
                          "description": "postal code"
                        },
                        "country_code": {
                          "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                          "title": "country_code",
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 2,
                          "example": "CA"
                        },
                        "address_residential_indicator": {
                          "default": "unknown",
                          "example": "no",
                          "description": "Indicates whether this is a residential address.",
                          "title": "address_residential_indicator",
                          "type": "string",
                          "enum": [
                            "unknown",
                            "yes",
                            "no"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "warehouses"
        ],
        "operationId": "warehouses.update",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "warehouse_request_body",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "warehouse_id": {
                    "description": "A string that uniquely identifies the warehouse",
                    "title": "se_id",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 25,
                    "pattern": "^se(-[a-z0-9]+)+$",
                    "example": "se-28529731"
                  },
                  "name": {
                    "type": "string"
                  },
                  "origin_address": {
                    "title": "address",
                    "type": "object",
                    "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                    "required": [
                      "address_line1",
                      "city_locality",
                      "state_province",
                      "postal_code",
                      "country_code",
                      "address_residential_indicator"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "John Doe",
                        "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                      },
                      "phone": {
                        "type": "string",
                        "minLength": 1,
                        "example": "+1 204-253-9411 ext. 123",
                        "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                      },
                      "company_name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "The Home Depot",
                        "description": "If this is a business address, then the company name should be specified here.\n"
                      },
                      "address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "example": "1999 Bishop Grandin Blvd.",
                        "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                      },
                      "address_line2": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Unit 408",
                        "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "address_line3": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Building #7",
                        "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "city_locality": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Winnipeg",
                        "description": "The name of the city or locality"
                      },
                      "state_province": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Manitoba",
                        "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "example": "MB R2M 3E8",
                        "description": "postal code"
                      },
                      "country_code": {
                        "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                        "title": "country_code",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "CA"
                      },
                      "address_residential_indicator": {
                        "default": "unknown",
                        "example": "no",
                        "description": "Indicates whether this is a residential address.",
                        "title": "address_residential_indicator",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "yes",
                          "no"
                        ]
                      }
                    }
                  },
                  "return_address": {
                    "title": "address",
                    "type": "object",
                    "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
                    "required": [
                      "address_line1",
                      "city_locality",
                      "state_province",
                      "postal_code",
                      "country_code",
                      "address_residential_indicator"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "John Doe",
                        "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n"
                      },
                      "phone": {
                        "type": "string",
                        "minLength": 1,
                        "example": "+1 204-253-9411 ext. 123",
                        "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n"
                      },
                      "company_name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "The Home Depot",
                        "description": "If this is a business address, then the company name should be specified here.\n"
                      },
                      "address_line1": {
                        "type": "string",
                        "minLength": 1,
                        "example": "1999 Bishop Grandin Blvd.",
                        "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n"
                      },
                      "address_line2": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Unit 408",
                        "description": "The second line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "address_line3": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Building #7",
                        "description": "The third line of the street address.  For some addresses, this line may not be needed.\n"
                      },
                      "city_locality": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Winnipeg",
                        "description": "The name of the city or locality"
                      },
                      "state_province": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Manitoba",
                        "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n"
                      },
                      "postal_code": {
                        "type": "string",
                        "minLength": 1,
                        "example": "MB R2M 3E8",
                        "description": "postal code"
                      },
                      "country_code": {
                        "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
                        "title": "country_code",
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "example": "CA"
                      },
                      "address_residential_indicator": {
                        "default": "unknown",
                        "example": "no",
                        "description": "Indicates whether this is a residential address.",
                        "title": "address_residential_indicator",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "yes",
                          "no"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "warehouses"
        ],
        "operationId": "warehouses.delete",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "se_id",
              "type": "string",
              "minLength": 1,
              "maxLength": 25,
              "pattern": "^se(-[a-z0-9]+)+$",
              "example": "se-28529731",
              "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc."
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              },
              "application/json": {
                "schema": {
                  "title": "empty_response_body",
                  "type": "string",
                  "maxLength": 0
                }
              }
            }
          },
          "400": {
            "description": "The request contained errors.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on ShipEngine's side.\n\n> This error will automatically be reported to our engineers.\n",
            "content": {
              "application/json": {
                "schema": {
                  "title": "error_response_body",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "request_id": {
                      "description": "A UUID that uniquely identifies the request id",
                      "title": "uuid",
                      "type": "string",
                      "format": "uuid",
                      "minLength": 36,
                      "maxLength": 36,
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "example": "aa3d8e8e-462b-4476-9618-72db7f7b7009"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "title": "api_error",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error_code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api-key",
        "in": "header",
        "description": "All requests to ShipEngine must include an API key in order to be authenticated. Any number of API keys can be generated within the ShipEngine dashboard and are unique to your account. Your API keys give full access to ShipEngine's functionality and therefore should be guarded in the same way you would guard a password or other application credentials. Once you have generated an API key you simply add it to your request as an HTTP header named the api-key.\n\nFind your ShipEngine API keys in the Dashboard: https://app.shipengine.com/#/portal/apimanagement\n"
      }
    }
  }
}